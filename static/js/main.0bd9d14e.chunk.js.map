{"version":3,"sources":["data/routes.ts","components/Template/Navigation.tsx","data/contact.tsx","components/Contact/ContactIcons.tsx","components/StyledLink.tsx","components/Template/SideBar.tsx","layout/Main.tsx","data/theme.ts","App.tsx","hooks/useAppTheme.ts","reportWebVitals.ts","index.tsx","components/StyledTypography.tsx","components/StyledNavLink.tsx"],"names":["routes","index","label","path","indexLinks","filter","link","nonIndexLinks","DesktopNavigation","AppBar","variant","position","sx","justifyContent","alignItems","Toolbar","Stack","direction","spacing","map","indexLink","StyledNavLink","to","StyledTypography","display","color","bold","capitalized","nonIndexLink","Divider","orientation","exact","activeStyle","textDecoration","MobileMenu","React","useState","anchorElement","setAnchorElement","isMenuOpen","Boolean","onNavigationClick","Fab","undefined","bottom","right","size","disableRipple","onClick","event","currentTarget","Menu","id","anchorEl","open","onClose","MenuListProps","MenuItem","MobileNavigation","flexGrow","Box","flexDirection","py","Avatar","src","process","width","height","Navigation","Hidden","mdUp","mdDown","contacts","icon","ContactIcons","contact","Link","href","target","IconButton","StyledLink","bottomBorder","typographyProps","children","rest","transformedLabel","toUpperCase","style","Typography","transition","borderBottom","fontWeight","component","LearnMoreLink","SideBar","resumePageRoute","useRouteMatch","fontVariant","paragraph","isExact","Main","mt","Container","Grid","container","item","xs","md","lg","defaultTheme","palette","primary","main","secondary","background","default","Home","lazy","About","Resume","Projects","Stats","Contact","NotFound","App","theme","createTheme","useAppTheme","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","basename","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictApp","StrictMode","rootElement","document","getElementById","hasChildNodes","hydrate","render","fontVariantStyles","normal","title","fontSize","fontFamily","letterSpacing","subtitle","fontVariantStyle","capitalizedChildren","toString"],"mappings":"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","file":"static/js/main.0bd9d14e.chunk.js","sourcesContent":["const routes = [\r\n    {\r\n        index: true,\r\n        label: \"Nilesh Moradiya\",\r\n        path: '/',\r\n    },\r\n    {\r\n        label: 'About',\r\n        path: '/about',\r\n    },\r\n    {\r\n        label: 'Resume',\r\n        path: '/resume',\r\n    },\r\n    {\r\n        label: 'Projects',\r\n        path: '/projects',\r\n    },\r\n    {\r\n        label: 'Stats',\r\n        path: '/stats',\r\n    },\r\n    {\r\n        label: 'Contact',\r\n        path: '/contact',\r\n    },\r\n];\r\n\r\nexport default routes;\r\n","import {\r\n  AppBar,\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  Fab,\r\n  Hidden,\r\n  Menu,\r\n  MenuItem,\r\n  Stack,\r\n  Toolbar,\r\n} from '@material-ui/core';\r\nimport React, { Fragment } from 'react';\r\n\r\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\r\nimport StyledNavLink from '../StyledNavLink';\r\nimport StyledTypography from '../StyledTypography';\r\nimport routes from '../../data/routes';\r\n\r\nconst { PUBLIC_URL } = process.env;\r\nconst indexLinks = routes.filter((link) => link.index);\r\nconst nonIndexLinks = routes.filter((link) => !link.index);\r\n\r\nconst DesktopNavigation = () => {\r\n  return (\r\n    <AppBar\r\n      variant=\"outlined\"\r\n      position=\"sticky\"\r\n      sx={{\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}>\r\n      <Toolbar variant=\"dense\">\r\n        <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n          {indexLinks.map((indexLink) => (\r\n            <StyledNavLink\r\n              key={indexLink.label}\r\n              to={indexLink.path}\r\n              label={indexLink.label}>\r\n              <StyledTypography\r\n                variant=\"button\"\r\n                display=\"inline\"\r\n                color=\"text.primary\"\r\n                bold={true}\r\n                capitalized={true}>\r\n                {indexLink.label}\r\n              </StyledTypography>\r\n            </StyledNavLink>\r\n          ))}\r\n          {nonIndexLinks.map((nonIndexLink) => (\r\n            <Fragment key={nonIndexLink.label}>\r\n              <Divider orientation=\"vertical\" />\r\n              <StyledNavLink\r\n                exact\r\n                to={nonIndexLink.path}\r\n                label={nonIndexLink.label}\r\n                activeStyle={{\r\n                  textDecoration: 'underline',\r\n                }}>\r\n                <StyledTypography\r\n                  variant=\"overline\"\r\n                  display=\"inline\"\r\n                  color=\"text.primary\"\r\n                  capitalized={true}>\r\n                  {nonIndexLink.label}\r\n                </StyledTypography>\r\n              </StyledNavLink>\r\n            </Fragment>\r\n          ))}\r\n        </Stack>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst MobileMenu = () => {\r\n  const [anchorElement, setAnchorElement] = React.useState<null | HTMLElement>(\r\n    null,\r\n  );\r\n  const isMenuOpen = Boolean(anchorElement);\r\n\r\n  const openMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorElement(event.currentTarget);\r\n  };\r\n\r\n  const onNavigationClick = () => {\r\n    setAnchorElement(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Fab\r\n        aria-expanded={isMenuOpen ? 'true' : undefined}\r\n        sx={{\r\n          position: 'absolute',\r\n          bottom: 16,\r\n          right: 16,\r\n        }}\r\n        size=\"medium\"\r\n        disableRipple\r\n        onClick={openMenuClick}>\r\n        <MenuRoundedIcon />\r\n      </Fab>\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorElement}\r\n        open={isMenuOpen}\r\n        onClose={onNavigationClick}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'basic-button',\r\n        }}>\r\n        {indexLinks.map((indexLink) => (\r\n          <MenuItem onClick={onNavigationClick} key={indexLink.label}>\r\n            <StyledNavLink\r\n              exact\r\n              to={indexLink.path}\r\n              label={indexLink.label}\r\n              activeStyle={{\r\n                textDecoration: 'underline',\r\n              }}>\r\n              <StyledTypography\r\n                variant=\"button\"\r\n                display=\"inline\"\r\n                color=\"text.primary\"\r\n                bold={true}\r\n                capitalized={true}>\r\n                {indexLink.label}\r\n              </StyledTypography>\r\n            </StyledNavLink>\r\n          </MenuItem>\r\n        ))}\r\n        {nonIndexLinks.map((nonIndexLink) => (\r\n          <MenuItem onClick={onNavigationClick} key={nonIndexLink.label}>\r\n            <Divider orientation=\"horizontal\" />\r\n            <StyledNavLink\r\n              exact\r\n              to={nonIndexLink.path}\r\n              label={nonIndexLink.label}\r\n              activeStyle={{\r\n                textDecoration: 'underline',\r\n              }}>\r\n              <StyledTypography\r\n                variant=\"overline\"\r\n                display=\"inline\"\r\n                color=\"text.primary\"\r\n                capitalized={true}>\r\n                {nonIndexLink.label}\r\n              </StyledTypography>\r\n            </StyledNavLink>\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nconst MobileNavigation = () => {\r\n  return (\r\n    <>\r\n      <AppBar variant=\"outlined\" position=\"sticky\" sx={{ flexGrow: 1 }}>\r\n        <Toolbar variant=\"dense\">\r\n          <Box justifyContent=\"center\" sx={{ flexGrow: 1 }}>\r\n            <StyledNavLink to=\"/\" label=\"Home\">\r\n              <StyledTypography variant=\"button\" bold={true} capitalized={true}>\r\n                Nilesh Moradiya\r\n              </StyledTypography>\r\n            </StyledNavLink>\r\n          </Box>\r\n          <Box flexDirection=\"row-reverse\" sx={{ py: 1 }}>\r\n            <StyledNavLink to=\"/\" label=\"Home\">\r\n              <Avatar\r\n                src={`${PUBLIC_URL}/images/me.jpg`}\r\n                sx={{\r\n                  width: 50,\r\n                  height: 50,\r\n                }}>\r\n                N M\r\n              </Avatar>\r\n            </StyledNavLink>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <MobileMenu />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <>\r\n      <Hidden mdUp>\r\n        <MobileNavigation />\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <DesktopNavigation />\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import EmailRoundedIcon from '@material-ui/icons/EmailRounded';\r\nimport FacebookRoundedIcon from '@material-ui/icons/FacebookRounded';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport React from 'react';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\n\r\ninterface IContact {\r\n  link: string;\r\n  label: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nconst contacts: IContact[] = [\r\n  {\r\n    link: 'https://github.com/nileshmoradiya',\r\n    label: 'Github',\r\n    icon: <GitHubIcon />,\r\n  },\r\n  {\r\n    link: 'https://www.facebook.com/NnileshH',\r\n    label: 'Facebook',\r\n    icon: <FacebookRoundedIcon />,\r\n  },\r\n  {\r\n    link: 'https://www.instagram.com/nilesh_moradiya',\r\n    label: 'Instagram',\r\n    icon: <InstagramIcon />,\r\n  },\r\n  {\r\n    link: 'https://www.linkedin.com/in/nilesh-moradiya',\r\n    label: 'LinkedIn',\r\n    icon: <LinkedInIcon />,\r\n  },\r\n  {\r\n    link: 'https://twitter.com/Nilesh_Moradiya',\r\n    label: 'Twitter',\r\n    icon: <TwitterIcon />,\r\n  },\r\n  {\r\n    link: 'mailto:nileshmoradiya_coder@outlook.com',\r\n    label: 'Email',\r\n    icon: <EmailRoundedIcon />,\r\n  },\r\n];\r\n\r\nexport default contacts;\r\n","import { IconButton, Link } from '@material-ui/core';\r\n\r\nimport React from 'react';\r\nimport contacts from '../../data/contact';\r\n\r\nconst ContactIcons = () => {\r\n  return (\r\n    <>\r\n      {contacts.map((contact) => (\r\n        <Link key={contact.label} href={contact.link} target=\"_blank\">\r\n          <IconButton>{contact.icon}</IconButton>\r\n        </Link>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactIcons;\r\n","import { Link, LinkProps } from '@material-ui/core';\r\nimport React, { ReactNode } from 'react';\r\nimport { Typography, TypographyProps } from '@material-ui/core';\r\n\r\ninterface IStyledLinkLinkProps extends Omit<LinkProps, 'href'> {\r\n  to: string;\r\n  label: string;\r\n  capitalized?: boolean;\r\n  bold?: boolean;\r\n  bottomBorder?: boolean;\r\n  typographyProps?: Omit<TypographyProps, 'children'>;\r\n  children?: ReactNode;\r\n}\r\n\r\nconst StyledLink = ({\r\n  to,\r\n  label,\r\n  capitalized,\r\n  bold,\r\n  bottomBorder = true,\r\n  typographyProps,\r\n  children,\r\n  ...rest\r\n}: IStyledLinkLinkProps) => {\r\n  const transformedLabel = capitalized ? label?.toUpperCase() : label;\r\n  return (\r\n    <Link\r\n      {...rest}\r\n      href={to}\r\n      style={{\r\n        color: 'inherit',\r\n        textDecoration: 'none',\r\n      }}>\r\n      {children}\r\n      {!children && (\r\n        <Typography\r\n          {...typographyProps}\r\n          style={{\r\n            transition: 'color 0.2s ease, border-bottom-color 0.2s ease',\r\n            borderBottom: bottomBorder\r\n              ? 'dotted 1px rgba(160, 160, 160, 0.65)'\r\n              : undefined,\r\n            fontWeight: bold ? 'bold' : undefined,\r\n          }}\r\n          component=\"span\">\r\n          {transformedLabel}\r\n        </Typography>\r\n      )}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default StyledLink;\r\n","import { Avatar, Divider, Stack, Typography } from '@material-ui/core';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\n\r\nimport ContactIcons from '../Contact/ContactIcons';\r\nimport React from 'react';\r\nimport StyledLink from '../StyledLink';\r\nimport StyledNavLink from '../StyledNavLink';\r\nimport StyledTypography from '../StyledTypography';\r\n\r\nconst { PUBLIC_URL } = process.env; // set automatically from package.json:homepage\r\n\r\nconst LearnMoreLink = ({ to }: { to: string }) => {\r\n  return (\r\n    <>\r\n      <StyledNavLink\r\n        exact\r\n        to={to}\r\n        label=\"Learn More\"\r\n        style={{\r\n          textDecoration: 'none',\r\n        }}>\r\n        <StyledTypography\r\n          variant=\"overline\"\r\n          display=\"inline\"\r\n          color=\"text.primary\"\r\n          capitalized={true}>\r\n          Learn More\r\n        </StyledTypography>\r\n      </StyledNavLink>\r\n    </>\r\n  );\r\n};\r\n\r\nconst SideBar = () => {\r\n  const resumePageRoute = useRouteMatch(`/resume`);\r\n  return (\r\n    <>\r\n      <Stack spacing={6}>\r\n        <Stack spacing={3}>\r\n          <Link to=\"/\">\r\n            <Avatar\r\n              src={`${PUBLIC_URL}/images/me.jpg`}\r\n              sx={{\r\n                width: 160,\r\n                height: 160,\r\n              }}>\r\n              N M\r\n            </Avatar>\r\n          </Link>\r\n          <StyledTypography fontVariant=\"title\" capitalized={true}>\r\n            Nilesh Moradiya\r\n          </StyledTypography>\r\n          <StyledLink\r\n            to=\"mailto:nileshmoradiya_coder@outlook.com\"\r\n            bold={true}\r\n            capitalized={true}\r\n            label=\"nileshmoradiya_coder@outlook.com\"\r\n            typographyProps={{\r\n              variant: 'overline',\r\n              color: 'text.disabled',\r\n            }}\r\n          />\r\n        </Stack>\r\n        <Divider />\r\n        <Stack spacing={3}>\r\n          <StyledTypography variant=\"button\" bold={true} capitalized={true}>\r\n            About\r\n          </StyledTypography>\r\n          <Typography variant=\"body2\" paragraph>\r\n            Hi, I&apos;m Nilesh. I like building things. I am a{' '}\r\n            <StyledLink\r\n              to=\"https://svitvasad.ac.in/\"\r\n              label=\"SVIT, Vasad - GTU\"\r\n              target=\"_blank\"\r\n            />{' '}\r\n            graduate, and currently working as a Technical Architect/Software\r\n            Engineer at{' '}\r\n            <StyledLink\r\n              to=\"https://imriel.com/\"\r\n              label=\"IMRIEL\"\r\n              target=\"_blank\"\r\n            />\r\n            . Before IMRIEL I was at{' '}\r\n            <StyledLink\r\n              to=\"https://www.techgrains.com/\"\r\n              label=\"TechGrains\"\r\n              target=\"_blank\"\r\n            />\r\n            , and{' '}\r\n            <StyledLink\r\n              to=\"https://promactinfo.com/\"\r\n              label=\"PROMACT\"\r\n              target=\"_blank\"\r\n            />\r\n            .\r\n          </Typography>\r\n          <LearnMoreLink to={resumePageRoute?.isExact ? '/about' : '/resume'} />\r\n        </Stack>\r\n        <Divider />\r\n        <Stack direction=\"row\">\r\n          <ContactIcons />\r\n        </Stack>\r\n        <Typography\r\n          display=\"inline\"\r\n          variant=\"overline\"\r\n          sx={{\r\n            color: 'text.disabled',\r\n          }}>\r\n          &copy; Nilesh Moradiya{' '}\r\n          <StyledLink\r\n            to=\"/\"\r\n            label=\"nileshmoradiya.com\"\r\n            typographyProps={{\r\n              variant: 'overline',\r\n            }}\r\n          />\r\n          .\r\n        </Typography>\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import { Box, Container, Grid, Hidden, Typography } from '@material-ui/core';\r\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\r\nimport React, { ReactNode } from 'react';\r\n\r\nimport Navigation from '../components/Template/Navigation';\r\nimport SideBar from '../components/Template/SideBar';\r\n\r\ninterface IMainProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst Main = ({ children }: IMainProps) => (\r\n  <HelmetProvider>\r\n    <Box>\r\n      <Navigation />\r\n      <Box\r\n        sx={{\r\n          mt: 6,\r\n        }}>\r\n        <Container>\r\n          <Grid container spacing={2}>\r\n            <Hidden mdDown>\r\n              <Grid item xs={12} md={5} lg={4}>\r\n                <SideBar />\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid item xs={12} md={7} lg={8}>\r\n              {children}\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </Box>\r\n  </HelmetProvider>\r\n);\r\n\r\nexport default Main;\r\n","const defaultTheme = {\r\n    palette: {\r\n        primary: {\r\n            main: '##01579b',\r\n        },\r\n        secondary: {\r\n            main: '##00bfa5',\r\n        },\r\n        background: {\r\n            default: '#F5F5F5',\r\n        },\r\n    }\r\n};\r\n\r\nexport default defaultTheme;\r\n","import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport React, { Suspense, lazy } from 'react';\nimport { StyledEngineProvider, ThemeProvider } from '@material-ui/core/styles';\n\nimport { CssBaseline } from '@material-ui/core';\nimport Main from './layout/Main'; // fallback for lazy pages\nimport useAppTheme from './hooks/useAppTheme';\n\nconst { PUBLIC_URL } = process.env;\n\n// Every route - we lazy load so that each page can be chunked\n// NOTE that some of these chunks are very small. We should optimize\n// which pages are lazy loaded in the future.\nconst Home = lazy(() => import('./pages/Home'));\nconst About = lazy(() => import('./pages/About'));\nconst Resume = lazy(() => import('./pages/Resume'));\nconst Projects = lazy(() => import('./pages/Projects'));\nconst Stats = lazy(() => import('./pages/Stats'));\nconst Contact = lazy(() => import('./pages/Contact'));\nconst NotFound = lazy(() => import('./pages/NotFound'));\n\nconst App = () => {\n  const { theme } = useAppTheme();\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <BrowserRouter basename={PUBLIC_URL}>\n          <Main>\n            <Suspense fallback={<>Loading...</>}>\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/resume\" component={Resume} />\n                <Route path=\"/projects\" component={Projects} />\n                <Route path=\"/stats\" component={Stats} />\n                <Route path=\"/contact\" component={Contact} />\n                <Route component={NotFound} />\n              </Switch>\n            </Suspense>\n          </Main>\n        </BrowserRouter>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n};\n\nexport default App;\n","import { Theme, createTheme } from '@material-ui/core/styles';\r\n\r\nimport defaultTheme from '../data/theme';\r\nimport { useState } from 'react';\r\n\r\nexport default function useAppTheme(): { theme: Theme } {\r\n    const [theme, setTheme] = useState<Theme>(createTheme(defaultTheme));\r\n    return { theme: theme };\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { hydrate, render } from 'react-dom';\n\nimport App from './App';\nimport React from 'react';\nimport reportWebVitals from './reportWebVitals';\n\nconst StrictApp = () => (\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nconst rootElement = document.getElementById('root');\n\nif (rootElement?.hasChildNodes()) {\n  hydrate(<StrictApp />, rootElement);\n} else {\n  render(<StrictApp />, rootElement);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { Fragment } from 'react';\r\nimport { Typography, TypographyProps } from '@material-ui/core';\r\n\r\nimport { SxProps } from '@material-ui/system';\r\n\r\ntype FontVariant = 'normal' | 'title' | 'subtitle';\r\n\r\nconst fontVariantStyles: Record<FontVariant, SxProps> = {\r\n  normal: {},\r\n  title: {\r\n    fontWeight: 900,\r\n    fontSize: '1.5em',\r\n    fontFamily: '\"Raleway\", Helvetica, sans-serif',\r\n    letterSpacing: '0.25em',\r\n  },\r\n  subtitle: {\r\n    fontWeight: 400,\r\n    fontSize: '0.7em',\r\n    fontFamily: '\"Raleway\", Helvetica, sans-serif',\r\n    letterSpacing: '0.25em',\r\n  },\r\n};\r\n\r\nexport interface IStyledTypographyProps extends TypographyProps {\r\n  bold?: boolean;\r\n  capitalized?: boolean;\r\n  fontVariant?: FontVariant;\r\n}\r\n\r\nconst StyledTypography = ({\r\n  bold = false,\r\n  capitalized = false,\r\n  fontVariant = 'normal',\r\n  children,\r\n  ...rest\r\n}: IStyledTypographyProps & TypographyProps) => {\r\n  const fontVariantStyle = fontVariantStyles[fontVariant];\r\n  const capitalizedChildren =\r\n    capitalized && typeof children === 'string'\r\n      ? children?.toString()?.toUpperCase()\r\n      : children;\r\n  return (\r\n    <Typography\r\n      {...rest}\r\n      fontWeight={bold ? 'bold' : undefined}\r\n      sx={fontVariantStyle}>\r\n      {capitalizedChildren}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default StyledTypography;\r\n","import { NavLink, NavLinkProps } from 'react-router-dom';\r\nimport React, { ReactNode } from 'react';\r\nimport { Typography, TypographyProps } from '@material-ui/core';\r\n\r\ninterface IStyledLinkLinkProps extends NavLinkProps {\r\n  to: string;\r\n  label: string;\r\n  capitalized?: boolean;\r\n  bold?: boolean;\r\n  bottomBorder?: boolean;\r\n  typographyProps?: Omit<TypographyProps, 'children'>;\r\n  children?: ReactNode;\r\n}\r\n\r\nconst StyledNavLink = ({\r\n  to,\r\n  label,\r\n  capitalized,\r\n  bold,\r\n  bottomBorder = true,\r\n  typographyProps,\r\n  children,\r\n  ...rest\r\n}: IStyledLinkLinkProps) => {\r\n  const transformedLabel = capitalized\r\n    ? label?.toString()?.toUpperCase()\r\n    : label;\r\n  return (\r\n    <NavLink\r\n      {...rest}\r\n      to={to}\r\n      style={{\r\n        color: 'inherit',\r\n        textDecoration: 'none',\r\n      }}>\r\n      {children}\r\n      {!children && (\r\n        <Typography\r\n          {...typographyProps}\r\n          component=\"span\"\r\n          style={{\r\n            transition: 'color 0.2s ease, border-bottom-color 0.2s ease',\r\n            borderBottom: bottomBorder\r\n              ? 'dotted 1px rgba(160, 160, 160, 0.65)'\r\n              : undefined,\r\n            fontWeight: bold ? 'bold' : undefined,\r\n          }}>\r\n          {transformedLabel}\r\n        </Typography>\r\n      )}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default StyledNavLink;\r\n"],"sourceRoot":""}