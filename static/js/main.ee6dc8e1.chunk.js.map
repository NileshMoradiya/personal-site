{"version":3,"sources":["components/Template/InfoBar.tsx","data/routes.ts","components/Template/Navigation.tsx","layout/Main.tsx","data/theme.ts","App.tsx","hooks/useAppTheme.ts","reportWebVitals.ts","index.tsx","components/StyledTypography.tsx","components/StyledNavLink.tsx","hooks/useBreakpoints.ts","layout/PageContentLayout.tsx","components/StyledLink.tsx","components/StyledButton.tsx","data/contact.tsx","components/Contact/ContactIcons.tsx"],"names":["ExternalLink","props","StyledLink","target","typographyProps","variant","MoreLink","to","label","StyledNavLink","exact","StyledButton","StyledTypography","fontVariant","capitalized","bold","InfoBar","resumePageRoute","useRouteMatch","scaleFactor","useBreakpoints","md","useTheme","Stack","spacing","alignItems","undefined","Avatar","src","process","sx","width","height","color","letterSpacing","Divider","Typography","paragraph","isExact","direction","ContactIcons","display","disableActiveStyle","routes","index","path","indexLinks","filter","link","nonIndexLinks","DesktopNavigation","theme","AppBar","enableColorOnDark","position","justifyContent","backgroundColor","palette","background","paper","text","primary","Toolbar","map","indexLink","spaced","hoverEffect","nonIndexLink","orientation","MobileMenu","React","useState","anchorElement","setAnchorElement","isMenuOpen","Boolean","onNavigationClick","Fab","bottom","right","size","disableRipple","onClick","event","currentTarget","Menu","id","anchorEl","open","onClose","MenuListProps","MenuItem","MobileNavigation","flexGrow","Box","flexDirection","py","Navigation","Hidden","mdUp","mdDown","Main","children","my","Container","Grid","container","item","xs","lg","mb","defaultTheme","main","default","components","MuiCssBaseline","styleOverrides","Home","lazy","About","Resume","Projects","Stats","Contact","NotFound","App","createTheme","useAppTheme","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","basename","fallback","PageContentLayout","component","PageContentLayoutPlaceholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictApp","StrictMode","rootElement","document","getElementById","hasChildNodes","hydrate","render","LETTER_SPACING","fontVariantStyles","normal","title","fontWeight","fontSize","fontFamily","titleLight","subtitle","fontSxProps","rest","isHover","setIsHover","fontVariantStyle","capitalizedChildren","toString","toUpperCase","onMouseEnter","onMouseLeave","bottomBorder","activeStyle","transformedLabel","typographyStyle","style","overriddenStyle","transition","borderBottom","textDecoration","Children","child","cloneElement","sm","useMediaQuery","breakpoints","header","subHeader","px","p","disabled","cursor","href","styled","Button","padding","border","borderRadius","borderColor","action","focus","contacts","icon","contact","Link","IconButton"],"mappings":"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","file":"static/js/main.ee6dc8e1.chunk.js","sourcesContent":["import {\r\n  Avatar,\r\n  Divider,\r\n  Stack,\r\n  Typography,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport StyledLink, { IStyledLinkLinkProps } from '../StyledLink';\r\n\r\nimport ContactIcons from '../Contact/ContactIcons';\r\nimport React from 'react';\r\nimport StyledButton from '../StyledButton';\r\nimport StyledNavLink from '../StyledNavLink';\r\nimport StyledTypography from '../StyledTypography';\r\nimport useBreakpoints from '../../hooks/useBreakpoints';\r\n\r\nconst { PUBLIC_URL } = process.env; // set automatically from package.json:homepage\r\n\r\nconst ExternalLink = (props: IStyledLinkLinkProps) => {\r\n  return (\r\n    <StyledLink\r\n      {...props}\r\n      target=\"_blank\"\r\n      typographyProps={{\r\n        variant: 'subtitle2',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst MoreLink = ({ to, label }: { to: string; label: string }) => {\r\n  return (\r\n    <>\r\n      <StyledNavLink exact to={to} label=\"Learn More\">\r\n        <StyledButton variant=\"text\">\r\n          <StyledTypography\r\n            fontVariant=\"titleLight\"\r\n            capitalized={true}\r\n            bold={true}>\r\n            {label}\r\n          </StyledTypography>\r\n        </StyledButton>\r\n      </StyledNavLink>\r\n    </>\r\n  );\r\n};\r\n\r\nconst InfoBar = () => {\r\n  const resumePageRoute = useRouteMatch(`/resume`);\r\n  const { scaleFactor } = useBreakpoints();\r\n  const { md } = useBreakpoints();\r\n  const theme = useTheme();\r\n  return (\r\n    <>\r\n      <Stack spacing={6 / scaleFactor}>\r\n        <Stack spacing={3 / scaleFactor} alignItems={md ? 'center' : undefined}>\r\n          <Link to=\"/\">\r\n            <Avatar\r\n              src={`${PUBLIC_URL}/images/me.jpg`}\r\n              sx={{\r\n                width: 160,\r\n                height: 160,\r\n              }}>\r\n              N M\r\n            </Avatar>\r\n          </Link>\r\n          <StyledTypography fontVariant=\"title\" capitalized={true}>\r\n            Nilesh Moradiya\r\n          </StyledTypography>\r\n          <StyledLink\r\n            to=\"mailto:nileshmoradiya_coder@outlook.com\"\r\n            bold={true}\r\n            capitalized={true}\r\n            label=\"nileshmoradiya_coder@outlook.com\"\r\n            typographyProps={{\r\n              variant: 'overline',\r\n              color: 'text.disabled',\r\n              letterSpacing: '0.15em',\r\n            }}\r\n          />\r\n        </Stack>\r\n        <Divider />\r\n        <Stack spacing={3 / scaleFactor}>\r\n          <StyledTypography\r\n            variant=\"button\"\r\n            fontVariant=\"titleLight\"\r\n            bold={true}\r\n            capitalized={true}>\r\n            About\r\n          </StyledTypography>\r\n          <Typography variant=\"subtitle2\" paragraph>\r\n            Hi, I&apos;m Nilesh. I like building things. I am a{' '}\r\n            <ExternalLink\r\n              to=\"https://svitvasad.ac.in/\"\r\n              label=\"SVIT, Vasad - GTU\"\r\n            />{' '}\r\n            graduate, and currently working as a Technical Architect/Software\r\n            Engineer at <ExternalLink to=\"https://imriel.com/\" label=\"IMRIEL\" />\r\n            . Before IMRIEL I was at{' '}\r\n            <ExternalLink to=\"https://www.techgrains.com/\" label=\"TechGrains\" />\r\n            , and <ExternalLink to=\"https://promactinfo.com/\" label=\"PROMACT\" />\r\n            .\r\n          </Typography>\r\n          <MoreLink\r\n            to={resumePageRoute?.isExact ? '/about' : '/resume'}\r\n            label={resumePageRoute?.isExact ? 'About me' : 'Learn More'}\r\n          />\r\n        </Stack>\r\n        <Divider />\r\n        <Stack direction=\"row\">\r\n          <ContactIcons />\r\n        </Stack>\r\n        <Typography\r\n          display=\"inline\"\r\n          variant=\"overline\"\r\n          sx={{\r\n            color: 'text.disabled',\r\n          }}>\r\n          &copy; Nilesh Moradiya{' '}\r\n          <StyledNavLink\r\n            to=\"/\"\r\n            label=\"nileshmoradiya.com\"\r\n            typographyProps={{\r\n              variant: 'overline',\r\n            }}\r\n            disableActiveStyle={true}\r\n          />\r\n          .\r\n        </Typography>\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InfoBar;\r\n","const routes = [\r\n    {\r\n        index: true,\r\n        label: \"Nilesh Moradiya\",\r\n        path: '/',\r\n    },\r\n    {\r\n        label: 'About',\r\n        path: '/about',\r\n    },\r\n    {\r\n        label: 'Resume',\r\n        path: '/resume',\r\n    },\r\n    {\r\n        label: 'Projects',\r\n        path: '/projects',\r\n    },\r\n    {\r\n        label: 'Stats',\r\n        path: '/stats',\r\n    },\r\n    {\r\n        label: 'Contact',\r\n        path: '/contact',\r\n    },\r\n];\r\n\r\nexport default routes;\r\n","import {\r\n  AppBar,\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  Fab,\r\n  Hidden,\r\n  Menu,\r\n  MenuItem,\r\n  Stack,\r\n  Toolbar,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport React, { Fragment } from 'react';\r\n\r\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\r\nimport StyledNavLink from '../StyledNavLink';\r\nimport StyledTypography from '../StyledTypography';\r\nimport routes from '../../data/routes';\r\n\r\nconst { PUBLIC_URL } = process.env;\r\nconst indexLinks = routes.filter((link) => link.index);\r\nconst nonIndexLinks = routes.filter((link) => !link.index);\r\n\r\nconst DesktopNavigation = () => {\r\n  const theme = useTheme();\r\n  return (\r\n    <AppBar\r\n      enableColorOnDark\r\n      variant=\"outlined\"\r\n      position=\"sticky\"\r\n      sx={{\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n      }}>\r\n      <Toolbar variant=\"dense\">\r\n        <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n          {indexLinks.map((indexLink) => (\r\n            <StyledNavLink\r\n              key={indexLink.label}\r\n              to={indexLink.path}\r\n              label={indexLink.label}\r\n              disableActiveStyle={true}>\r\n              <StyledTypography\r\n                variant=\"button\"\r\n                display=\"inline\"\r\n                bold={true}\r\n                capitalized={true}\r\n                spaced={true}\r\n                hoverEffect={true}>\r\n                {indexLink.label}\r\n              </StyledTypography>\r\n            </StyledNavLink>\r\n          ))}\r\n          {nonIndexLinks.map((nonIndexLink) => (\r\n            <Fragment key={nonIndexLink.label}>\r\n              <Divider orientation=\"vertical\" />\r\n              <StyledNavLink\r\n                exact\r\n                to={nonIndexLink.path}\r\n                label={nonIndexLink.label}>\r\n                <StyledTypography\r\n                  variant=\"overline\"\r\n                  display=\"inline\"\r\n                  capitalized={true}\r\n                  spaced={true}\r\n                  hoverEffect={true}>\r\n                  {nonIndexLink.label}\r\n                </StyledTypography>\r\n              </StyledNavLink>\r\n            </Fragment>\r\n          ))}\r\n        </Stack>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst MobileMenu = () => {\r\n  const [anchorElement, setAnchorElement] = React.useState<null | HTMLElement>(\r\n    null,\r\n  );\r\n  const isMenuOpen = Boolean(anchorElement);\r\n\r\n  const openMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorElement(event.currentTarget);\r\n  };\r\n\r\n  const onNavigationClick = () => {\r\n    setAnchorElement(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Fab\r\n        aria-expanded={isMenuOpen ? 'true' : undefined}\r\n        sx={{\r\n          position: 'fixed',\r\n          bottom: 16,\r\n          right: 16,\r\n        }}\r\n        size=\"medium\"\r\n        disableRipple\r\n        onClick={openMenuClick}>\r\n        <MenuRoundedIcon />\r\n      </Fab>\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorElement}\r\n        open={isMenuOpen}\r\n        onClose={onNavigationClick}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'basic-button',\r\n        }}>\r\n        {indexLinks.map((indexLink) => (\r\n          <StyledNavLink\r\n            exact\r\n            to={indexLink.path}\r\n            label={indexLink.label}\r\n            disableActiveStyle={true}\r\n            key={indexLink.label}>\r\n            <MenuItem onClick={onNavigationClick}>\r\n              <StyledTypography\r\n                variant=\"button\"\r\n                display=\"inline\"\r\n                bold={true}\r\n                capitalized={true}\r\n                spaced={true}\r\n                hoverEffect={true}>\r\n                {indexLink.label}\r\n              </StyledTypography>\r\n            </MenuItem>\r\n          </StyledNavLink>\r\n        ))}\r\n        <Divider orientation=\"horizontal\" variant=\"middle\" />\r\n        {nonIndexLinks.map((nonIndexLink) => (\r\n          <StyledNavLink\r\n            exact\r\n            to={nonIndexLink.path}\r\n            label={nonIndexLink.label}\r\n            key={nonIndexLink.label}>\r\n            <MenuItem onClick={onNavigationClick}>\r\n              <StyledTypography\r\n                variant=\"overline\"\r\n                display=\"inline\"\r\n                capitalized={true}\r\n                spaced={true}\r\n                hoverEffect={true}>\r\n                {nonIndexLink.label}\r\n              </StyledTypography>\r\n            </MenuItem>\r\n          </StyledNavLink>\r\n        ))}\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nconst MobileNavigation = () => {\r\n  const theme = useTheme();\r\n  return (\r\n    <>\r\n      <AppBar\r\n        enableColorOnDark\r\n        variant=\"outlined\"\r\n        position=\"sticky\"\r\n        sx={{\r\n          flexGrow: 1,\r\n          backgroundColor: theme.palette.background.paper,\r\n          color: theme.palette.text.primary,\r\n        }}>\r\n        <Toolbar variant=\"dense\">\r\n          <Box justifyContent=\"center\" sx={{ flexGrow: 1 }}>\r\n            <StyledNavLink to=\"/\" label=\"Home\" disableActiveStyle={true}>\r\n              <StyledTypography\r\n                variant=\"button\"\r\n                bold={true}\r\n                capitalized={true}\r\n                spaced={true}\r\n                hoverEffect={true}>\r\n                Nilesh Moradiya\r\n              </StyledTypography>\r\n            </StyledNavLink>\r\n          </Box>\r\n          <Box flexDirection=\"row-reverse\" sx={{ py: 1 }}>\r\n            <Avatar\r\n              src={`${PUBLIC_URL}/images/me.jpg`}\r\n              sx={{\r\n                width: 50,\r\n                height: 50,\r\n              }}>\r\n              N M\r\n            </Avatar>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <MobileMenu />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <>\r\n      <Hidden mdUp>\r\n        <MobileNavigation />\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <DesktopNavigation />\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { Box, Container, Divider, Grid, Hidden } from '@material-ui/core';\r\nimport React, { ReactNode } from 'react';\r\n\r\nimport { HelmetProvider } from 'react-helmet-async';\r\nimport InfoBar from '../components/Template/InfoBar';\r\nimport Navigation from '../components/Template/Navigation';\r\nimport useBreakpoints from '../hooks/useBreakpoints';\r\n\r\ninterface IMainProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst Main = ({ children }: IMainProps) => {\r\n  const { scaleFactor } = useBreakpoints();\r\n  return (\r\n    <HelmetProvider>\r\n      <Box>\r\n        <Navigation />\r\n        <Box\r\n          sx={{\r\n            my: 6 / scaleFactor,\r\n          }}>\r\n          <Container>\r\n            <Grid container spacing={2}>\r\n              <Hidden mdDown>\r\n                <Grid item xs={12} md={5} lg={4}>\r\n                  <InfoBar />\r\n                </Grid>\r\n              </Hidden>\r\n              <Grid item xs={12} md={7} lg={8}>\r\n                {children}\r\n              </Grid>\r\n              <Hidden mdUp>\r\n                <Grid item xs={12} md={5} lg={4}>\r\n                  <Divider\r\n                    sx={{\r\n                      mb: 2,\r\n                    }}\r\n                  />\r\n                  <InfoBar />\r\n                </Grid>\r\n              </Hidden>\r\n            </Grid>\r\n          </Container>\r\n        </Box>\r\n      </Box>\r\n    </HelmetProvider>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","const defaultTheme = {\r\n  palette: {\r\n    primary: {\r\n      main: '#2e59ba',\r\n    },\r\n    background: {\r\n      default: '#f5f5f5',\r\n    },\r\n  },\r\n  components: {\r\n    MuiCssBaseline: {\r\n      styleOverrides: `\r\n            /* Make scroll overlay*/\r\n          body {\r\n                overflow-y:overlay;\r\n            }\r\n          /* Ref: https://www.w3schools.com/howto/howto_css_custom_scrollbar.asp*/\r\n          /* Scrollbar width */\r\n          ::-webkit-scrollbar {\r\n            width: 8px;\r\n            height:8px;\r\n          }\r\n          /* Scrollbar Track */\r\n          ::-webkit-scrollbar-track {\r\n            background: #e0e0e0;\r\n            border-radius: 4px;\r\n          }\r\n          /* Scrollbar Handle */\r\n          ::-webkit-scrollbar-thumb {\r\n            background: #bdbdbd;\r\n            border-radius: 4px;\r\n          }\r\n          /* Scrollbar Handle on hover */\r\n          ::-webkit-scrollbar-thumb:hover {\r\n            background: #9e9e9e;\r\n            border-radius: 4px;\r\n          }\r\n          `,\r\n    },\r\n  }\r\n};\r\n\r\nexport default defaultTheme;\r\n","import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport React, { Suspense, lazy } from 'react';\nimport { StyledEngineProvider, ThemeProvider } from '@material-ui/core/styles';\n\nimport { CssBaseline } from '@material-ui/core';\nimport Main from './layout/Main'; // fallback for lazy pages\nimport { PageContentLayoutPlaceholder } from './layout/PageContentLayout';\nimport useAppTheme from './hooks/useAppTheme';\n\nconst { PUBLIC_URL } = process.env;\n\n// Every route - we lazy load so that each page can be chunked\n// NOTE that some of these chunks are very small. We should optimize\n// which pages are lazy loaded in the future.\nconst Home = lazy(() => import('./pages/Home'));\nconst About = lazy(() => import('./pages/About'));\nconst Resume = lazy(() => import('./pages/Resume'));\nconst Projects = lazy(() => import('./pages/Projects'));\nconst Stats = lazy(() => import('./pages/Stats'));\nconst Contact = lazy(() => import('./pages/Contact'));\nconst NotFound = lazy(() => import('./pages/NotFound'));\n\nconst App = () => {\n  const { theme } = useAppTheme();\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <BrowserRouter basename={PUBLIC_URL}>\n          <Main>\n            <Suspense fallback={<PageContentLayoutPlaceholder />}>\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/resume\" component={Resume} />\n                <Route path=\"/projects\" component={Projects} />\n                <Route path=\"/stats\" component={Stats} />\n                <Route path=\"/contact\" component={Contact} />\n                <Route path=\"/ph\" component={PageContentLayoutPlaceholder} />\n                <Route component={NotFound} />\n              </Switch>\n            </Suspense>\n          </Main>\n        </BrowserRouter>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n};\n\nexport default App;\n","import { Theme, createTheme } from '@material-ui/core/styles';\r\n\r\nimport defaultTheme from '../data/theme';\r\nimport { useState } from 'react';\r\n\r\nexport default function useAppTheme(): { theme: Theme } {\r\n    const [theme, setTheme] = useState<Theme>(createTheme(defaultTheme));\r\n    return { theme: theme };\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { hydrate, render } from 'react-dom';\n\nimport App from './App';\nimport React from 'react';\nimport reportWebVitals from './reportWebVitals';\n\nconst StrictApp = () => (\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nconst rootElement = document.getElementById('root');\n\nif (rootElement?.hasChildNodes()) {\n  hydrate(<StrictApp />, rootElement);\n} else {\n  render(<StrictApp />, rootElement);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { Fragment, useState } from 'react';\r\nimport { Typography, TypographyProps, useTheme } from '@material-ui/core';\r\n\r\nimport { SxProps } from '@material-ui/system';\r\n\r\nconst LETTER_SPACING = '0.25em';\r\n\r\ntype FontVariant = 'normal' | 'title' | 'titleLight' | 'subtitle';\r\n\r\nconst fontVariantStyles: Record<FontVariant, SxProps> = {\r\n  normal: {},\r\n  title: {\r\n    fontWeight: 900,\r\n    fontSize: '1.5em',\r\n    fontFamily: '\"Raleway\", Helvetica, sans-serif',\r\n    letterSpacing: LETTER_SPACING,\r\n  },\r\n  titleLight: {\r\n    fontWeight: 800,\r\n    fontSize: '0.8em',\r\n    fontFamily: '\"Raleway\", Helvetica, sans-serif',\r\n    letterSpacing: LETTER_SPACING,\r\n  },\r\n  subtitle: {\r\n    fontWeight: 400,\r\n    fontSize: '0.7em',\r\n    fontFamily: '\"Raleway\", Helvetica, sans-serif',\r\n    letterSpacing: LETTER_SPACING,\r\n  },\r\n};\r\n\r\nexport interface IStyledTypographyProps extends TypographyProps {\r\n  bold?: boolean;\r\n  capitalized?: boolean;\r\n  spaced?: boolean;\r\n  fontVariant?: FontVariant;\r\n  hoverEffect?: boolean;\r\n}\r\n\r\nconst StyledTypography = ({\r\n  bold = false,\r\n  capitalized = false,\r\n  spaced = false,\r\n  fontVariant = 'normal',\r\n  hoverEffect = false,\r\n  children,\r\n  sx: fontSxProps,\r\n  ...rest\r\n}: IStyledTypographyProps & TypographyProps) => {\r\n  const theme = useTheme();\r\n  const [isHover, setIsHover] = useState(false);\r\n  const fontVariantStyle = fontVariantStyles[fontVariant];\r\n  const capitalizedChildren =\r\n    capitalized && typeof children === 'string'\r\n      ? children?.toString()?.toUpperCase()\r\n      : children;\r\n  const sx = { ...fontSxProps, ...fontVariantStyle };\r\n  const onMouseEnter = () => {\r\n    setIsHover(true);\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    setIsHover(false);\r\n  };\r\n  return (\r\n    <Typography\r\n      {...rest}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      fontWeight={bold ? 'bold' : undefined}\r\n      letterSpacing={spaced ? LETTER_SPACING : undefined}\r\n      sx={{\r\n        ...sx,\r\n        ...(isHover && hoverEffect\r\n          ? {\r\n              color: theme.palette.primary.main,\r\n            }\r\n          : {}),\r\n      }}>\r\n      {capitalizedChildren}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default StyledTypography;\r\n","import { NavLink, NavLinkProps } from 'react-router-dom';\r\nimport React, { ReactNode, useState } from 'react';\r\nimport { Typography, TypographyProps, useTheme } from '@material-ui/core';\r\n\r\ninterface IStyledLinkLinkProps extends NavLinkProps {\r\n  to: string;\r\n  label: string;\r\n  capitalized?: boolean;\r\n  bold?: boolean;\r\n  bottomBorder?: boolean;\r\n  typographyProps?: Omit<TypographyProps, 'children'>;\r\n  disableActiveStyle?: boolean;\r\n  children?: JSX.Element;\r\n}\r\n\r\nconst StyledNavLink = ({\r\n  to,\r\n  label,\r\n  capitalized,\r\n  bold,\r\n  bottomBorder = true,\r\n  typographyProps,\r\n  children,\r\n  activeStyle,\r\n  disableActiveStyle = false,\r\n  ...rest\r\n}: IStyledLinkLinkProps) => {\r\n  const theme = useTheme();\r\n  const [isHover, setIsHover] = useState(false);\r\n  const transformedLabel = capitalized\r\n    ? label?.toString()?.toUpperCase()\r\n    : label;\r\n  const { style: typographyStyle, ...restOfTypographyProps } = {\r\n    ...typographyProps,\r\n  };\r\n  const overriddenStyle: React.CSSProperties = {\r\n    ...typographyStyle,\r\n    transition: 'color 0.2s ease, border-bottom-color 0.2s ease',\r\n    borderBottom: bottomBorder\r\n      ? 'dotted 1px rgba(160, 160, 160, 0.65)'\r\n      : undefined,\r\n    fontWeight: bold ? 'bold' : undefined,\r\n  };\r\n  const onMouseEnter = () => {\r\n    setIsHover(true);\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    setIsHover(false);\r\n  };\r\n  return (\r\n    <NavLink\r\n      {...rest}\r\n      to={to}\r\n      style={{\r\n        color: 'inherit',\r\n        textDecoration: 'none',\r\n      }}\r\n      activeStyle={\r\n        disableActiveStyle\r\n          ? {}\r\n          : {\r\n              textDecoration: 'underline',\r\n              color: theme.palette.primary.main,\r\n              ...activeStyle,\r\n            }\r\n      }>\r\n      {children &&\r\n        React.Children.map(children, (child) =>\r\n          React.cloneElement(child, {\r\n            onMouseEnter: onMouseEnter,\r\n            onMouseLeave: onMouseLeave,\r\n            style: {\r\n              ...child.props.style,\r\n              ...(isHover\r\n                ? {\r\n                    color: theme.palette.primary.main,\r\n                  }\r\n                : {}),\r\n            },\r\n          }),\r\n        )}\r\n      {!children && (\r\n        <Typography\r\n          {...typographyProps}\r\n          onMouseEnter={onMouseEnter}\r\n          onMouseLeave={onMouseLeave}\r\n          component=\"span\"\r\n          style={{\r\n            ...overriddenStyle,\r\n            ...(isHover\r\n              ? {\r\n                  color: theme.palette.primary.main,\r\n                }\r\n              : {}),\r\n          }}>\r\n          {transformedLabel}\r\n        </Typography>\r\n      )}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default StyledNavLink;\r\n","import { useMediaQuery, useTheme } from \"@material-ui/core\";\r\n\r\nconst useBreakpoints = (filter: 'up' | 'down' | 'only' = 'down') => {\r\n    const theme = useTheme();\r\n    const sm = useMediaQuery(theme.breakpoints[filter]('sm'));\r\n    const md = useMediaQuery(theme.breakpoints[filter]('md'));\r\n    const lg = useMediaQuery(theme.breakpoints[filter]('lg'));\r\n    const scaleFactor = sm ? 3 : md ? 2 : 1;\r\n    return {\r\n        sm: sm,\r\n        md: md,\r\n        lg: lg,\r\n        scaleFactor: scaleFactor,\r\n    };\r\n};\r\n\r\nexport default useBreakpoints;\r\n","import {\r\n  Box,\r\n  CircularProgress,\r\n  Divider,\r\n  Paper,\r\n  Skeleton,\r\n  Stack,\r\n  Theme,\r\n} from '@material-ui/core';\r\nimport React, { ReactNode } from 'react';\r\n\r\nimport StyledTypography from '../components/StyledTypography';\r\nimport useBreakpoints from '../hooks/useBreakpoints';\r\n\r\ninterface IPageProps {\r\n  header: ReactNode;\r\n  subHeader?: ReactNode;\r\n  children: ReactNode;\r\n}\r\n\r\nconst PageContentLayout = ({ header, subHeader, children }: IPageProps) => {\r\n  const { scaleFactor } = useBreakpoints();\r\n  return (\r\n    <>\r\n      <Paper variant=\"outlined\">\r\n        <Stack\r\n          sx={{ px: 6 / scaleFactor, py: 6 / scaleFactor }}\r\n          spacing={2 / scaleFactor}>\r\n          {typeof header === 'string' && (\r\n            <StyledTypography\r\n              fontVariant=\"title\"\r\n              aria-label=\"title\"\r\n              capitalized={true}\r\n              hoverEffect={true}>\r\n              {header}\r\n            </StyledTypography>\r\n          )}\r\n\r\n          {typeof header !== 'string' && <>{header}</>}\r\n          {subHeader && typeof subHeader === 'string' && (\r\n            <StyledTypography\r\n              fontVariant=\"subtitle\"\r\n              variant=\"overline\"\r\n              aria-label=\"subtitle\"\r\n              capitalized={true}>\r\n              {subHeader}\r\n            </StyledTypography>\r\n          )}\r\n\r\n          {subHeader && typeof subHeader !== 'string' && <>{subHeader}</>}\r\n        </Stack>\r\n        <Divider />\r\n        <Box sx={{ p: 6 / scaleFactor }}>{children}</Box>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PageContentLayout;\r\n\r\nconst PageContentLayoutPlaceholder = () => {\r\n  return (\r\n    <>\r\n      <PageContentLayout\r\n        header={\r\n          <>\r\n            <Skeleton height={36} />\r\n          </>\r\n        }\r\n        subHeader={\r\n          <>\r\n            <Skeleton height={30} />\r\n          </>\r\n        }>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          height=\"55vh\">\r\n          <CircularProgress\r\n            sx={{\r\n              color: (theme: Theme) => theme.palette.text.disabled,\r\n            }}\r\n          />\r\n        </Box>\r\n      </PageContentLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { PageContentLayoutPlaceholder };\r\n","import {\r\n  Link,\r\n  LinkProps,\r\n  Typography,\r\n  TypographyProps,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport React, { ReactNode, useState } from 'react';\r\n\r\nexport interface IStyledLinkLinkProps extends Omit<LinkProps, 'href'> {\r\n  to: string;\r\n  label: string;\r\n  capitalized?: boolean;\r\n  bold?: boolean;\r\n  bottomBorder?: boolean;\r\n  typographyProps?: Omit<TypographyProps, 'children'>;\r\n  children?: JSX.Element;\r\n}\r\n\r\nconst StyledLink = ({\r\n  to,\r\n  label,\r\n  capitalized,\r\n  bold,\r\n  bottomBorder = true,\r\n  typographyProps,\r\n  children,\r\n  ...rest\r\n}: IStyledLinkLinkProps) => {\r\n  const theme = useTheme();\r\n  const [isHover, setIsHover] = useState(false);\r\n  const transformedLabel = capitalized ? label?.toUpperCase() : label;\r\n  const overriddenStyle: React.CSSProperties = {\r\n    transition: 'color 0.2s ease, border-bottom-color 0.2s ease',\r\n    borderBottom: bottomBorder\r\n      ? 'dotted 1px rgba(160, 160, 160, 0.65)'\r\n      : undefined,\r\n    fontWeight: bold ? 'bold' : undefined,\r\n    cursor: 'pointer',\r\n  };\r\n  const onMouseEnter = () => {\r\n    setIsHover(true);\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    setIsHover(false);\r\n  };\r\n  return (\r\n    <Link\r\n      {...rest}\r\n      href={to}\r\n      style={{\r\n        color: 'inherit',\r\n        textDecoration: 'none',\r\n      }}>\r\n      {children &&\r\n        React.Children.map(children, (child) =>\r\n          React.cloneElement(child, {\r\n            onMouseEnter: onMouseEnter,\r\n            onMouseLeave: onMouseLeave,\r\n            style: {\r\n              ...child.props.style,\r\n              ...overriddenStyle,\r\n              ...(isHover\r\n                ? {\r\n                    color: theme.palette.primary.main,\r\n                  }\r\n                : {}),\r\n            },\r\n          }),\r\n        )}\r\n      {!children && (\r\n        <Typography\r\n          {...typographyProps}\r\n          onMouseEnter={onMouseEnter}\r\n          onMouseLeave={onMouseLeave}\r\n          style={{\r\n            ...overriddenStyle,\r\n            ...(isHover\r\n              ? {\r\n                  color: theme.palette.primary.main,\r\n                }\r\n              : {}),\r\n          }}\r\n          component=\"span\">\r\n          {transformedLabel}\r\n        </Typography>\r\n      )}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default StyledLink;\r\n","import { Button, ButtonProps, styled } from '@material-ui/core';\r\n\r\nimport React from 'react';\r\n\r\nconst StyledButton = styled(Button)<ButtonProps>(({ theme }) => {\r\n  return {\r\n    padding: `${theme.spacing(2)} ${theme.spacing(2)}`,\r\n    border: '1px solid',\r\n    borderRadius: 0,\r\n    color: theme.palette.text.primary,\r\n    backgroundColor: 'transparent',\r\n    borderColor: theme.palette.action.focus,\r\n    '&:hover': {\r\n      color: theme.palette.primary.main,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n    '&:active': {\r\n      color: theme.palette.primary.main,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  };\r\n});\r\n\r\nexport default StyledButton;\r\n","import EmailRoundedIcon from '@material-ui/icons/EmailRounded';\r\nimport FacebookRoundedIcon from '@material-ui/icons/FacebookRounded';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport React from 'react';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\n\r\ninterface IContact {\r\n  link: string;\r\n  label: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nconst contacts: IContact[] = [\r\n  {\r\n    link: 'https://github.com/nileshmoradiya',\r\n    label: 'Github',\r\n    icon: <GitHubIcon />,\r\n  },\r\n  {\r\n    link: 'https://www.facebook.com/NnileshH',\r\n    label: 'Facebook',\r\n    icon: <FacebookRoundedIcon />,\r\n  },\r\n  {\r\n    link: 'https://www.instagram.com/nilesh_moradiya',\r\n    label: 'Instagram',\r\n    icon: <InstagramIcon />,\r\n  },\r\n  {\r\n    link: 'https://www.linkedin.com/in/nilesh-moradiya',\r\n    label: 'LinkedIn',\r\n    icon: <LinkedInIcon />,\r\n  },\r\n  {\r\n    link: 'https://twitter.com/Nilesh_Moradiya',\r\n    label: 'Twitter',\r\n    icon: <TwitterIcon />,\r\n  },\r\n  {\r\n    link: 'mailto:nileshmoradiya_coder@outlook.com',\r\n    label: 'Email',\r\n    icon: <EmailRoundedIcon />,\r\n  },\r\n];\r\n\r\nexport default contacts;\r\n","import { IconButton, Link } from '@material-ui/core';\r\n\r\nimport React from 'react';\r\nimport contacts from '../../data/contact';\r\n\r\nconst ContactIcons = () => {\r\n  return (\r\n    <>\r\n      {contacts.map((contact) => (\r\n        <Link key={contact.label} href={contact.link} target=\"_blank\">\r\n          <IconButton>{contact.icon}</IconButton>\r\n        </Link>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactIcons;\r\n"],"sourceRoot":""}