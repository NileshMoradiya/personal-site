{"version":3,"sources":["components/StyledIconButton.tsx","data/resume/job.ts","components/StyledLink.tsx","data/personalInfo.ts","components/Template/ScrollToTop.tsx","layout/PageLayout.tsx","components/StyledButton.tsx","data/contact.tsx","components/Contact/ContactIcons.tsx","components/StyledNavLink.tsx","components/StyledTypography.tsx","components/Template/Analytics.tsx","components/RandomQuote.tsx","pages/Home.tsx","components/ProfilePicture.tsx","components/Template/InfoBar.tsx","layout/Main.tsx","data/routes.ts","data/theme.ts","context/AppThemeContext.tsx","components/Template/Navigation.tsx","App.tsx","reportWebVitals.ts","index.tsx","hooks/useBreakpoints.ts","layout/PageContentLayout.tsx"],"names":["StyledIconButton","styled","IconButton","theme","color","palette","primary","main","borderColor","jobs","company","position","link","dateRange","abstract","points","current","StyledLink","to","label","capitalized","bold","bottomBorder","typographyProps","children","rest","useTheme","transformedLabel","toUpperCase","typographyStyle","style","typographySx","sx","restOfTypographyProps","overriddenStyle","transition","borderBottom","undefined","fontWeight","cursor","href","textDecoration","rel","React","Children","map","child","cloneElement","props","component","personalInfo","firstName","lastName","fullName","email","siteUrl","githubUrl","facebookUrl","instagramUrl","linkedInUrl","twitterUrl","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","PageLayout","title","description","enableTitleTemplate","titleTemplate","defer","name","content","StyledButton","Button","padding","spacing","border","borderRadius","text","backgroundColor","action","focus","contacts","icon","ContactIcon","ContactIcons","contact","Link","target","StyledNavLink","activeStyle","disableActiveStyle","toString","LETTER_SPACING","fontVariantStyles","normal","fontSize","fontFamily","letterSpacing","titleLight","subtitle","StyledTypography","spaced","fontVariant","hoverEffect","styleProps","sxProps","fontVariantStyle","capitalizedChildren","ga4react","process","NODE_ENV","REACT_APP_GA_TRACKING_ID","GA4React","Analytics","scopedPath","a","isInitialized","initialize","pageview","RandomQuote","useState","quote","setQuote","isLoadingQuote","setIsLoadingQuote","hasApiError","setHasApiError","fetchQuote","useCallback","fetch","then","response","json","randomQuote","catch","finally","Paper","elevation","p","secondary","Typography","textAlign","CircularProgress","size","variant","author","Home","PageContentLayout","header","subHeader","paragraph","AvatarSizeInPixels","medium","veryLarge","ProfilePicture","url","avatarSize","isMediaLoading","setIsMediaLoading","Skeleton","animation","width","height","Avatar","alt","src","display","onLoad","currentEmployer","find","job","previousEmployers","filter","ExternalLink","MoreLink","exact","InfoBar","resumePageRoute","useRouteMatch","scaleFactor","useBreakpoints","md","Stack","alignItems","Divider","index","length","isExact","direction","Main","Box","my","Container","Grid","container","Hidden","mdDown","item","xs","lg","top","mdUp","mb","routes","path","lightTheme","background","default","mode","components","MuiCssBaseline","styleOverrides","MuiAppBar","root","themes","light","dark","paper","COOKIES_THEME_MODE","getDefaultMode","presetCookiesThemeMode","cookie","get","hours","Date","getHours","getTheme","createTheme","defaultContext","toggleMode","AppThemeContext","createContext","displayName","ProvideAppTheme","themeContext","prefersDarkMode","useMediaQuery","setMode","useMemo","useLayoutEffect","previousMode","newMode","set","expires","provideAppTheme","Provider","value","ThemeProvider","indexLinks","nonIndexLinks","ThemeToggler","onClick","useContext","onToggleClick","DesktopNavigation","indexLink","nonIndexLink","orientation","MobileMenu","anchorElement","setAnchorElement","isMenuOpen","Boolean","onNavigationClick","event","currentTarget","Menu","id","anchorEl","open","onClose","MenuListProps","MenuItem","flexDirection","justifyContent","MobileNavigation","flexGrow","py","Navigation","AppBar","Toolbar","PUBLIC_URL","DOMAIN_URL","About","lazy","Resume","Projects","Stats","Contact","NotFound","console","debug","AppModule","location","TransitionGroup","CSSTransition","timeout","classNames","fallback","PageContentLayoutPlaceholder","App","CssBaseline","StyledEngineProvider","injectFirst","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictApp","StrictMode","rootElement","document","getElementById","hasChildNodes","hydrate","render","sm","breakpoints","px","disabled"],"mappings":"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","file":"static/js/main.cb294883.chunk.js","sourcesContent":["import { IconButton, IconButtonProps, styled } from '@material-ui/core';\r\n\r\nimport React from 'react';\r\n\r\nconst StyledIconButton = styled(IconButton)<IconButtonProps>(({ theme }) => {\r\n  return {\r\n    '&:hover': {\r\n      color: theme.palette.primary.main,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  };\r\n});\r\n\r\nexport default StyledIconButton;\r\n","export interface IJob {\r\n    company: string;\r\n    position: string;\r\n    link: string;\r\n    dateRange: string;\r\n    abstract?: string;\r\n    points: string[];\r\n    current?: boolean;\r\n}\r\n\r\nconst jobs: IJob[] = [\r\n    {\r\n        company: 'IMRIEL',\r\n        position: 'Technical Architect | Software Engineer | DevOps Engineer',\r\n        link: 'https://imriel.com',\r\n        dateRange: 'March 2015 - Present',\r\n        abstract: 'Architect & Develop applications for CBRE and C&W.',\r\n        points: [\r\n            'Transform monolithic apps to/with micro/mini service/serverless architectures.',\r\n            'Data Modelling, Architecting, developing end to end enterprise-grade apps with cloud and serverless technologies.',\r\n            'Lead teams, manage internal repositories, Peer-reviewing, managing legacy apps, maintain clean coding standards.',\r\n            'Leading, Mentoring, and assisting with teams as well as Peer-reviewing code for other team members to ensure the highest possible code quality and clean coding standards in software products.',\r\n            'Advising on innovative software development practices and providing technical assistance in dealing with client matters.',\r\n            'Researching and evaluating new development tools and software products to increase programming capabilities.',\r\n            'Scalable Integration projects between various CMS like MSD and Salesforce, Yardi using Serverless technology for C&W the real-estate giant.',\r\n            'Developed a virtual carper visualizer using ML/AI and Image Processing(https://loom-trial.myshopify.com/pages/visualizer).',\r\n            'Designing Database Model and Application Solution to manage a repository of financial real-estate transactions in APAC, EMEA and America regions for in-depth trend analysis.',\r\n            'Design end to end automation with CI/CD and DevOps processes using the latest tools and developing VNext build & release tasks.',\r\n            'Assisting in designing, developing, analyzing, testing, debugging, and executing modern Web Applications.',\r\n            'Determining user requirements, including project budgets and timelines as well as providing consultative services to clients and project team members on technical issues.',\r\n            'Preparing accurate reports to document design flaws and bugs as well as modifying existing software or system to correct errors and improve performance.',\r\n            'Developed custom importing tool libraries.',\r\n            'Convert monolithic applications to micro/mini services.',\r\n        ],\r\n        current: true,\r\n    },\r\n    {\r\n        company: 'TechGrains',\r\n        position: 'Sr. Software Engineer',\r\n        link: 'https://www.techgrains.com/',\r\n        dateRange: 'September 2013 – October 2015',\r\n        abstract: 'Develop and Support applications for hospitality industry.',\r\n        points: [\r\n            'Developed a POS System for Da-Pizza Planet chain with various hardware integration.',\r\n            'Developed Web APIs for internal product GoSurvey(http://gosurvey.in) and ShareExpense(http://shareexpense.in/) mobile apps for iOS, Android and Web clients.',\r\n            'Written, tested, and debugged Web API, Web applications and desktop applications.',\r\n            'Handled front-end and back-end aspect of Web applications.',\r\n            'Coordinated with clients for complex software installations and issue.',\r\n            'Perform code review, improve coding standards and ensuring software quality.',\r\n        ],\r\n    },\r\n    {\r\n        company: 'Promact',\r\n        position: 'Jr. Software Engineer',\r\n        link: 'https://promactinfo.com',\r\n        dateRange: 'July 2012 – August 2013',\r\n        abstract: 'Develop and Support applications for portfolio of applications.',\r\n        points: [\r\n            'Developed Web applications using MVC and Web API.',\r\n            'Developed test plans, identified issues, and modified programs.',\r\n            'Researched, analyzed and modified existing systems.',\r\n            'Supported back-office desktop applications for www.viagogo.com.',\r\n            'Enhanced and deployed reporting tool based on Google Analytics.',\r\n            'Debugging and fixing issues in existing applications.',\r\n        ],\r\n    },\r\n];\r\n\r\nexport default jobs;\r\n","import {\r\n  Link,\r\n  LinkProps,\r\n  Typography,\r\n  TypographyProps,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport React, { ReactNode, useState } from 'react';\r\n\r\nexport interface IStyledLinkLinkProps extends Omit<LinkProps, 'href'> {\r\n  to: string;\r\n  label: string;\r\n  capitalized?: boolean;\r\n  bold?: boolean;\r\n  bottomBorder?: boolean;\r\n  typographyProps?: Omit<TypographyProps, 'children'>;\r\n  children?: JSX.Element;\r\n}\r\n\r\nconst StyledLink = ({\r\n  to,\r\n  label,\r\n  capitalized,\r\n  bold,\r\n  bottomBorder = true,\r\n  typographyProps,\r\n  children,\r\n  ...rest\r\n}: IStyledLinkLinkProps) => {\r\n  const theme = useTheme();\r\n  const transformedLabel = capitalized ? label?.toUpperCase() : label;\r\n  const {\r\n    style: typographyStyle,\r\n    sx: typographySx,\r\n    ...restOfTypographyProps\r\n  } = {\r\n    ...typographyProps,\r\n  };\r\n  const overriddenStyle: React.CSSProperties = {\r\n    transition: 'color 0.2s ease, border-bottom-color 0.2s ease',\r\n    borderBottom: bottomBorder\r\n      ? 'dotted 1px rgba(160, 160, 160, 0.65)'\r\n      : undefined,\r\n    fontWeight: bold ? 'bold' : undefined,\r\n    cursor: 'pointer',\r\n  };\r\n  return (\r\n    <Link\r\n      {...rest}\r\n      href={to}\r\n      style={{\r\n        color: 'inherit',\r\n        textDecoration: 'none',\r\n      }}\r\n      rel=\"noopener\">\r\n      {children &&\r\n        React.Children.map(children, (child) =>\r\n          React.cloneElement(child, {\r\n            style: {\r\n              ...child.props.style,\r\n              ...overriddenStyle,\r\n              '&:hover': {\r\n                color: theme.palette.primary.main,\r\n              },\r\n            },\r\n          }),\r\n        )}\r\n      {!children && (\r\n        <Typography\r\n          {...restOfTypographyProps}\r\n          style={{\r\n            ...typographyStyle,\r\n            ...overriddenStyle,\r\n          }}\r\n          sx={{\r\n            ...typographySx,\r\n            '&:hover': {\r\n              color: theme.palette.primary.main,\r\n            },\r\n          }}\r\n          component=\"span\">\r\n          {transformedLabel}\r\n        </Typography>\r\n      )}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default StyledLink;\r\n","interface IPersonalInfo {\r\n    firstName: string;\r\n    lastName: string;\r\n    fullName: string;\r\n    email: string;\r\n    siteUrl: string;\r\n    githubUrl: string;\r\n    facebookUrl: string;\r\n    instagramUrl: string;\r\n    linkedInUrl: string;\r\n    twitterUrl: string;\r\n}\r\n\r\nconst personalInfo: IPersonalInfo = {\r\n    firstName: 'Nilesh',\r\n    lastName: 'Moradiya',\r\n    fullName: 'Nilesh Moradiya',\r\n    email: 'nileshmoradiya_coder@outlook.com',\r\n    siteUrl: 'nileshmoradiya.com',\r\n    githubUrl: 'https://github.com/nileshmoradiya',\r\n    facebookUrl: 'https://www.facebook.com/NnileshH',\r\n    instagramUrl: 'https://www.instagram.com/nilesh_moradiya',\r\n    linkedInUrl: 'https://www.linkedin.com/in/nilesh-moradiya',\r\n    twitterUrl: 'https://twitter.com/Nilesh_Moradiya'\r\n}\r\n\r\nexport default personalInfo;","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n// See https://reacttraining.com/react-router/web/guides/scroll-restoration/scroll-to-top\r\nconst ScrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React, { ReactNode } from 'react';\r\n\r\nimport { Helmet } from 'react-helmet-async';\r\nimport ScrollToTop from '../components/Template/ScrollToTop';\r\nimport personalInfo from '../data/personalInfo';\r\n\r\ninterface IPageProps {\r\n  title: string;\r\n  description: string;\r\n  enableTitleTemplate?: boolean;\r\n  children: ReactNode;\r\n}\r\n\r\nconst PageLayout = ({\r\n  title,\r\n  description,\r\n  enableTitleTemplate = true,\r\n  children,\r\n}: IPageProps) => (\r\n  <>\r\n    <ScrollToTop />\r\n    <Helmet\r\n      titleTemplate={\r\n        enableTitleTemplate ? `%s | ${personalInfo.fullName}` : title\r\n      }\r\n      defer={false}>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </>\r\n);\r\n\r\nexport default PageLayout;\r\n","import { Button, ButtonProps, styled } from '@material-ui/core';\r\n\r\nimport React from 'react';\r\n\r\nconst StyledButton = styled(Button)<ButtonProps>(({ theme }) => {\r\n  return {\r\n    padding: `${theme.spacing(2)} ${theme.spacing(2)}`,\r\n    border: '1px solid',\r\n    borderRadius: 0,\r\n    color: theme.palette.text.primary,\r\n    backgroundColor: 'transparent',\r\n    borderColor: theme.palette.action.focus,\r\n    '&:hover': {\r\n      color: theme.palette.primary.main,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  };\r\n});\r\n\r\nexport default StyledButton;\r\n","import EmailRoundedIcon from '@material-ui/icons/EmailRounded';\r\nimport FacebookRoundedIcon from '@material-ui/icons/FacebookRounded';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport React from 'react';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport personalInfo from './personalInfo';\r\n\r\ninterface IContact {\r\n  link: string;\r\n  label: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nconst contacts: IContact[] = [\r\n  {\r\n    link: personalInfo.linkedInUrl,\r\n    label: 'LinkedIn',\r\n    icon: <LinkedInIcon />,\r\n  },\r\n  {\r\n    link: personalInfo.githubUrl,\r\n    label: 'Github',\r\n    icon: <GitHubIcon />,\r\n  },\r\n  {\r\n    link: personalInfo.twitterUrl,\r\n    label: 'Twitter',\r\n    icon: <TwitterIcon />,\r\n  },\r\n\r\n  {\r\n    link: personalInfo.instagramUrl,\r\n    label: 'Instagram',\r\n    icon: <InstagramIcon />,\r\n  },\r\n  {\r\n    link: personalInfo.facebookUrl,\r\n    label: 'Facebook',\r\n    icon: <FacebookRoundedIcon />,\r\n  },\r\n  {\r\n    link: `mailto:${personalInfo.email}`,\r\n    label: 'Email',\r\n    icon: <EmailRoundedIcon />,\r\n  },\r\n];\r\n\r\nexport default contacts;\r\n","import React, { ReactNode } from 'react';\r\n\r\nimport { Link } from '@material-ui/core';\r\nimport StyledIconButton from '../StyledIconButton';\r\nimport contacts from '../../data/contact';\r\n\r\nconst ContactIcon = ({\r\n  children,\r\n  label,\r\n}: {\r\n  children: ReactNode;\r\n  label: string;\r\n}) => {\r\n  return (\r\n    <>\r\n      <StyledIconButton aria-label={label}>{children}</StyledIconButton>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ContactIcons = () => {\r\n  return (\r\n    <>\r\n      {contacts.map((contact) => (\r\n        <Link\r\n          key={contact.label}\r\n          href={contact.link}\r\n          target=\"_blank\"\r\n          rel=\"noopener\">\r\n          <ContactIcon label={contact.label}>{contact.icon}</ContactIcon>\r\n        </Link>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactIcons;\r\n","import { NavLink, NavLinkProps } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport { Typography, TypographyProps, useTheme } from '@material-ui/core';\r\n\r\ninterface IStyledLinkLinkProps extends NavLinkProps {\r\n  to: string;\r\n  label: string;\r\n  capitalized?: boolean;\r\n  bold?: boolean;\r\n  bottomBorder?: boolean;\r\n  typographyProps?: Omit<TypographyProps, 'children'>;\r\n  disableActiveStyle?: boolean;\r\n  children?: JSX.Element;\r\n}\r\n\r\nconst StyledNavLink = ({\r\n  to,\r\n  label,\r\n  capitalized,\r\n  bold,\r\n  bottomBorder = true,\r\n  typographyProps,\r\n  children,\r\n  activeStyle,\r\n  disableActiveStyle = false,\r\n  ...rest\r\n}: IStyledLinkLinkProps) => {\r\n  const theme = useTheme();\r\n  // const [isHover, setIsHover] = useState(false);\r\n  const transformedLabel = capitalized\r\n    ? label?.toString()?.toUpperCase()\r\n    : label;\r\n  const {\r\n    style: typographyStyle,\r\n    sx: typographySx,\r\n    ...restOfTypographyProps\r\n  } = {\r\n    ...typographyProps,\r\n  };\r\n  const overriddenStyle: React.CSSProperties = {\r\n    transition: 'color 0.2s ease, border-bottom-color 0.2s ease',\r\n    borderBottom: bottomBorder\r\n      ? 'dotted 1px rgba(160, 160, 160, 0.65)'\r\n      : undefined,\r\n    fontWeight: bold ? 'bold' : undefined,\r\n  };\r\n  return (\r\n    <NavLink\r\n      {...rest}\r\n      to={to}\r\n      style={{\r\n        color: 'inherit',\r\n        textDecoration: 'none',\r\n      }}\r\n      activeStyle={\r\n        disableActiveStyle\r\n          ? {}\r\n          : {\r\n              textDecoration: 'underline',\r\n              color: theme.palette.primary.main,\r\n              ...activeStyle,\r\n            }\r\n      }>\r\n      {children &&\r\n        React.Children.map(children, (child) =>\r\n          React.cloneElement(child, {\r\n            style: {\r\n              ...child.props.style,\r\n              '&:hover': {\r\n                color: theme.palette.primary.main,\r\n              },\r\n            },\r\n          }),\r\n        )}\r\n      {!children && (\r\n        <Typography\r\n          {...restOfTypographyProps}\r\n          component=\"span\"\r\n          style={{\r\n            ...typographyStyle,\r\n            ...overriddenStyle,\r\n          }}\r\n          sx={{\r\n            ...typographySx,\r\n            '&:hover': {\r\n              color: theme.palette.primary.main,\r\n            },\r\n          }}>\r\n          {transformedLabel}\r\n        </Typography>\r\n      )}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default StyledNavLink;\r\n","import React, { useState } from 'react';\r\nimport { Typography, TypographyProps, useTheme } from '@material-ui/core';\r\n\r\nimport { SxProps } from '@material-ui/system';\r\n\r\nconst LETTER_SPACING = '0.25em';\r\n\r\ntype FontVariant = 'normal' | 'title' | 'titleLight' | 'subtitle';\r\n\r\nconst fontVariantStyles: Record<FontVariant, SxProps> = {\r\n  normal: {},\r\n  title: {\r\n    fontWeight: 900,\r\n    fontSize: '1.5em',\r\n    fontFamily: '\"Raleway\", Helvetica, sans-serif',\r\n    letterSpacing: LETTER_SPACING,\r\n  },\r\n  titleLight: {\r\n    fontWeight: 800,\r\n    fontSize: '0.8em',\r\n    fontFamily: '\"Raleway\", Helvetica, sans-serif',\r\n    letterSpacing: LETTER_SPACING,\r\n  },\r\n  subtitle: {\r\n    fontWeight: 400,\r\n    fontSize: '0.7em',\r\n    fontFamily: '\"Raleway\", Helvetica, sans-serif',\r\n    letterSpacing: LETTER_SPACING,\r\n  },\r\n};\r\n\r\nexport interface IStyledTypographyProps extends TypographyProps {\r\n  bold?: boolean;\r\n  capitalized?: boolean;\r\n  spaced?: boolean;\r\n  fontVariant?: FontVariant;\r\n  hoverEffect?: boolean;\r\n}\r\n\r\nconst StyledTypography = ({\r\n  bold = false,\r\n  capitalized = false,\r\n  spaced = false,\r\n  fontVariant = 'normal',\r\n  hoverEffect = false,\r\n  children,\r\n  style: styleProps,\r\n  sx: sxProps,\r\n  ...rest\r\n}: IStyledTypographyProps & TypographyProps) => {\r\n  const theme = useTheme();\r\n  const fontVariantStyle = fontVariantStyles[fontVariant];\r\n  const overriddenStyle: React.CSSProperties = {\r\n    transition: hoverEffect\r\n      ? 'color 0.2s ease, border-bottom-color 0.2s ease'\r\n      : undefined,\r\n    cursor: hoverEffect ? 'pointer' : undefined,\r\n    fontWeight: bold ? 'bold' : undefined,\r\n    letterSpacing: spaced ? LETTER_SPACING : undefined,\r\n  };\r\n  const capitalizedChildren =\r\n    capitalized && typeof children === 'string'\r\n      ? children?.toString()?.toUpperCase()\r\n      : children;\r\n  return (\r\n    <Typography\r\n      {...rest}\r\n      sx={{\r\n        ...sxProps,\r\n        ...fontVariantStyle,\r\n        '&:hover': {\r\n          color: hoverEffect ? theme.palette.primary.main : undefined,\r\n        },\r\n      }}\r\n      style={{ ...styleProps, ...overriddenStyle }}>\r\n      {capitalizedChildren}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default StyledTypography;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport GA4React from 'ga-4-react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst { NODE_ENV, REACT_APP_GA_TRACKING_ID } = process.env;\r\n\r\nlet ga4react: GA4React;\r\nif (NODE_ENV === 'production' && REACT_APP_GA_TRACKING_ID) {\r\n  ga4react = new GA4React(REACT_APP_GA_TRACKING_ID);\r\n}\r\n\r\nconst Analytics = () => {\r\n  const { pathname } = useLocation();\r\n  useEffect(() => {\r\n    if (ga4react) {\r\n      (async (scopedPath) => {\r\n        const isGaInitialized = GA4React.isInitialized();\r\n        if (!isGaInitialized) {\r\n          await ga4react.initialize();\r\n        }\r\n        ga4react.pageview(scopedPath);\r\n      })(pathname);\r\n    }\r\n  }, [pathname]);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default Analytics;\r\n","import { CircularProgress, Paper, Theme, Typography } from '@material-ui/core';\r\nimport React, { ReactNode, useCallback, useEffect } from 'react';\r\n\r\nimport { useState } from 'react';\r\n\r\ninterface IQuote {\r\n  content: string;\r\n  author: string;\r\n}\r\n\r\nexport interface IRandomQuoteProps {}\r\n\r\nconst RandomQuote = ({}: IRandomQuoteProps) => {\r\n  const [quote, setQuote] = useState<IQuote>();\r\n  const [isLoadingQuote, setIsLoadingQuote] = useState<boolean>(true);\r\n  const [hasApiError, setHasApiError] = useState<boolean>(false);\r\n\r\n  const fetchQuote = useCallback(async () => {\r\n    await fetch('https://api.quotable.io/random')\r\n      .then(async (response) => {\r\n        const randomQuote: IQuote = await response.json();\r\n        setQuote({ ...randomQuote });\r\n      })\r\n      .catch(() => {\r\n        setHasApiError(true);\r\n      })\r\n      .finally(() => {\r\n        setIsLoadingQuote(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchQuote();\r\n  }, [fetchQuote]);\r\n\r\n  return hasApiError ? (\r\n    <></>\r\n  ) : (\r\n    <>\r\n      <Paper\r\n        elevation={4}\r\n        sx={{\r\n          p: 4,\r\n          color: (theme: Theme) => theme.palette.text.secondary,\r\n        }}>\r\n        {isLoadingQuote && (\r\n          <Typography textAlign=\"center\">\r\n            <CircularProgress\r\n              size={16}\r\n              sx={{\r\n                color: (theme: Theme) => theme.palette.text.secondary,\r\n              }}\r\n            />\r\n          </Typography>\r\n        )}\r\n        {!isLoadingQuote && quote && (\r\n          <>\r\n            <Typography textAlign=\"center\" variant=\"subtitle1\">\r\n              <i>\r\n                {'❝ '}\r\n                {quote.content}\r\n                {' ❞'}\r\n              </i>\r\n            </Typography>\r\n            <Typography textAlign=\"center\" variant=\"subtitle2\">\r\n              - {quote.author}\r\n            </Typography>\r\n          </>\r\n        )}\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RandomQuote;\r\n","import PageContentLayout from '../layout/PageContentLayout';\r\nimport PageLayout from '../layout/PageLayout';\r\nimport RandomQuote from '../components/RandomQuote';\r\nimport React from 'react';\r\nimport StyledNavLink from '../components/StyledNavLink';\r\nimport { Typography } from '@material-ui/core';\r\nimport personalInfo from '../data/personalInfo';\r\n\r\ninterface IHomeProps {}\r\n\r\nconst Home = ({}: IHomeProps) => {\r\n  return (\r\n    <>\r\n      <PageLayout\r\n        title={personalInfo.fullName}\r\n        enableTitleTemplate={false}\r\n        description=\"A BEAUTIFUL, RESPONSIVE, STATICALLY-GENERATED, REACT APPLICATION WRITTEN WITH MODERN JAVASCRIPT and HOSTED OVER THE GITHUB PAGES\">\r\n        <PageContentLayout\r\n          header=\"About this site\"\r\n          subHeader=\"A BEAUTIFUL, RESPONSIVE, STATICALLY-GENERATED, REACT APPLICATION WRITTEN WITH MODERN JAVASCRIPT and HOSTED OVER THE GITHUB PAGES\">\r\n          <Typography variant=\"body1\" paragraph>\r\n            Welcome to my website!\r\n          </Typography>\r\n          <Typography variant=\"body1\" paragraph>\r\n            Thanks for visiting! 🙏 Explore this site to read more{' '}\r\n            <StyledNavLink to=\"/about\" label=\"about my background\" />,{' '}\r\n            <StyledNavLink to=\"/resume\" label=\"what I have to offer 🧾\" />,{' '}\r\n            <StyledNavLink to=\"/projects\" label=\"work I've done 👷‍♂️\" />, view{' '}\r\n            <StyledNavLink to=\"/stats\" label=\"site statistics 🧮\" />, or If you\r\n            have questions, would like to discuss an opportunity to work\r\n            together or just catch-up over coffee,{' '}\r\n            <StyledNavLink\r\n              to=\"/contact\"\r\n              label=\"feel free to get in touch with me ✍\"\r\n            />\r\n            .\r\n          </Typography>\r\n          <RandomQuote />\r\n        </PageContentLayout>\r\n      </PageLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Avatar, Skeleton } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\n\r\nimport personalInfo from '../data/personalInfo';\r\n\r\nconst { fullName } = personalInfo;\r\n\r\nconst { PUBLIC_URL } = process.env;\r\n\r\nexport type Size = 'medium' | 'veryLarge';\r\n\r\nexport const AvatarSizeInPixels = {\r\n  medium: 48,\r\n  veryLarge: 160,\r\n};\r\n\r\ninterface IProfilePictureProps {\r\n  size?: Size;\r\n}\r\n\r\nconst getSizes = (sizeType: Size): { avatarSize: number } => {\r\n  return {\r\n    avatarSize: AvatarSizeInPixels[sizeType],\r\n  };\r\n};\r\n\r\nconst ProfilePicture = (props: IProfilePictureProps) => {\r\n  const url = `${PUBLIC_URL}/images/me.jpg`;\r\n  const { size = 'medium' } = props;\r\n  const { avatarSize } = getSizes(size);\r\n  const [isMediaLoading, setIsMediaLoading] = useState<boolean>(true);\r\n  const onImageLoaded = () => {\r\n    setIsMediaLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isMediaLoading ? (\r\n        <Skeleton\r\n          animation=\"wave\"\r\n          variant=\"circular\"\r\n          width={avatarSize}\r\n          height={avatarSize}\r\n        />\r\n      ) : (\r\n        <Avatar\r\n          alt={fullName}\r\n          src={url}\r\n          sx={{\r\n            width: avatarSize,\r\n            height: avatarSize,\r\n          }}\r\n          style={isMediaLoading ? { display: 'none' } : {}}>\r\n          N M\r\n        </Avatar>\r\n      )}\r\n      <img\r\n        src={url}\r\n        alt={fullName}\r\n        width={avatarSize}\r\n        height={avatarSize}\r\n        style={{ display: 'none' }}\r\n        onLoad={onImageLoaded}></img>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfilePicture;\r\n","import { Box, Divider, Stack, Typography } from '@material-ui/core';\r\nimport React, { Fragment } from 'react';\r\nimport StyledLink, { IStyledLinkLinkProps } from '../StyledLink';\r\n\r\nimport ContactIcons from '../Contact/ContactIcons';\r\nimport ProfilePicture from '../ProfilePicture';\r\nimport StyledButton from '../StyledButton';\r\nimport StyledNavLink from '../StyledNavLink';\r\nimport StyledTypography from '../StyledTypography';\r\nimport jobs from '../../data/resume/job';\r\nimport personalInfo from '../../data/personalInfo';\r\nimport useBreakpoints from '../../hooks/useBreakpoints';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nconst { firstName, fullName, email, siteUrl } = personalInfo;\r\nconst currentEmployer = jobs.find((job) => job.current) || jobs[0];\r\nconst previousEmployers = jobs.filter(\r\n  (job) => job.company != currentEmployer.company,\r\n);\r\n\r\nconst ExternalLink = (props: IStyledLinkLinkProps) => {\r\n  return (\r\n    <StyledLink\r\n      {...props}\r\n      target=\"_blank\"\r\n      typographyProps={{\r\n        variant: 'subtitle2',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst MoreLink = ({ to, label }: { to: string; label: string }) => {\r\n  return (\r\n    <>\r\n      <StyledNavLink exact to={to} label=\"Learn More\">\r\n        <StyledButton variant=\"text\">\r\n          <StyledTypography\r\n            fontVariant=\"titleLight\"\r\n            capitalized={true}\r\n            bold={true}>\r\n            {label}\r\n          </StyledTypography>\r\n        </StyledButton>\r\n      </StyledNavLink>\r\n    </>\r\n  );\r\n};\r\n\r\nconst InfoBar = () => {\r\n  const resumePageRoute = useRouteMatch(`/resume`);\r\n  const { scaleFactor } = useBreakpoints();\r\n  const { md } = useBreakpoints();\r\n\r\n  return (\r\n    <>\r\n      <Stack spacing={6 / scaleFactor}>\r\n        <Stack spacing={3 / scaleFactor} alignItems=\"center\">\r\n          <ProfilePicture size=\"veryLarge\" />\r\n          <StyledTypography fontVariant=\"title\" capitalized={true}>\r\n            {fullName}\r\n          </StyledTypography>\r\n          <StyledLink\r\n            to={`mailto:${email}`}\r\n            bold={true}\r\n            capitalized={true}\r\n            label={`${email} 📧`}\r\n            typographyProps={{\r\n              variant: 'overline',\r\n              color: 'text.disabled',\r\n              letterSpacing: '0.15em',\r\n            }}\r\n          />\r\n        </Stack>\r\n        <Divider />\r\n        <Stack spacing={3 / scaleFactor}>\r\n          <StyledTypography\r\n            variant=\"button\"\r\n            fontVariant=\"titleLight\"\r\n            bold={true}\r\n            capitalized={true}>\r\n            About\r\n          </StyledTypography>\r\n          <Typography variant=\"subtitle2\" paragraph>\r\n            Hi👋, I&apos;m {firstName}. I like building things. I am a{' '}\r\n            <ExternalLink\r\n              to=\"https://svitvasad.ac.in/\"\r\n              label=\"SVIT, Vasad - GTU\"\r\n            />{' '}\r\n            graduate, and currently working as a {currentEmployer.position} at{' '}\r\n            <ExternalLink\r\n              to={currentEmployer.link}\r\n              label={currentEmployer.company}\r\n            />\r\n            . Before {currentEmployer.company} I was at{' '}\r\n            {previousEmployers.map((job, index) => (\r\n              <Fragment key={job.company}>\r\n                <ExternalLink to={job.link} label={job.company} />{' '}\r\n                {index < previousEmployers.length - 1 && 'and '}\r\n              </Fragment>\r\n            ))}\r\n            .\r\n          </Typography>\r\n          <MoreLink\r\n            to={resumePageRoute?.isExact ? '/about' : '/resume'}\r\n            label={resumePageRoute?.isExact ? 'About me' : 'Know More'}\r\n          />\r\n        </Stack>\r\n        <Divider />\r\n        <Stack direction=\"row\">\r\n          <ContactIcons />\r\n        </Stack>\r\n        <Typography\r\n          display=\"inline\"\r\n          variant=\"overline\"\r\n          sx={{\r\n            color: 'text.disabled',\r\n          }}>\r\n          &copy; {fullName}{' '}\r\n          <StyledNavLink\r\n            to=\"/\"\r\n            label={siteUrl}\r\n            typographyProps={{\r\n              variant: 'overline',\r\n            }}\r\n            disableActiveStyle={true}\r\n          />\r\n          .\r\n        </Typography>\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InfoBar;\r\n","import { Box, Container, Divider, Grid, Hidden } from '@material-ui/core';\r\nimport React, { ReactNode } from 'react';\r\n\r\nimport Analytics from '../components/Template/Analytics';\r\nimport { HelmetProvider } from 'react-helmet-async';\r\nimport InfoBar from '../components/Template/InfoBar';\r\nimport Navigation from '../components/Template/Navigation';\r\nimport Sticky from 'react-stickynode';\r\nimport useBreakpoints from '../hooks/useBreakpoints';\r\n\r\ninterface IMainProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst Main = ({ children }: IMainProps) => {\r\n  const { scaleFactor } = useBreakpoints();\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          my: 6 / scaleFactor,\r\n        }}>\r\n        <Container>\r\n          <Grid container spacing={2}>\r\n            <Hidden mdDown>\r\n              <Grid item xs={12} md={5} lg={4}>\r\n                <Sticky top={98}>\r\n                  <InfoBar />\r\n                </Sticky>\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid item xs={12} md={7} lg={8}>\r\n              {children}\r\n            </Grid>\r\n            <Hidden mdUp>\r\n              <Grid item xs={12} md={5} lg={4}>\r\n                <Divider\r\n                  sx={{\r\n                    mb: 2,\r\n                  }}\r\n                />\r\n                <InfoBar />\r\n              </Grid>\r\n            </Hidden>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import personalInfo from \"./personalInfo\";\r\n\r\nconst routes = [\r\n    {\r\n        index: true,\r\n        label: personalInfo.fullName,\r\n        path: '/',\r\n    },\r\n    {\r\n        label: 'About',\r\n        path: '/about',\r\n    },\r\n    {\r\n        label: 'Resume',\r\n        path: '/resume',\r\n    },\r\n    {\r\n        label: 'Projects',\r\n        path: '/projects',\r\n    },\r\n    {\r\n        label: 'Stats',\r\n        path: '/stats',\r\n    },\r\n    {\r\n        label: 'Contact',\r\n        path: '/contact',\r\n    },\r\n];\r\n\r\nexport default routes;\r\n","import { ThemeOptions } from \"@material-ui/core\";\r\n\r\nconst lightTheme: ThemeOptions = {\r\n  palette: {\r\n    primary: {\r\n      main: '#2e59ba'\r\n    },\r\n    background: {\r\n      default: '#f5f5f5',\r\n    },\r\n    mode: 'light'\r\n  },\r\n  components: {\r\n    MuiCssBaseline: {\r\n      styleOverrides: `\r\n          /* Make scroll overlay*/\r\n        body {\r\n              overflow-y:overlay;\r\n          }\r\n        /* Ref: https://www.w3schools.com/howto/howto_css_custom_scrollbar.asp*/\r\n        /* Scrollbar width */\r\n        ::-webkit-scrollbar {\r\n          width: 8px;\r\n          height:8px;\r\n        }\r\n        /* Scrollbar Track */\r\n        ::-webkit-scrollbar-track {\r\n          background: #e0e0e0;\r\n          border-radius: 4px;\r\n        }\r\n        /* Scrollbar Handle */\r\n        ::-webkit-scrollbar-thumb {\r\n          background: #bdbdbd;\r\n          border-radius: 4px;\r\n        }\r\n        /* Scrollbar Handle on hover */\r\n        ::-webkit-scrollbar-thumb:hover {\r\n          background: #9e9e9e;\r\n          border-radius: 4px;\r\n        }\r\n        `,\r\n    },\r\n    MuiAppBar: {\r\n      styleOverrides: {\r\n        root: {\r\n          backgroundColor: '#FFFFFF',\r\n          color: '#212121'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst darkTheme: ThemeOptions = {\r\n\r\n  palette: {\r\n    primary: {\r\n      main: '#2e7d32'\r\n    },\r\n    background: {\r\n      default: '#090C10',\r\n      paper: '#0D1117'\r\n    },\r\n    mode: 'dark'\r\n  },\r\n  components: {\r\n    MuiCssBaseline: {\r\n      styleOverrides: `\r\n          /* Make scroll overlay*/\r\n        body {\r\n              overflow-y:overlay;\r\n          }\r\n        /* Ref: https://www.w3schools.com/howto/howto_css_custom_scrollbar.asp*/\r\n        /* Scrollbar width */\r\n        ::-webkit-scrollbar {\r\n          width: 8px;\r\n          height:8px;\r\n        }\r\n        /* Scrollbar Track */\r\n        ::-webkit-scrollbar-track {\r\n          background: #2B2B2B;\r\n          border-radius: 4px;\r\n        }\r\n        /* Scrollbar Handle */\r\n        ::-webkit-scrollbar-thumb {\r\n          background: #626262;\r\n          border-radius: 4px;\r\n        }\r\n        /* Scrollbar Handle on hover */\r\n        ::-webkit-scrollbar-thumb:hover {\r\n          background: #959595;\r\n          border-radius: 4px;\r\n        }\r\n        `,\r\n    },\r\n    MuiAppBar: {\r\n      styleOverrides: {\r\n        root: {\r\n          backgroundColor: '#0D1117',\r\n          color: '#FFFFFF'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default lightTheme;\r\nexport { darkTheme, lightTheme };\r\n","import { PaletteMode, useMediaQuery } from '@material-ui/core';\r\nimport React, { ReactNode, useLayoutEffect, useMemo } from 'react';\r\nimport {\r\n  Theme,\r\n  ThemeOptions,\r\n  ThemeProvider,\r\n  createTheme,\r\n} from '@material-ui/core/styles';\r\nimport { createContext, useContext, useEffect, useState } from 'react';\r\nimport { darkTheme, lightTheme } from '../data/theme';\r\n\r\nimport cookie from 'js-cookie';\r\n\r\nconst themes: { light: ThemeOptions; dark: ThemeOptions } = {\r\n  light: lightTheme,\r\n  dark: darkTheme,\r\n};\r\n\r\nconst COOKIES_THEME_MODE = 'v1-theme-mode';\r\n\r\nconst getDefaultMode = (): PaletteMode => {\r\n  const presetCookiesThemeMode = cookie.get(COOKIES_THEME_MODE);\r\n\r\n  if (presetCookiesThemeMode) {\r\n    return presetCookiesThemeMode === 'dark' ? 'dark' : 'light';\r\n  }\r\n  const hours = new Date().getHours();\r\n\r\n  return hours >= 19 || hours <= 7 ? 'dark' : 'light';\r\n};\r\n\r\nconst getTheme = (mode: PaletteMode): Theme => {\r\n  return createTheme(themes[mode]);\r\n};\r\n\r\ninterface IAppThemeContext {\r\n  theme: Theme;\r\n  toggleMode: () => void;\r\n}\r\n\r\nconst defaultContext = {\r\n  theme: getTheme(getDefaultMode()),\r\n  toggleMode: () => {},\r\n};\r\n\r\nexport const AppThemeContext = createContext<IAppThemeContext>(defaultContext);\r\nAppThemeContext.displayName = 'AppThemeContext';\r\n\r\nexport const useAppTheme = () => {\r\n  return useContext(AppThemeContext);\r\n};\r\n\r\nfunction provideAppTheme(): IAppThemeContext {\r\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n  const [mode, setMode] = useState<PaletteMode>(getDefaultMode());\r\n  const theme = useMemo(() => getTheme(mode), [mode]);\r\n  // const [theme, setTheme] = useState<Theme>(getTheme(mode));\r\n\r\n  const toggleMode = () => {\r\n    setMode((previousMode) => {\r\n      const newMode = previousMode === 'dark' ? 'light' : 'dark';\r\n      cookie.set(COOKIES_THEME_MODE, newMode, {\r\n        expires: 7,\r\n      });\r\n      return newMode;\r\n    });\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setTheme(getTheme(mode));\r\n  // }, [mode]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (prefersDarkMode && !cookie.get(COOKIES_THEME_MODE)) {\r\n      setMode('dark');\r\n    }\r\n  }, [prefersDarkMode]);\r\n  return { theme: theme, toggleMode: toggleMode };\r\n}\r\n\r\ninterface IProvideAppThemeProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst ProvideAppTheme = ({ children }: IProvideAppThemeProps) => {\r\n  const themeContext = provideAppTheme();\r\n  return (\r\n    <AppThemeContext.Provider value={themeContext}>\r\n      <ThemeProvider theme={themeContext.theme}>{children}</ThemeProvider>\r\n    </AppThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ProvideAppTheme;\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Divider,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Stack,\r\n  Toolbar,\r\n} from '@material-ui/core';\r\nimport React, { Fragment } from 'react';\r\n\r\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\r\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\r\nimport ProfilePicture from '../ProfilePicture';\r\nimport StyledIconButton from '../StyledIconButton';\r\nimport StyledNavLink from '../StyledNavLink';\r\nimport StyledTypography from '../StyledTypography';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport personalInfo from '../../data/personalInfo';\r\nimport routes from '../../data/routes';\r\nimport { useAppTheme } from '../../context/AppThemeContext';\r\nimport useBreakpoints from '../../hooks/useBreakpoints';\r\n\r\nconst indexLinks = routes.filter((link) => link.index);\r\nconst nonIndexLinks = routes.filter((link) => !link.index);\r\n\r\nconst ThemeToggler = ({ onClick }: { onClick?: () => void }) => {\r\n  const { theme, toggleMode } = useAppTheme();\r\n  const onToggleClick = async () => {\r\n    toggleMode();\r\n    if (onClick) {\r\n      onClick();\r\n    }\r\n  };\r\n  return (\r\n    <StyledIconButton onClick={onToggleClick} aria-label=\"Switch Theme\">\r\n      {theme.palette.mode === 'dark' && <WbSunnyIcon />}\r\n      {theme.palette.mode === 'light' && <NightsStayIcon />}\r\n    </StyledIconButton>\r\n  );\r\n};\r\n\r\nconst DesktopNavigation = () => {\r\n  return (\r\n    <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n      {indexLinks.map((indexLink) => (\r\n        <StyledNavLink\r\n          key={indexLink.label}\r\n          to={indexLink.path}\r\n          label={indexLink.label}\r\n          disableActiveStyle={true}>\r\n          <StyledTypography\r\n            variant=\"button\"\r\n            display=\"inline\"\r\n            bold={true}\r\n            capitalized={true}\r\n            spaced={true}\r\n            hoverEffect={true}>\r\n            {indexLink.label}\r\n          </StyledTypography>\r\n        </StyledNavLink>\r\n      ))}\r\n      {nonIndexLinks.map((nonIndexLink) => (\r\n        <Fragment key={nonIndexLink.label}>\r\n          <Divider orientation=\"vertical\" />\r\n          <StyledNavLink\r\n            exact\r\n            to={nonIndexLink.path}\r\n            label={nonIndexLink.label}>\r\n            <StyledTypography\r\n              variant=\"overline\"\r\n              display=\"inline\"\r\n              capitalized={true}\r\n              spaced={true}\r\n              hoverEffect={true}>\r\n              {nonIndexLink.label}\r\n            </StyledTypography>\r\n          </StyledNavLink>\r\n        </Fragment>\r\n      ))}\r\n      <ThemeToggler />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst MobileMenu = () => {\r\n  const [anchorElement, setAnchorElement] = React.useState<null | HTMLElement>(\r\n    null,\r\n  );\r\n  const isMenuOpen = Boolean(anchorElement);\r\n\r\n  const openMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorElement(event.currentTarget);\r\n  };\r\n\r\n  const onNavigationClick = () => {\r\n    setAnchorElement(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick={openMenuClick}>\r\n        <MenuRoundedIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorElement}\r\n        open={isMenuOpen}\r\n        onClose={onNavigationClick}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'basic-button',\r\n        }}>\r\n        {indexLinks.map((indexLink) => (\r\n          <StyledNavLink\r\n            exact\r\n            to={indexLink.path}\r\n            label={indexLink.label}\r\n            disableActiveStyle={true}\r\n            key={indexLink.label}>\r\n            <MenuItem onClick={onNavigationClick}>\r\n              <StyledTypography\r\n                variant=\"button\"\r\n                display=\"inline\"\r\n                bold={true}\r\n                capitalized={true}\r\n                spaced={true}\r\n                hoverEffect={true}>\r\n                {indexLink.label}\r\n              </StyledTypography>\r\n            </MenuItem>\r\n          </StyledNavLink>\r\n        ))}\r\n        <Divider orientation=\"horizontal\" variant=\"middle\" />\r\n        {nonIndexLinks.map((nonIndexLink) => (\r\n          <StyledNavLink\r\n            exact\r\n            to={nonIndexLink.path}\r\n            label={nonIndexLink.label}\r\n            key={nonIndexLink.label}>\r\n            <MenuItem onClick={onNavigationClick}>\r\n              <StyledTypography\r\n                variant=\"overline\"\r\n                display=\"inline\"\r\n                capitalized={true}\r\n                spaced={true}\r\n                hoverEffect={true}>\r\n                {nonIndexLink.label}\r\n              </StyledTypography>\r\n            </MenuItem>\r\n          </StyledNavLink>\r\n        ))}\r\n        <Divider orientation=\"horizontal\" variant=\"middle\" />\r\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\r\n          <ThemeToggler onClick={onNavigationClick} />\r\n        </Box>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nconst MobileNavigation = () => {\r\n  return (\r\n    <>\r\n      <StyledTypography\r\n        variant=\"button\"\r\n        bold={true}\r\n        capitalized={true}\r\n        spaced={true}\r\n        hoverEffect={true}\r\n        sx={{ flexGrow: 1 }}>\r\n        {personalInfo.fullName}\r\n      </StyledTypography>\r\n      <Box flexDirection=\"row-reverse\" sx={{ py: 1 }}>\r\n        <ProfilePicture size=\"medium\" />\r\n      </Box>\r\n      <MobileMenu />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Navigation = () => {\r\n  const { md: mdUp = true } = useBreakpoints('up');\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"sticky\"\r\n        variant=\"outlined\"\r\n        elevation={0}\r\n        sx={{\r\n          alignItems: mdUp ? 'center' : undefined,\r\n        }}>\r\n        <Toolbar variant=\"dense\">\r\n          {!mdUp && <MobileNavigation />}\r\n          {mdUp && <DesktopNavigation />}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import './App.css';\n\nimport { BrowserRouter, Route, Switch, useLocation } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport React, { Suspense, lazy } from 'react';\n\nimport Analytics from './components/Template/Analytics';\nimport { CssBaseline } from '@material-ui/core';\nimport { HelmetProvider } from 'react-helmet-async';\nimport Home from './pages/Home';\nimport Main from './layout/Main';\nimport Navigation from './components/Template/Navigation';\nimport { PageContentLayoutPlaceholder } from './layout/PageContentLayout'; // fallback for lazy pages\nimport ProvideAppTheme from './context/AppThemeContext';\nimport { StyledEngineProvider } from '@material-ui/core/styles';\n\nconst { PUBLIC_URL, DOMAIN_URL } = process.env;\n\nconst About = lazy(() => import('./pages/About'));\nconst Resume = lazy(() => import('./pages/Resume'));\nconst Projects = lazy(() => import('./pages/Projects'));\nconst Stats = lazy(() => import('./pages/Stats'));\nconst Contact = lazy(() => import('./pages/Contact'));\nconst NotFound = lazy(() => import('./pages/NotFound'));\n\nconsole.debug({\n  DOMAIN_URL,\n  PUBLIC_URL,\n});\nconst AppModule = () => {\n  const location = useLocation();\n  return (\n    <>\n      <Main>\n        <TransitionGroup>\n          <CSSTransition\n            timeout={300}\n            classNames=\"route-nav\"\n            key={location.pathname}>\n            <Suspense\n              fallback={<PageContentLayoutPlaceholder key=\"placeholder\" />}>\n              <Switch location={location}>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/resume\" component={Resume} />\n                <Route path=\"/projects\" component={Projects} />\n                <Route path=\"/stats\" component={Stats} />\n                <Route path=\"/contact\" component={Contact} />\n                <Route path=\"/plhl\" component={PageContentLayoutPlaceholder} />\n                <Route path=\"*\" component={NotFound} />\n              </Switch>\n            </Suspense>\n          </CSSTransition>\n        </TransitionGroup>\n      </Main>\n    </>\n  );\n};\n\nconst App = () => {\n  return (\n    <>\n      <HelmetProvider>\n        <ProvideAppTheme>\n          <CssBaseline>\n            <StyledEngineProvider injectFirst>\n              <BrowserRouter basename={PUBLIC_URL}>\n                <Analytics />\n                <Navigation />\n                <AppModule />\n              </BrowserRouter>\n            </StyledEngineProvider>\n          </CssBaseline>\n        </ProvideAppTheme>\n      </HelmetProvider>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { hydrate, render } from 'react-dom';\n\nimport App from './App';\nimport React from 'react';\nimport reportWebVitals from './reportWebVitals';\n\nconst StrictApp = () => (\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nconst rootElement = document.getElementById('root');\n\nif (rootElement?.hasChildNodes()) {\n  hydrate(<StrictApp />, rootElement);\n} else {\n  render(<StrictApp />, rootElement);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { useMediaQuery, useTheme } from \"@material-ui/core\";\r\n\r\nconst useBreakpoints = (filter: 'up' | 'down' | 'only' = 'down') => {\r\n    const theme = useTheme();\r\n    const sm = useMediaQuery(theme.breakpoints[filter]('sm'));\r\n    const md = useMediaQuery(theme.breakpoints[filter]('md'));\r\n    const lg = useMediaQuery(theme.breakpoints[filter]('lg'));\r\n    const scaleFactor = sm ? 3 : md ? 2 : 1;\r\n    return {\r\n        sm: sm,\r\n        md: md,\r\n        lg: lg,\r\n        scaleFactor: scaleFactor,\r\n    };\r\n};\r\n\r\nexport default useBreakpoints;\r\n","import {\r\n  Box,\r\n  CircularProgress,\r\n  Divider,\r\n  Paper,\r\n  Skeleton,\r\n  Stack,\r\n  Theme,\r\n} from '@material-ui/core';\r\nimport React, { ReactNode } from 'react';\r\n\r\nimport StyledTypography from '../components/StyledTypography';\r\nimport useBreakpoints from '../hooks/useBreakpoints';\r\n\r\ninterface IPageProps {\r\n  header: ReactNode;\r\n  subHeader?: ReactNode;\r\n  children: ReactNode;\r\n}\r\n\r\nconst PageContentLayout = ({ header, subHeader, children }: IPageProps) => {\r\n  const { scaleFactor } = useBreakpoints();\r\n  return (\r\n    <>\r\n      <Paper variant=\"outlined\">\r\n        <Stack\r\n          sx={{ px: 6 / scaleFactor, py: 6 / scaleFactor }}\r\n          spacing={2 / scaleFactor}>\r\n          {typeof header === 'string' && (\r\n            <StyledTypography\r\n              fontVariant=\"title\"\r\n              aria-label=\"title\"\r\n              capitalized={true}\r\n              hoverEffect={true}>\r\n              {header}\r\n            </StyledTypography>\r\n          )}\r\n\r\n          {typeof header !== 'string' && <>{header}</>}\r\n          {subHeader && typeof subHeader === 'string' && (\r\n            <StyledTypography\r\n              fontVariant=\"subtitle\"\r\n              variant=\"overline\"\r\n              aria-label=\"subtitle\"\r\n              capitalized={true}>\r\n              {subHeader}\r\n            </StyledTypography>\r\n          )}\r\n\r\n          {subHeader && typeof subHeader !== 'string' && <>{subHeader}</>}\r\n        </Stack>\r\n        <Divider />\r\n        <Box sx={{ p: 6 / scaleFactor }}>{children}</Box>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PageContentLayout;\r\n\r\nconst PageContentLayoutPlaceholder = () => {\r\n  const { sm } = useBreakpoints();\r\n  return (\r\n    <>\r\n      <PageContentLayout\r\n        header={\r\n          <>\r\n            <Skeleton height={36} />\r\n          </>\r\n        }\r\n        subHeader={\r\n          <>\r\n            <Skeleton height={30} />\r\n          </>\r\n        }>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          height={sm ? '71vh' : '55vh'}>\r\n          <CircularProgress\r\n            sx={{\r\n              color: (theme: Theme) => theme.palette.text.disabled,\r\n            }}\r\n          />\r\n        </Box>\r\n      </PageContentLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { PageContentLayoutPlaceholder };\r\n"],"sourceRoot":""}