{"version":3,"sources":["components/StyledLink.tsx","components/StyledTypography.tsx","components/Markdown.tsx","components/Template/Analytics.tsx","hooks/useBreakpoints.ts","layout/PageContentLayout.tsx","components/Template/ScrollToTop.tsx","data/personalInfo.ts","layout/PageLayout.tsx","pages/About.tsx","components/StyledIconButton.tsx","data/contact.tsx","components/Contact/ContactIcons.tsx","pages/Contact.tsx","components/RandomQuote.tsx","components/StyledNavLink.tsx","pages/Home.tsx","components/StyledButton.tsx","data/resume/job.ts","components/Template/InfoBar.tsx","data/routes.ts","data/theme.ts","context/AppThemeContext.tsx","components/Template/Navigation.tsx","layout/Main.tsx","pages/NotFound.tsx","data/projects.ts","components/Project/Project.tsx","components/PageSectionLayout.tsx","components/Project/ProjectDetailsLayout.tsx","components/Project/WorkProjects.tsx","pages/Projects.tsx","data/resume/certification.ts","components/Resume/Certifications/Certificate.tsx","components/Resume/ResumeDetailsLayout.tsx","components/Resume/Certifications.tsx","data/resume/degree.ts","components/Resume/Education/Degree.tsx","components/Resume/Education.tsx","components/Resume/Experience/Job.tsx","components/Resume/Experience.tsx","components/Resume/References.tsx","data/resume/skills.ts","components/Resume/Skills/Category.tsx","components/Resume/Skills/SkillBadge.tsx","components/Resume/Skills.tsx","components/Resume/Summary.tsx","pages/Resume.tsx","components/Stats/StatsDetailsLayout.tsx","components/Stats/StatsTable.tsx","components/Stats/Age.tsx","utils/dateTimeUtil.ts","data/stats/stats.tsx","components/Stats/PersonalStats.tsx","components/Stats/SiteStats.tsx","pages/Stats.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledLink","to","label","capitalized","bold","bottomBorder","typographyProps","children","rest","theme","useTheme","transformedLabel","toUpperCase","typographyStyle","style","typographySx","sx","restOfTypographyProps","overriddenStyle","transition","borderBottom","undefined","fontWeight","cursor","Link","href","color","textDecoration","React","Children","map","child","cloneElement","props","palette","primary","main","Typography","component","LETTER_SPACING","fontVariantStyles","normal","title","fontSize","fontFamily","letterSpacing","titleLight","subtitle","StyledTypography","spaced","fontVariant","hoverEffect","styleProps","sxProps","fontVariantStyle","capitalizedChildren","toString","options","overrides","h1","gutterBottom","pb","toArray","join","id","h2","variant","h3","h4","h5","h6","p","paragraph","a","target","ul","Box","marginBottom","li","mt","Markdown","ga4react","useBreakpoints","filter","sm","useMediaQuery","breakpoints","md","lg","scaleFactor","PageContentLayout","header","subHeader","Paper","Stack","px","py","spacing","Divider","PageContentLayoutPlaceholder","Skeleton","height","display","flexDirection","justifyContent","alignItems","CircularProgress","text","disabled","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","personalInfo","firstName","lastName","fullName","email","siteUrl","githubUrl","facebookUrl","instagramUrl","linkedInUrl","twitterUrl","PageLayout","description","enableTitleTemplate","titleTemplate","defer","name","content","markdown","count","split","s","replace","length","About","process","NODE_ENV","REACT_APP_GA_TRACKING_ID","GA4React","Analytics","scopedPath","isInitialized","initialize","pageview","StyledIconButton","styled","IconButton","borderColor","contacts","link","icon","ContactIcon","ContactIcons","contact","Contact","pageName","RandomQuote","useState","quote","setQuote","isLoadingQuote","setIsLoadingQuote","hasApiError","setHasApiError","fetchQuote","useCallback","fetch","then","response","json","randomQuote","catch","finally","elevation","secondary","textAlign","size","author","StyledNavLink","activeStyle","disableActiveStyle","Home","StyledButton","Button","padding","border","borderRadius","backgroundColor","action","focus","jobs","company","position","dateRange","abstract","points","current","currentEmployer","find","job","previousEmployers","ExternalLink","MoreLink","exact","InfoBar","resumePageRoute","useRouteMatch","Avatar","src","width","index","isExact","direction","routes","path","lightTheme","background","default","mode","components","MuiCssBaseline","styleOverrides","MuiAppBar","root","themes","light","dark","paper","COOKIES_THEME_MODE","getDefaultMode","presetCookiesThemeMode","cookie","get","hours","Date","getHours","getTheme","createTheme","defaultContext","toggleMode","AppThemeContext","createContext","displayName","ProvideAppTheme","themeContext","prefersDarkMode","setMode","setTheme","previousMode","newMode","set","expires","provideAppTheme","Provider","value","ThemeProvider","indexLinks","nonIndexLinks","ThemeToggler","onClick","useContext","onToggleClick","DesktopNavigation","indexLink","nonIndexLink","orientation","MobileMenu","anchorElement","setAnchorElement","isMenuOpen","Boolean","onNavigationClick","event","currentTarget","Menu","anchorEl","open","onClose","MenuListProps","MenuItem","MobileNavigation","flexGrow","Navigation","mdUp","AppBar","Toolbar","Main","my","Container","Grid","container","Hidden","mdDown","item","xs","top","mb","NotFound","projects","grade","technologies","Project","PageSectionLayout","ProjectDetailsLayout","WorkProjects","project","sections","Projects","section","typography","certifications","issuer","issuedOn","verificationLink","Certificate","ResumeDetailsLayout","restProps","Experience","certificate","degrees","school","degree","fromYear","toYear","Degree","Education","Job","paddingInlineStart","point","References","skills","competency","categories","skill","sort","colors","Set","reduce","acc","concat","category","Math","floor","random","StyledButtonX","Category","handleClick","isActive","m","CompetencyIndicator","left","bottom","right","SkillBadge","data","skillCategories","skillColor","cat","includes","grey","Skills","obj","key","All","selectedSkill","state","setState","handleChildClick","prevState","buttons","Object","keys","some","flexWrap","ImageList","cols","actCat","b","ret","ImageListItem","getSkillBadges","Summary","details","Certifications","ResumeNavigation","mr","elementId","timeoutRef","setTimeout","document","getElementById","toLowerCase","scrollIntoView","behavior","block","clearTimeout","Resume","StatsDetailsLayout","StatsRow","format","TableRow","TableCell","StatsTable","stats","TableContainer","Table","TableBody","stat","Age","birthDate","age","setAge","timer","setInterval","birthTime","getTime","now","toFixed","tick","clearInterval","BROWSER_TIMEZONE","Intl","DateTimeFormat","resolvedOptions","timeZone","personalStats","siteStats","x","date","utcToZonedTime","PersonalStats","SiteStats","initialData","setSiteStats","fetchData","cache","res","resData","field","Stats","AppModule","location","TransitionGroup","CSSTransition","timeout","classNames","App","CssBaseline","StyledEngineProvider","injectFirst","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictApp","StrictMode","rootElement","hasChildNodes","hydrate","render"],"mappings":"uYAuFeA,EApEI,SAAC,GASS,IAR3BC,EAQ0B,EAR1BA,GACAC,EAO0B,EAP1BA,MACAC,EAM0B,EAN1BA,YACAC,EAK0B,EAL1BA,KAK0B,IAJ1BC,oBAI0B,SAH1BC,EAG0B,EAH1BA,gBACAC,EAE0B,EAF1BA,SACGC,EACuB,iBACpBC,EAAQC,cACRC,EAAmBR,EAAW,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAOU,cAAgBV,EAC9D,iBAKKI,GAJIO,EADT,EACEC,MACIC,EAFN,EAEEC,GACGC,EAHL,iBAOMC,EAAuC,CAC3CC,WAAY,iDACZC,aAAcf,EACV,4CACAgB,EACJC,WAAYlB,EAAO,YAASiB,EAC5BE,OAAQ,WAEV,OACE,eAACC,EAAA,EAAD,2BACMhB,GADN,IAEEiB,KAAMxB,EACNa,MAAO,CACLY,MAAO,UACPC,eAAgB,QALpB,UAOGpB,GACCqB,IAAMC,SAASC,IAAIvB,GAAU,SAACwB,GAAD,OAC3BH,IAAMI,aAAaD,EAAO,CACxBjB,MAAM,uCACDiB,EAAME,MAAMnB,OACZI,GAFA,IAGH,UAAW,CACTQ,MAAOjB,EAAMyB,QAAQC,QAAQC,cAKrC7B,GACA,cAAC8B,EAAA,EAAD,2BACMpB,GADN,IAEEH,MAAK,2BACAD,GACAK,GAELF,GAAE,2BACGD,GADH,IAEA,UAAW,CACTW,MAAOjB,EAAMyB,QAAQC,QAAQC,QAGjCE,UAAU,OAZZ,SAaG3B,U,sFC3EL4B,EAAiB,SAIjBC,EAAkD,CACtDC,OAAQ,GACRC,MAAO,CACLpB,WAAY,IACZqB,SAAU,QACVC,WAAY,mCACZC,cAAeN,GAEjBO,WAAY,CACVxB,WAAY,IACZqB,SAAU,QACVC,WAAY,mCACZC,cAAeN,GAEjBQ,SAAU,CACRzB,WAAY,IACZqB,SAAU,QACVC,WAAY,mCACZC,cAAeN,IAqDJS,EAzCU,SAAC,GAUuB,IAAD,MAT9C5C,YAS8C,aAR9CD,mBAQ8C,aAP9C8C,cAO8C,aAN9CC,mBAM8C,MANhC,SAMgC,MAL9CC,mBAK8C,SAJ9C5C,EAI8C,EAJ9CA,SACO6C,EAGuC,EAH9CtC,MACIuC,EAE0C,EAF9CrC,GACGR,EAC2C,iBACxCC,EAAQC,cACR4C,EAAmBd,EAAkBU,GACrChC,EAAuC,CAC3CC,WAAYgC,EACR,sDACA9B,EACJE,OAAQ4B,EAAc,eAAY9B,EAClCC,WAAYlB,EAAO,YAASiB,EAC5BwB,cAAeI,EAASV,OAAiBlB,GAErCkC,EACJpD,GAAmC,kBAAbI,EAAtB,OACIA,QADJ,IACIA,GADJ,UACIA,EAAUiD,kBADd,aACI,EAAsB5C,cACtBL,EACN,OACE,cAAC8B,EAAA,EAAD,2BACM7B,GADN,IAEEQ,GAAE,uCACGqC,GACAC,GAFH,IAGA,UAAW,CACT5B,MAAOyB,EAAc1C,EAAMyB,QAAQC,QAAQC,UAAOf,KAGtDP,MAAK,2BAAOsC,GAAelC,GAT7B,SAUGqC,MCKP,IAAME,EAAU,CACdC,UAAW,CACTC,GAAI,CACFrB,UAtDN,SAAkBL,GAAa,IAAD,EAC5B,OACE,mCACE,cAAC,EAAD,CAEEiB,YAAY,aACZ9C,MAAM,EACND,aAAa,EACbyD,cAAc,EACd5C,GAAI,CACF6C,GAAI,GAPR,mBASGjC,IAAMC,SAASiC,QAAQ7B,EAAM1B,iBAThC,aASG,EAAwCwD,KAAK,OARzC9B,EAAM+B,QAoDfC,GAAI,CACF3B,UAvCN,SAAkBL,GAChB,OAAO,cAACI,EAAA,EAAD,CAAY6B,QAAQ,KAApB,SAA0BjC,EAAM1B,aAwCrC4D,GAAI,CACF7B,UAtCN,SAAkBL,GAChB,OAAO,cAACI,EAAA,EAAD,CAAY6B,QAAQ,KAApB,SAA0BjC,EAAM1B,aAuCrC6D,GAAI,CACF9B,UArCN,SAAkBL,GAChB,OAAO,cAACI,EAAA,EAAD,CAAY6B,QAAQ,KAApB,SAA0BjC,EAAM1B,aAsCrC8D,GAAI,CACF/B,UApCN,SAAkBL,GAChB,OAAO,cAACI,EAAA,EAAD,CAAY6B,QAAQ,KAApB,SAA0BjC,EAAM1B,aAqCrC+D,GAAI,CACFhC,UAnCN,SAAkBL,GAChB,OAAO,cAACI,EAAA,EAAD,CAAY6B,QAAQ,KAApB,SAA0BjC,EAAM1B,aAoCrCgE,EAAG,CACDjC,UAlCN,SAAiBL,GACf,OACE,cAACI,EAAA,EAAD,CACEmC,WAAW,EACXZ,cAAc,EACd5C,GAAI,CACF6C,GAAI,GAJR,SAMG5B,EAAM1B,aA4BTkE,EAAG,CAAEnC,UApFT,SAAsBL,GAAmB,IAAD,MACtC,OACE,cAAC,EAAD,CACEhC,GAAE,UAAEgC,EAAMR,YAAR,QAAgB,IAClBvB,MAAK,UAAE+B,EAAMS,aAAR,kBAAiBd,IAAMC,SAASiC,QAAQ7B,EAAM1B,iBAA9C,aAAiB,EAAwCwD,KAAK,MACnEW,OAAO,aAgFTC,GAAI,CAAErC,UAjGV,SAA+BL,GAC7B,OAAO,cAAC2C,EAAA,EAAD,aAAKtC,UAAU,KAAKtB,GAAI,CAAE6D,aAAc,IAAS5C,MAiGtD6C,GAAI,CACFxC,UA/FN,SAA0BL,GACxB,OACE,cAAC2C,EAAA,EAAD,CAAKtC,UAAU,KAAKtB,GAAI,CAAE+D,GAAI,GAA9B,SACE,cAAC1C,EAAA,EAAD,aAAY6B,QAAQ,SAAYjC,UAiGvB,SAAS+C,EAAS/C,GAC/B,OAAO,cAAC,IAAD,aAAewB,QAASA,GAAaxB,I,ICzG1CgD,E,sDCSWC,EAdQ,WAA8C,IAA7CC,EAA4C,uDAAX,OAC/C1E,EAAQC,cACR0E,EAAKC,YAAc5E,EAAM6E,YAAYH,GAAQ,OAC7CI,EAAKF,YAAc5E,EAAM6E,YAAYH,GAAQ,OAC7CK,EAAKH,YAAc5E,EAAM6E,YAAYH,GAAQ,OAC7CM,EAAcL,EAAK,EAAIG,EAAK,EAAI,EACtC,MAAO,CACHH,GAAIA,EACJG,GAAIA,EACJC,GAAIA,EACJC,YAAaA,ICQfC,EAAoB,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,UAAWrF,EAA2B,EAA3BA,SACtCkF,EAAgBP,IAAhBO,YACR,OACE,mCACE,eAACI,EAAA,EAAD,CAAO3B,QAAQ,WAAf,UACE,eAAC4B,EAAA,EAAD,CACE9E,GAAI,CAAE+E,GAAI,EAAIN,EAAaO,GAAI,EAAIP,GACnCQ,QAAS,EAAIR,EAFf,UAGqB,kBAAXE,GACN,cAAC,EAAD,CACEzC,YAAY,QACZ,aAAW,QACX/C,aAAa,EACbgD,aAAa,EAJf,SAKGwC,IAIc,kBAAXA,GAAuB,mCAAGA,IACjCC,GAAkC,kBAAdA,GACnB,cAAC,EAAD,CACE1C,YAAY,WACZgB,QAAQ,WACR,aAAW,WACX/D,aAAa,EAJf,SAKGyF,IAIJA,GAAkC,kBAAdA,GAA0B,mCAAGA,OAEpD,cAACM,EAAA,EAAD,IACA,cAACtB,EAAA,EAAD,CAAK5D,GAAI,CAAEuD,EAAG,EAAIkB,GAAlB,SAAkClF,UAM3BmF,IAETS,EAA+B,WACnC,IAAQf,EAAOF,IAAPE,GACR,OACE,mCACE,cAAC,EAAD,CACEO,OACE,mCACE,cAACS,EAAA,EAAD,CAAUC,OAAQ,OAGtBT,UACE,mCACE,cAACQ,EAAA,EAAD,CAAUC,OAAQ,OARxB,SAWE,cAACzB,EAAA,EAAD,CACE0B,QAAQ,OACRC,cAAc,SACdC,eAAe,SACfC,WAAW,SACXJ,OAAQjB,EAAK,OAAS,OALxB,SAME,cAACsB,EAAA,EAAD,CACE1F,GAAI,CACFU,MAAO,SAACjB,GAAD,OAAkBA,EAAMyB,QAAQyE,KAAKC,oB,SCrE3CC,EAVK,WAClB,IAAQC,EAAaC,cAAbD,SAMR,OAJAE,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,CAACJ,IAEG,MCeMK,EAbqB,CAChCC,UAAW,SACXC,SAAU,WACVC,SAAU,kBACVC,MAAO,mCACPC,QAAS,qBACTC,UAAW,oCACXC,YAAa,oCACbC,aAAc,4CACdC,YAAa,8CACbC,WAAY,uCCUDC,EApBI,SAAC,GAAD,IACjBpF,EADiB,EACjBA,MACAqF,EAFiB,EAEjBA,YAFiB,IAGjBC,2BAHiB,SAIjBzH,EAJiB,EAIjBA,SAJiB,OAMjB,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,CACE0H,cACED,EAAmB,eAAWb,EAAaG,UAAa5E,EAE1DwF,OAAO,EAJT,UAKE,gCAAQxF,IACR,sBAAMyF,KAAK,cAAcC,QAASL,OAEnCxH,MCrBC8H,EAAQ,kvFAERC,EAAQD,EACXE,MAAM,OACNzG,KAAI,SAAC0G,GAAD,OAAOA,EAAEC,QAAQ,MAAO,OAC5BtD,QAAO,SAACqD,GAAD,OAAOA,EAAEE,UAAQA,OAqBZC,EAjBD,SAAC,GACb,OADkC,eAEhC,mCACE,cAAC,EAAD,CAAYjG,MAAM,QAAQqF,YAAY,QAAtC,SACE,eAAC,EAAD,CACEpC,OAAO,QACPC,UAAS,oBAAe0C,EAAf,WAFX,UAGE,cAACtD,EAAD,UAAWqD,IACX,cAAChG,EAAA,EAAD,CAAYX,MAAM,gBAAgBwC,QAAQ,QAA1C,iC,kCNpBV,EAA+C0E,2KAAvCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,yBAGD,eAAbD,GAA6BC,IAC/B7D,EAAW,IAAI8D,IAASD,IAG1B,IAiBeE,EAjBG,WAChB,IAAQlC,EAAaC,cAAbD,SAaR,OAZAE,qBAAU,WACJ/B,GACF,uCAAC,WAAOgE,GAAP,SAAAxE,EAAA,yDACyBsE,IAASG,gBADlC,gCAGSjE,EAASkE,aAHlB,OAKClE,EAASmE,SAASH,GALnB,2CAAD,sDAMGnC,KAEJ,CAACA,IAEG,8B,kBObMuC,GATUC,aAAOC,KAAPD,EAAoC,YAAgB,IAAb7I,EAAY,EAAZA,MAC9D,MAAO,CACL,UAAW,CACTiB,MAAOjB,EAAMyB,QAAQC,QAAQC,KAC7BoH,YAAa/I,EAAMyB,QAAQC,QAAQC,U,8HCyC1BqH,GAlCc,CAC3B,CACEC,KAAMvC,EAAaS,YACnB1H,MAAO,WACPyJ,KAAM,cAAC,KAAD,KAER,CACED,KAAMvC,EAAaM,UACnBvH,MAAO,SACPyJ,KAAM,cAAC,KAAD,KAER,CACED,KAAMvC,EAAaU,WACnB3H,MAAO,UACPyJ,KAAM,cAAC,KAAD,KAGR,CACED,KAAMvC,EAAaQ,aACnBzH,MAAO,YACPyJ,KAAM,cAAC,KAAD,KAER,CACED,KAAMvC,EAAaO,YACnBxH,MAAO,WACPyJ,KAAM,cAAC,KAAD,KAER,CACED,KAAK,UAAD,OAAYvC,EAAaI,OAC7BrH,MAAO,QACPyJ,KAAM,cAAC,KAAD,MCvCJC,GAAc,SAAC,GAA2C,IAAzCrJ,EAAwC,EAAxCA,SACrB,OACE,mCACE,cAAC,GAAD,UAAmBA,OAiBVsJ,GAZM,WACnB,OACE,mCACGJ,GAAS3H,KAAI,SAACgI,GAAD,OACZ,cAACtI,EAAA,EAAD,CAA0BC,KAAMqI,EAAQJ,KAAMhF,OAAO,SAArD,SACE,cAAC,GAAD,UAAcoF,EAAQH,QADbG,EAAQ5J,aCKZ6J,GAfC,SAAC,GAAuB,eACtC,IAAMC,EAAW,UACjB,OACE,mCACE,cAAC,EAAD,CAAYtH,MAAOsH,EAAUjC,YAAaiC,EAA1C,SACE,cAAC,EAAD,CACErE,OAAQqE,EACRpE,UAAU,uCAFZ,SAGE,cAAC,GAAD,W,mBC0DKqE,GA9DK,SAAC,GAA2B,eAC9C,MAA0BC,qBAA1B,oBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4CF,oBAAkB,GAA9D,oBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAsCJ,oBAAkB,GAAxD,oBAAOK,EAAP,KAAoBC,EAApB,KAEMC,EAAaC,sBAAW,sBAAC,sBAAAjG,EAAA,sEACvBkG,MAAM,kCACTC,KADG,uCACE,WAAOC,GAAP,eAAApG,EAAA,sEAC8BoG,EAASC,OADvC,OACEC,EADF,OAEJX,EAAS,eAAKW,IAFV,2CADF,uDAKHC,OAAM,WACLR,GAAe,MAEhBS,SAAQ,WACPX,GAAkB,MAVO,2CAY5B,IAMH,OAJAtD,qBAAU,WACRyD,MACC,CAACA,IAEGF,EACL,6BAEA,mCACE,eAAC1E,EAAA,EAAD,CACEqF,UAAW,EACXlK,GAAI,CACFuD,EAAG,EACH7C,MAAO,SAACjB,GAAD,OAAkBA,EAAMyB,QAAQyE,KAAKwE,YAJhD,UAMGd,GACC,cAAChI,EAAA,EAAD,CAAY+I,UAAU,SAAtB,SACE,cAAC1E,EAAA,EAAD,CACE2E,KAAM,GACNrK,GAAI,CACFU,MAAO,SAACjB,GAAD,OAAkBA,EAAMyB,QAAQyE,KAAKwE,iBAKlDd,GAAkBF,GAClB,qCACE,cAAC9H,EAAA,EAAD,CAAY+I,UAAU,SAASlH,QAAQ,YAAvC,SACE,8BACG,UACAiG,EAAM/B,QACN,eAGL,eAAC/F,EAAA,EAAD,CAAY+I,UAAU,SAASlH,QAAQ,YAAvC,eACKiG,EAAMmB,mB,wIC8BRC,GAhFO,SAAC,GAWM,IAAD,EAV1BtL,EAU0B,EAV1BA,GACAC,EAS0B,EAT1BA,MACAC,EAQ0B,EAR1BA,YACAC,EAO0B,EAP1BA,KAO0B,IAN1BC,oBAM0B,SAL1BC,EAK0B,EAL1BA,gBACAC,EAI0B,EAJ1BA,SACAiL,EAG0B,EAH1BA,YAG0B,IAF1BC,0BAE0B,SADvBjL,EACuB,kBACpBC,EAAQC,cAERC,EAAmBR,EAAW,OAChCD,QADgC,IAChCA,GADgC,UAChCA,EAAOsD,kBADyB,aAChC,EAAmB5C,cACnBV,EACJ,iBAKKI,GAJIO,EADT,EACEC,MACIC,EAFN,EAEEC,GACGC,EAHL,kBAOMC,EAAuC,CAC3CC,WAAY,iDACZC,aAAcf,EACV,4CACAgB,EACJC,WAAYlB,EAAO,YAASiB,GAE9B,OACE,eAAC,IAAD,2BACMb,GADN,IAEEP,GAAIA,EACJa,MAAO,CACLY,MAAO,UACPC,eAAgB,QAElB6J,YACEC,EACI,GADc,aAGZ9J,eAAgB,YAChBD,MAAOjB,EAAMyB,QAAQC,QAAQC,MAC1BoJ,GAbb,UAgBGjL,GACCqB,IAAMC,SAASC,IAAIvB,GAAU,SAACwB,GAAD,OAC3BH,IAAMI,aAAaD,EAAO,CACxBjB,MAAM,2BACDiB,EAAME,MAAMnB,OADZ,IAEH,UAAW,CACTY,MAAOjB,EAAMyB,QAAQC,QAAQC,cAKrC7B,GACA,cAAC8B,EAAA,EAAD,2BACMpB,GADN,IAEEqB,UAAU,OACVxB,MAAK,2BACAD,GACAK,GAELF,GAAE,2BACGD,GADH,IAEA,UAAW,CACTW,MAAOjB,EAAMyB,QAAQC,QAAQC,QAVnC,SAaGzB,UC5CI+K,GAlCF,SAAC,GACZ,OADgC,eAE9B,mCACE,cAAC,EAAD,CACEhJ,MAAOyE,EAAaG,SACpBU,qBAAqB,EACrBD,YAAY,mIAHd,SAIE,eAAC,EAAD,CACEpC,OAAO,kBACPC,UAAU,mIAFZ,UAGE,cAACvD,EAAA,EAAD,CAAY6B,QAAQ,QAAQM,WAAS,EAArC,oCAGA,eAACnC,EAAA,EAAD,CAAY6B,QAAQ,QAAQM,WAAS,EAArC,6EACyD,IACvD,cAAC,GAAD,CAAevE,GAAG,SAASC,MAAM,wBAFnC,IAE6D,IAC3D,cAAC,GAAD,CAAeD,GAAG,UAAUC,MAAM,sCAHpC,IAGkE,IAChE,cAAC,GAAD,CAAeD,GAAG,YAAYC,MAAM,kDAJtC,SAIsE,IACpE,cAAC,GAAD,CAAeD,GAAG,SAASC,MAAM,iCALnC,kHAOyC,IACvC,cAAC,GAAD,CACED,GAAG,WACHC,MAAM,6CAVV,OAcA,cAAC,GAAD,Y,kDClBKyL,GAfMrC,aAAOsC,KAAPtC,EAA4B,YAAgB,IAAb7I,EAAY,EAAZA,MAClD,MAAO,CACLoL,QAAQ,GAAD,OAAKpL,EAAMwF,QAAQ,GAAnB,YAAyBxF,EAAMwF,QAAQ,IAC9C6F,OAAQ,YACRC,aAAc,EACdrK,MAAOjB,EAAMyB,QAAQyE,KAAKxE,QAC1B6J,gBAAiB,cACjBxC,YAAa/I,EAAMyB,QAAQ+J,OAAOC,MAClC,UAAW,CACTxK,MAAOjB,EAAMyB,QAAQC,QAAQC,KAC7BoH,YAAa/I,EAAMyB,QAAQC,QAAQC,UCsD1B+J,GA1DM,CACjB,CACIC,QAAS,SACTC,SAAU,4DACV3C,KAAM,qBACN4C,UAAW,uBACXC,SAAU,qDACVC,OAAQ,CACJ,iFACA,oHACA,mHACA,kMACA,2HACA,+GACA,8IACA,6HACA,gLACA,kIACA,4GACA,6KACA,2JACA,6CACA,2DAEJC,SAAS,GAEb,CACIL,QAAS,aACTC,SAAU,wBACV3C,KAAM,8BACN4C,UAAW,qCACXC,SAAU,6DACVC,OAAQ,CACJ,sFACA,+JACA,oFACA,6DACA,yEACA,iFAGR,CACIJ,QAAS,UACTC,SAAU,wBACV3C,KAAM,0BACN4C,UAAW,+BACXC,SAAU,kEACVC,OAAQ,CACJ,oDACA,kEACA,sDACA,kEACA,kEACA,2DCjDJpF,GAAwCD,EAAxCC,UAAWE,GAA6BH,EAA7BG,SAAUC,GAAmBJ,EAAnBI,MAAOC,GAAYL,EAAZK,QAC9BkF,GAAkBP,GAAKQ,MAAK,SAACC,GAAD,OAASA,EAAIH,YAAYN,GAAK,GAC1DU,GAAoBV,GAAKhH,QAC7B,SAACyH,GAAD,OAASA,EAAIR,SAAWM,GAAgBN,WAGpCU,GAAe,SAAC7K,GACpB,OACE,cAAC,EAAD,2BACMA,GADN,IAEEyC,OAAO,SACPpE,gBAAiB,CACf4D,QAAS,iBAMX6I,GAAW,SAAC,GAAkD,IAAhD9M,EAA+C,EAA/CA,GAAIC,EAA2C,EAA3CA,MACtB,OACE,mCACE,cAAC,GAAD,CAAe8M,OAAK,EAAC/M,GAAIA,EAAIC,MAAM,aAAnC,SACE,cAAC,GAAD,CAAcgE,QAAQ,OAAtB,SACE,cAAC,EAAD,CACEhB,YAAY,aACZ/C,aAAa,EACbC,MAAM,EAHR,SAIGF,WAoGE+M,GA5FC,WACd,IAAMC,EAAkBC,YAAc,WAC9B1H,EAAgBP,IAAhBO,YACAF,EAAOL,IAAPK,GAER,OACE,mCACE,eAACO,EAAA,EAAD,CAAOG,QAAS,EAAIR,EAApB,UACE,eAACK,EAAA,EAAD,CAAOG,QAAS,EAAIR,EAAagB,WAAYlB,EAAK,cAAWlE,EAA7D,UACE,cAAC+L,GAAA,EAAD,CACEC,IAAG,UA9CQzE,GA8CR,kBACH5H,GAAI,CACFsM,MAAO,IACPjH,OAAQ,KAJZ,iBAQA,cAAC,EAAD,CAAkBnD,YAAY,QAAQ/C,aAAa,EAAnD,SACGmH,KAEH,cAAC,EAAD,CACErH,GAAE,iBAAYsH,IACdnH,MAAM,EACND,aAAa,EACbD,MAAK,UAAKqH,GAAL,iBACLjH,gBAAiB,CACf4D,QAAS,WACTxC,MAAO,gBACPmB,cAAe,eAIrB,cAACqD,EAAA,EAAD,IACA,eAACJ,EAAA,EAAD,CAAOG,QAAS,EAAIR,EAApB,UACE,cAAC,EAAD,CACEvB,QAAQ,SACRhB,YAAY,aACZ9C,MAAM,EACND,aAAa,EAJf,mBAOA,eAACkC,EAAA,EAAD,CAAY6B,QAAQ,YAAYM,WAAS,EAAzC,iCACkB4C,GADlB,mCAC6D,IAC3D,cAAC,GAAD,CACEnH,GAAG,2BACHC,MAAM,sBACL,IALL,wCAMwCwM,GAAgBL,SANxD,MAMqE,IACnE,cAAC,GAAD,CACEpM,GAAIyM,GAAgBhD,KACpBxJ,MAAOwM,GAAgBN,UAT3B,YAWYM,GAAgBN,QAX5B,YAW8C,IAC3CS,GAAkB/K,KAAI,SAAC8K,EAAKW,GAAN,OACrB,eAAC,WAAD,WACE,cAAC,GAAD,CAActN,GAAI2M,EAAIlD,KAAMxJ,MAAO0M,EAAIR,UAAY,IAClDmB,EAAQV,GAAkBnE,OAAS,GAAK,SAF5BkE,EAAIR,YAbvB,OAoBA,cAAC,GAAD,CACEnM,IAAmB,OAAfiN,QAAe,IAAfA,OAAA,EAAAA,EAAiBM,SAAU,SAAW,UAC1CtN,OAAsB,OAAfgN,QAAe,IAAfA,OAAA,EAAAA,EAAiBM,SAAU,WAAa,kBAGnD,cAACtH,EAAA,EAAD,IACA,cAACJ,EAAA,EAAD,CAAO2H,UAAU,MAAjB,SACE,cAAC,GAAD,MAEF,eAACpL,EAAA,EAAD,CACEiE,QAAQ,SACRpC,QAAQ,WACRlD,GAAI,CACFU,MAAO,iBAJX,kBAMU4F,GAAU,IAClB,cAAC,GAAD,CACErH,GAAG,IACHC,MAAOsH,GACPlH,gBAAiB,CACf4D,QAAS,YAEXuH,oBAAoB,IAbxB,a,uGCzFOiC,GA5BA,CACX,CACIH,OAAO,EACPrN,MAAOiH,EAAaG,SACpBqG,KAAM,KAEV,CACIzN,MAAO,QACPyN,KAAM,UAEV,CACIzN,MAAO,SACPyN,KAAM,WAEV,CACIzN,MAAO,WACPyN,KAAM,aAEV,CACIzN,MAAO,QACPyN,KAAM,UAEV,CACIzN,MAAO,UACPyN,KAAM,a,oBCxBRC,GAA2B,CAC/B1L,QAAS,CACPC,QAAS,CACPC,KAAM,WAERyL,WAAY,CACVC,QAAS,WAEXC,KAAM,SAERC,WAAY,CACVC,eAAgB,CACdC,eAAe,svBA4BjBC,UAAW,CACTD,eAAgB,CACdE,KAAM,CACJpC,gBAAiB,UACjBtK,MAAO,e,qBCjCX2M,GAAsD,CAC1DC,MAAOV,GACPW,KDsC8B,CAE9BrM,QAAS,CACPC,QAAS,CACPC,KAAM,WAERyL,WAAY,CACVC,QAAS,UACTU,MAAO,WAETT,KAAM,QAERC,WAAY,CACVC,eAAgB,CACdC,eAAe,svBA4BjBC,UAAW,CACTD,eAAgB,CACdE,KAAM,CACJpC,gBAAiB,UACjBtK,MAAO,gBCjFX+M,GAAqB,gBAErBC,GAAiB,WACrB,IAAMC,EAAyBC,KAAOC,IAAIJ,IAE1C,GAAIE,EACF,MAAkC,SAA3BA,EAAoC,OAAS,QAEtD,IAAMG,GAAQ,IAAIC,MAAOC,WAEzB,OAAOF,GAAS,IAAMA,GAAS,EAAI,OAAS,SAGxCG,GAAW,SAAClB,GAChB,OAAOmB,aAAYb,GAAON,KAQtBoB,GAAiB,CACrB1O,MAAOwO,GAASP,MAChBU,WAAY,cAGDC,GAAkBC,wBAAgCH,IAC/DE,GAAgBE,YAAc,kBAqC9B,IASeC,GATS,SAAC,GAAyC,IAAvCjP,EAAsC,EAAtCA,SACnBkP,EAhCR,WACE,IAAMC,EAAkBrK,YAAc,gCACtC,EAAwB6E,mBAAsBwE,MAA9C,oBAAOX,EAAP,KAAa4B,EAAb,KACA,EAA0BzF,mBAAgB+E,GAASlB,IAAnD,oBAAOtN,EAAP,KAAcmP,EAAd,KAqBA,OATA5I,qBAAU,WACR4I,EAASX,GAASlB,MACjB,CAACA,IAEJ/G,qBAAU,WACJ0I,IAAoBd,KAAOC,IAAIJ,KACjCkB,EAAQ,UAET,CAACD,IACG,CAAEjP,MAAOA,EAAO2O,WAnBJ,WACjBO,GAAQ,SAACE,GACP,IAAMC,EAA2B,SAAjBD,EAA0B,QAAU,OAIpD,OAHAjB,KAAOmB,IAAItB,GAAoBqB,EAAS,CACtCE,QAAS,IAEJF,OAqBUG,GACrB,OACE,cAACZ,GAAgBa,SAAjB,CAA0BC,MAAOV,EAAjC,SACE,cAACW,GAAA,EAAD,CAAe3P,MAAOgP,EAAahP,MAAnC,SAA2CF,OC7D3C8P,GAAa3C,GAAOvI,QAAO,SAACuE,GAAD,OAAUA,EAAK6D,SAC1C+C,GAAgB5C,GAAOvI,QAAO,SAACuE,GAAD,OAAWA,EAAK6D,SAE9CgD,GAAe,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,QACtB,EDmBOC,qBAAWpB,ICnBV5O,EAAR,EAAQA,MAAO2O,EAAf,EAAeA,WACTsB,EAAa,uCAAG,sBAAAjM,EAAA,sDACpB2K,IACIoB,GACFA,IAHkB,2CAAH,qDAMnB,OACE,eAAC,GAAD,CAAkBA,QAASE,EAA3B,UAC0B,SAAvBjQ,EAAMyB,QAAQ6L,MAAmB,cAAC,KAAD,IACV,UAAvBtN,EAAMyB,QAAQ6L,MAAoB,cAAC,KAAD,QAKnC4C,GAAoB,WACxB,OACE,eAAC7K,EAAA,EAAD,CAAO2H,UAAU,MAAMxH,QAAS,EAAGQ,WAAW,SAA9C,UACG4J,GAAWvO,KAAI,SAAC8O,GAAD,OACd,cAAC,GAAD,CAEE3Q,GAAI2Q,EAAUjD,KACdzN,MAAO0Q,EAAU1Q,MACjBuL,oBAAoB,EAJtB,SAKE,cAAC,EAAD,CACEvH,QAAQ,SACRoC,QAAQ,SACRlG,MAAM,EACND,aAAa,EACb8C,QAAQ,EACRE,aAAa,EANf,SAOGyN,EAAU1Q,SAXR0Q,EAAU1Q,UAelBoQ,GAAcxO,KAAI,SAAC+O,GAAD,OACjB,eAAC,WAAD,WACE,cAAC3K,EAAA,EAAD,CAAS4K,YAAY,aACrB,cAAC,GAAD,CACE9D,OAAK,EACL/M,GAAI4Q,EAAalD,KACjBzN,MAAO2Q,EAAa3Q,MAHtB,SAIE,cAAC,EAAD,CACEgE,QAAQ,WACRoC,QAAQ,SACRnG,aAAa,EACb8C,QAAQ,EACRE,aAAa,EALf,SAMG0N,EAAa3Q,YAZL2Q,EAAa3Q,UAiB9B,cAAC,GAAD,QAKA6Q,GAAa,WACjB,MAA0CnP,IAAMsI,SAC9C,MADF,oBAAO8G,EAAP,KAAsBC,EAAtB,KAGMC,EAAaC,QAAQH,GAMrBI,EAAoB,WACxBH,EAAiB,OAGnB,OACE,qCACE,cAAC1H,GAAA,EAAD,CAAYiH,QAVM,SAACa,GACrBJ,EAAiBI,EAAMC,gBASrB,SACE,cAAC,KAAD,MAEF,eAACC,GAAA,EAAD,CACEvN,GAAG,aACHwN,SAAUR,EACVS,KAAMP,EACNQ,QAASN,EACTO,cAAe,CACb,kBAAmB,gBANvB,UAQGtB,GAAWvO,KAAI,SAAC8O,GAAD,OACd,cAAC,GAAD,CACE5D,OAAK,EACL/M,GAAI2Q,EAAUjD,KACdzN,MAAO0Q,EAAU1Q,MACjBuL,oBAAoB,EAJtB,SAME,cAACmG,GAAA,EAAD,CAAUpB,QAASY,EAAnB,SACE,cAAC,EAAD,CACElN,QAAQ,SACRoC,QAAQ,SACRlG,MAAM,EACND,aAAa,EACb8C,QAAQ,EACRE,aAAa,EANf,SAOGyN,EAAU1Q,WATV0Q,EAAU1Q,UAcnB,cAACgG,EAAA,EAAD,CAAS4K,YAAY,aAAa5M,QAAQ,WACzCoM,GAAcxO,KAAI,SAAC+O,GAAD,OACjB,cAAC,GAAD,CACE7D,OAAK,EACL/M,GAAI4Q,EAAalD,KACjBzN,MAAO2Q,EAAa3Q,MAHtB,SAKE,cAAC0R,GAAA,EAAD,CAAUpB,QAASY,EAAnB,SACE,cAAC,EAAD,CACElN,QAAQ,WACRoC,QAAQ,SACRnG,aAAa,EACb8C,QAAQ,EACRE,aAAa,EALf,SAMG0N,EAAa3Q,WARb2Q,EAAa3Q,UAatB,cAACgG,EAAA,EAAD,CAAS4K,YAAY,aAAa5M,QAAQ,WAC1C,cAACU,EAAA,EAAD,CAAK0B,QAAQ,OAAOC,cAAc,MAAMC,eAAe,SAAvD,SACE,cAAC,GAAD,CAAcgK,QAASY,aAO3BS,GAAmB,WACvB,OACE,qCACE,cAAC,EAAD,CACE3N,QAAQ,SACR9D,MAAM,EACND,aAAa,EACb8C,QAAQ,EACRE,aAAa,EACbnC,GAAI,CAAE8Q,SAAU,GANlB,SAOG3K,EAAaG,WAEhB,cAAC1C,EAAA,EAAD,CAAK2B,cAAc,cAAcvF,GAAI,CAAEgF,GAAI,GAA3C,SACE,cAACoH,GAAA,EAAD,CACEC,IAAG,UAxJUzE,GAwJV,kBACH5H,GAAI,CACFsM,MAAO,GACPjH,OAAQ,IAJZ,mBASF,cAAC,GAAD,QA6BS0L,GAxBI,WACjB,MAA4B7M,EAAe,MAAnCK,GAAIyM,OAAZ,SACA,OACE,mCACE,cAACC,GAAA,EAAD,CACE5F,SAAS,SACTnI,QAAQ,WACRgH,UAAW,EACXlK,GAAI,CACFyF,WAAYuL,EAAO,cAAW3Q,GALlC,SAWE,eAAC6Q,GAAA,EAAD,CAAShO,QAAQ,QAAjB,WACI8N,GAAQ,cAAC,GAAD,IACTA,GAAQ,cAAC,GAAD,Y,qBC7JJG,GAtCF,SAAC,GAA8B,IAA5B5R,EAA2B,EAA3BA,SACNkF,EAAgBP,IAAhBO,YACR,OACE,qCACE,cAAC,GAAD,IACA,cAACb,EAAA,EAAD,CACE5D,GAAI,CACFoR,GAAI,EAAI3M,GAFZ,SAIE,cAAC4M,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAMC,WAAS,EAACtM,QAAS,EAAzB,UACE,cAACuM,GAAA,EAAD,CAAQC,QAAM,EAAd,SACE,cAACH,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIpN,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,KAAD,CAAQoN,IAAK,GAAb,SACE,cAAC,GAAD,UAIN,cAACN,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIpN,GAAI,EAAGC,GAAI,EAA9B,SACGjF,IAEH,cAACiS,GAAA,EAAD,CAAQR,MAAI,EAAZ,SACE,eAACM,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIpN,GAAI,EAAGC,GAAI,EAA9B,UACE,cAACU,EAAA,EAAD,CACElF,GAAI,CACF6R,GAAI,KAGR,cAAC,GAAD,oBCrBDC,GAbE,SAAC,GAAwB,eACxC,IAAM9I,EAAW,YACjB,OACE,mCACE,cAAC,EAAD,CAAYtH,MAAOsH,EAAUjC,YAAaiC,EAA1C,SACE,cAAC,EAAD,CAAmBrE,OAAQ,MAAOC,UAAWoE,EAA7C,kECsFO+I,GA1Fc,CAC3B,CACErQ,MAAO,OACPqF,YAAa,uIACbiL,MAAO,QACPC,aAAc,CAAC,YAAa,UAAW,QAAS,aAElD,CACEvQ,MAAO,QACPqF,YAAa,gKACbiL,MAAO,aACPC,aAAc,CAAC,OAAQ,YAAa,sBAAuB,UAAW,QAAS,WAEjF,CACEvQ,MAAO,OACPqF,YAAa,uHACbiL,MAAO,aACPC,aAAc,CAAC,OAAQ,cAAe,sBAAuB,UAAW,QAAS,WAEnF,CACEvQ,MAAO,iBACPqF,YAAa,qIACbiL,MAAO,aACPC,aAAc,CAAC,YAAa,UAE9B,CACEvQ,MAAO,SACPqF,YAAY,iJACZiL,MAAO,QACPC,aAAc,CAAC,UAAW,MAAO,aAEnC,CACEvQ,MAAO,OACPqF,YAAY,kHACZiL,MAAO,QACPC,aAAc,CAAC,YAAa,UAAW,UAEzC,CACEvQ,MAAO,QACPqF,YAAY,uEACZiL,MAAO,aACPC,aAAc,CAAC,OAAQ,sBAAuB,UAAW,QAAS,WAEpE,CACEvQ,MAAO,cACPqF,YAAa,sFACbiL,MAAO,QACPC,aAAc,CAAC,OAAQ,MAAO,kBAAmB,WAEnD,CACEvQ,MAAO,WACPqF,YAAa,gJAGbiL,MAAO,QACPC,aAAc,CAAC,OAAQ,kBAAmB,SAAU,QAEtD,CACEvQ,MAAO,eACPqF,YAAa,sFACbiL,MAAO,QACPC,aAAc,CAAC,OAAQ,gBAAiB,kBAAmB,WAE7D,CACEvQ,MAAO,aACPsQ,MAAO,QACPjL,YAAa,qFACbkL,aAAc,CAAC,OAAQ,cAAe,kBAAmB,WAE3D,CACEvQ,MAAO,SACPqF,YAAa,2GACbiL,MAAO,QACPC,aAAc,CAAC,OAAQ,cAAe,kBAAmB,WAE3D,CACEvQ,MAAO,eACPqF,YAAa,qFACbiL,MAAO,QACPC,aAAc,CAAC,OAAQ,cAAe,sBAAuB,WAE/D,CACEvQ,MAAO,OACPqF,YAAa,6FACbiL,MAAO,QACPC,aAAc,CAAC,UAAW,MAAO,YC5DtBC,GA1BC,SAAC,GAAoD,IAAlDxQ,EAAiD,EAAjDA,MAAOuQ,EAA0C,EAA1CA,aAAclL,EAA4B,EAA5BA,YACtC,OACE,mCACE,eAACjC,EAAA,EAAD,CAAOG,QAAS,EAAhB,UACE,cAAC,EAAD,CAAkB/C,YAAY,aAAa/C,aAAa,EAAxD,SACGuC,IAEH,cAACL,EAAA,EAAD,UAAa0F,IACb,eAACnD,EAAA,EAAD,CAAK0B,QAAQ,SAAb,UACE,eAACjE,EAAA,EAAD,CACE6B,QAAQ,QACRoC,QAAQ,SACRhF,WAAW,OACXI,MAAM,gBACNY,UAAU,OALZ,2BAMiB,OAEjB,cAACD,EAAA,EAAD,CAAY6B,QAAQ,QAAQoC,QAAQ,SAApC,SACG2M,EAAalP,KAAK,iBCehBoP,GA5BW,SAAC,GAAD,IACxBzQ,EADwB,EACxBA,MACAnC,EAFwB,EAExBA,SACAyD,EAHwB,EAGxBA,GAHwB,OAKxB,mCACE,eAAC8B,EAAA,EAAD,CACEG,QAAS,EACTjC,GAAIA,EACJhD,GAAI,CACFsM,MAAO,QAJX,UAMoB,kBAAV5K,GACN,cAAC,EAAD,CACEtC,MAAM,EACND,aAAa,EACbyD,cAAc,EACdM,QAAQ,QACRjB,QAAQ,EALV,SAMGP,IAGa,kBAAVA,GAAsB,mCAAGA,IAChCnC,QCtBQ6S,GAJc,SAC3BnR,GAD2B,OAExB,cAAC,GAAD,eAAuBA,KCMboR,GAVM,WACnB,OACE,cAAC,GAAD,CAAsB3Q,MAAO,6BAA7B,SACGqQ,GAASjR,KAAI,SAACwR,EAAmB/F,GAApB,OACZ,cAAC,GAAD,eAAsC+F,GAAtC,kBAAyB/F,UCH3BgG,GAAwB,CAAC,cAAC,GAAD,GAAkB,kBA4BlCC,GAxBE,SAAC,GAAwB,eACxC,IAAMxJ,EAAW,WACjB,OACE,mCACE,cAAC,EAAD,CAAYtH,MAAOsH,EAAUjC,YAAaiC,EAA1C,SACE,eAAC,EAAD,CACErE,OAAQqE,EACRpE,UAAU,sDAFZ,UAGE,cAACE,EAAA,EAAD,CAAOG,QAAS,EAAhB,SACGsN,GAASzR,KAAI,SAAC2R,EAAoBlG,GAArB,OACZ,cAAC3I,EAAA,EAAD,CAAuC0B,QAAQ,OAAOzC,GAAI,EAA1D,SACG4P,GADH,2BAA8BlG,SAKlC,cAAClL,EAAA,EAAD,CAAYqR,WAAW,QAAQhS,MAAM,gBAArC,qDCmBKiS,GAtCwB,CACnC,CACIxL,KAAM,oCACNyL,OAAQ,YACRC,SAAU,WACVC,iBAAkB,2EAEtB,CACI3L,KAAM,mCACNyL,OAAQ,YACRC,SAAU,YACVC,iBAAkB,2EAEtB,CACI3L,KAAM,iCACNyL,OAAQ,YACRC,SAAU,YACVC,iBAAkB,2EAEtB,CACI3L,KAAM,uCACNyL,OAAQ,YACRC,SAAU,YACVC,iBAAkB,2EAEtB,CACI3L,KAAM,8BACNyL,OAAQ,iBACRC,SAAU,iBAEd,CACI1L,KAAM,2CACNyL,OAAQ,YACRC,SAAU,iBACVC,iBAAkB,4E,qBCOXC,GAxCK,SAAC,GAKA,IAJnB5L,EAIkB,EAJlBA,KACAyL,EAGkB,EAHlBA,OACAC,EAEkB,EAFlBA,SACAC,EACkB,EADlBA,iBAEA,OACE,mCACE,eAAClP,EAAA,EAAD,WACGkP,GACC,eAAChO,EAAA,EAAD,CAAO2H,UAAU,MAAMhH,WAAW,SAASR,QAAS,EAApD,UACE,cAAC,EAAD,CAAkB/C,YAAY,aAAa/C,aAAa,EAAxD,SACGgI,IAEH,cAAC,EAAD,CAAYlI,GAAI6T,EAAkB5T,MAAOiI,EAAMzD,OAAO,SAAtD,SACE,cAAC,KAAD,CACE1D,GAAI,CACFU,MAAO,iBAMfoS,GACA,cAAC,EAAD,CAAkB5Q,YAAY,aAAa/C,aAAa,EAAxD,SACGgI,IAGL,cAAC,EAAD,CACEjF,YAAY,WACZgB,QAAQ,WACR,aAAW,WACX/D,aAAa,EAJf,SAKG,UAAGyT,EAAH,cAAeC,GAAWjT,sB,aCLtBoT,GA3Ba,SAAC,GAG+B,IAF1DtR,EAEyD,EAFzDA,MACGuR,EACsD,kBACzD,OACE,cAAC,GAAD,aACEvR,MACE,qCACoB,kBAAVA,GACN,cAAC,EAAD,CACEtC,MAAM,EACND,aAAa,EACbyD,cAAc,EACdM,QAAQ,QACRkH,UAAU,SACVnI,QAAQ,EANV,SAOGP,IAGa,kBAAVA,GAAsB,mCAAGA,QAGjCuR,KCfKC,GAVI,WACjB,OACE,cAAC,GAAD,CAAqBxR,MAAM,iBAA3B,SACGiR,GAAe7R,KAAI,SAACqS,GAAD,OAClB,cAAC,GAAD,eAAwCA,GAAtBA,EAAYhM,YCevBiM,GAjBY,CACvB,CACIC,OAAQ,mDACRC,OAAQ,gDACR5K,KAAM,2BACN6K,SAAU,KACVC,OAAQ,MAEZ,CACIH,OAAQ,yDACRC,OAAQ,UACR5K,KAAM,+BACN6K,SAAU,KACVC,OAAQ,OCeDC,GA7BA,SAAC,GAA+C,IAA7CH,EAA4C,EAA5CA,OAAQD,EAAoC,EAApCA,OAAQ3K,EAA4B,EAA5BA,KAAM8K,EAAsB,EAAtBA,OACtC,OACE,mCACE,eAAC5P,EAAA,EAAD,WACE,cAACvC,EAAA,EAAD,CAAYuB,cAAc,EAA1B,SAAkC0Q,IAClC,eAAC1P,EAAA,EAAD,CAAK9D,MAAO,CAAEwF,QAAS,UAAvB,UACE,cAAC,EAAD,CAAYrG,GAAIyJ,EAAMxJ,MAAOmU,EAAQ3P,OAAO,SAA5C,SACE,cAAC,EAAD,CACExB,YAAY,WACZgB,QAAQ,WACR,aAAW,WACX/D,aAAa,EACbgD,aAAa,EALf,SAMGkR,MAGL,eAAC,EAAD,CACEnR,YAAY,WACZgB,QAAQ,WACR,aAAW,WACX/D,aAAa,EAJf,eAKKqU,cCZAE,GAVG,WAChB,OACE,cAAC,GAAD,CAAqBhS,MAAM,YAA3B,SACG0R,GAAQtS,KAAI,SAACwS,GAAD,OACX,cAAC,GAAD,eAAgCA,GAAnBA,EAAOA,cCiCbK,GAnCH,SAAC,GAA0D,IAAxDvI,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,SAAU3C,EAAoC,EAApCA,KAAM4C,EAA8B,EAA9BA,UAAWE,EAAmB,EAAnBA,OACjD,OACE,mCACE,eAAC5H,EAAA,EAAD,WACE,cAAC,EAAD,CACE3E,GAAIyJ,EACJxJ,MAAOkM,EACP1H,OAAO,SACPrE,cAAc,EAJhB,SAKE,cAAC,EAAD,CAAkB6C,YAAY,aAAa/C,aAAa,EAAxD,SACG,UAAGiM,EAAH,cAAgBC,GAAWzL,kBAGhC,cAAC,EAAD,CACEsC,YAAY,WACZgB,QAAQ,WACR,aAAW,WACX/D,aAAa,EAJf,SAKGmM,IAEH,oBACExL,MAAO,CACL8T,mBAAoB,IAFxB,SAIGpI,EAAO1K,KAAI,SAAC+S,EAAOtH,GAAR,OACV,6BACE,cAAClL,EAAA,EAAD,UAAawS,KADf,UAAYzI,EAAZ,kBAA6BmB,eCjB1B2G,GAVI,WACjB,OACE,cAAC,GAAD,CAAqBxR,MAAM,aAA3B,SACGyJ,GAAKrK,KAAI,SAAC8K,EAAWW,GAAZ,OACR,cAAC,GAAD,eAAwCX,GAAxC,UAAaA,EAAIR,SAAjB,OAA2BmB,UCgBpBuH,GArBI,WACjB,OACE,cAAC,GAAD,CACEpS,MACE,cAAC,GAAD,CAAezC,GAAG,WAAWC,MAAM,0BAAnC,SACE,cAAC,EAAD,CACEE,MAAM,EACND,aAAa,EACb+D,QAAQ,QACRkH,UAAU,SACVnI,QAAQ,EACRE,aAAa,EANf,iDAHN,SAcE,gC,qCCVA4R,GAAmB,CACrB,CACIrS,MAAO,iBACPsS,WAAY,EACZC,WAAY,CAAC,kBAAmB,YAAa,OAEjD,CACIvS,MAAO,YACPsS,WAAY,EACZC,WAAY,CAAC,kBAAmB,YAAa,OAEjD,CACIvS,MAAO,KACPsS,WAAY,EACZC,WAAY,CAAC,kBAAmB,YAAa,KAAM,cAEvD,CACIvS,MAAO,MACPsS,WAAY,EACZC,WAAY,CAAC,WAAY,YAAa,cAE1C,CACIvS,MAAO,SACPsS,WAAY,EACZC,WAAY,CAAC,aAEjB,CACIvS,MAAO,WACPsS,WAAY,EACZC,WAAY,CAAC,aAEjB,CACIvS,MAAO,WACPsS,WAAY,EACZC,WAAY,CAAC,aAEjB,CACIvS,MAAO,aACPsS,WAAY,EACZC,WAAY,CAAC,kBAAmB,YAAa,aAAc,cAE/D,CACIvS,MAAO,UACPsS,WAAY,EACZC,WAAY,CAAC,kBAAmB,YAAa,eAEjD,CACIvS,MAAO,SACPsS,WAAY,EACZC,WAAY,CAAC,kBAAmB,eAEpC,CACIvS,MAAO,cACPsS,WAAY,EACZC,WAAY,CAAC,kBAAmB,eAEpC,CACIvS,MAAO,UACPsS,WAAY,EACZC,WAAY,CAAC,kBAAmB,aAAc,cAElD,CACIvS,MAAO,QACPsS,WAAY,EACZC,WAAY,CAAC,kBAAmB,eAEpC,CACIvS,MAAO,aACPsS,WAAY,EACZC,WAAY,CAAC,kBAAmB,YAAa,eAEjD,CACIvS,MAAO,QACPsS,WAAY,EACZC,WAAY,CAAC,UAEjB,CACIvS,MAAO,MACPsS,WAAY,EACZC,WAAY,CAAC,UAEjB,CACIvS,MAAO,MACPsS,WAAY,EACZC,WAAY,CAAC,QAAS,QAE1B,CACIvS,MAAO,MACPsS,WAAY,EACZC,WAAY,CAAC,QAAS,QAE1B,CACIvS,MAAO,SACPsS,WAAY,EACZC,WAAY,CAAC,QAAS,QAE1B,CACIvS,MAAO,YACPsS,WAAY,EACZC,WAAY,CAAC,QAAS,QAE1B,CACIvS,MAAO,YACPsS,WAAY,EACZC,WAAY,CAAC,QAEjB,CACIvS,MAAO,aACPsS,WAAY,EACZC,WAAY,CAAC,QAEjB,CACIvS,MAAO,UACPsS,WAAY,EACZC,WAAY,CAAC,QAEjB,CACIvS,MAAO,SACPsS,WAAY,EACZC,WAAY,CAAC,QAEjB,CACIvS,MAAO,kBACPsS,WAAY,EACZC,WAAY,CAAC,eAEjB,CACIvS,MAAO,aACPsS,WAAY,EACZC,WAAY,CAAC,eAEjB,CACIvS,MAAO,YACPsS,WAAY,EACZC,WAAY,CAAC,eAEjB,CACIvS,MAAO,qBACPsS,WAAY,EACZC,WAAY,CAAC,kBAAmB,KAAM,cAE1C,CACIvS,MAAO,6BACPsS,WAAY,EACZC,WAAY,CAAC,kBAAmB,KAAM,cAE1C,CACIvS,MAAO,mBACPsS,WAAY,EACZC,WAAY,CAAC,kBAAmB,eAEtCnT,KAAI,SAACoT,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBD,WAAYC,EAAMD,WAAWE,YAIrDC,GAAS,CACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGEH,GAA0B,aACzB,IAAII,IAAIN,GAAOO,QAAiB,SAACC,EAAD,OAAQN,EAAR,EAAQA,WAAR,OAAyBM,EAAIC,OAAOP,KAAa,MAEnFE,OACArT,KAAI,SAAC2T,GAAD,MAAe,CAChBtN,KAAMsN,EACN/T,MAAO0T,GAAOM,KAAKC,MAAMD,KAAKE,SAAWR,GAAO1M,aClLlDmN,GAAgBvM,aAAOqC,GAAPrC,EAAkC,YAAgB,IAAb7I,EAAY,EAAZA,MACzD,MAAO,CACLoL,QAAQ,GAAD,OAAKpL,EAAMwF,QAAQ,GAAnB,YAAyBxF,EAAMwF,QAAQ,IAC9CuD,YAAa,kBA2CFsM,GAjCE,SAAC,GAA4D,IAA1D5V,EAAyD,EAAzDA,MAAO6V,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,SAC9B5Q,EAAOF,IAAPE,GAIR,OACE,mCACE,cAACR,EAAA,EAAD,CACE5D,GAAI,CACFiV,EAAG7Q,EAAK,EAAI,IAFhB,SAIE,cAACyQ,GAAD,CACErF,QAVQ,WACduF,EAAY7V,IAUNc,GAAE,eACIgV,EACA,CACEtU,MAAO,SAACjB,GAAD,OAAkBA,EAAMyB,QAAQC,QAAQC,MAC/CoH,YAAa,SAAC/I,GAAD,OAAkBA,EAAMyB,QAAQC,QAAQC,OAEvD,IARR,SAUE,cAAC,EAAD,CACEc,YAAY,aACZ/C,aAAa,EACbC,MAAM,EAHR,SAIGF,WCnCPgW,GAAsB,SAAC,GAQtB,IAPL/F,EAOI,EAPJA,MACAzO,EAMI,EANJA,MACAxB,EAKI,EALJA,MAMA,OACE,eAAC0E,EAAA,EAAD,CAAK5D,GAAI,CAAEqL,SAAU,YAArB,UACE,cAAC3F,EAAA,EAAD,CACEyJ,MAAOA,EACPjM,QAAQ,cACRlD,GAAI,CACFU,MAAOA,KAGX,cAACkD,EAAA,EAAD,CACE5D,GAAI,CACF4R,IAAK,EACLuD,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPhK,SAAU,WACV/F,QAAS,OACTG,WAAY,SACZD,eAAgB,UATpB,SAWE,cAACnE,EAAA,EAAD,CAAY6B,QAAQ,UAAU5B,UAAU,MAAMZ,MAAM,iBAApD,SACGxB,GAASiQ,UAwCLmG,GA5BI,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMtB,EAAmC,EAAnCA,WACNuB,EAAuCD,EAAnDtB,WAA6BD,EAAsBuB,EAAtBvB,WAAYtS,EAAU6T,EAAV7T,MAC3C+T,EAAaxB,EAChB9P,QAAO,SAACuR,GAAD,OAASF,EAAgBG,SAASD,EAAIvO,SAC7CrG,KAAI,SAAC4U,GAAD,OAASA,EAAIhV,SAAO,GAE3B,OACE,mCACE,cAACkD,EAAA,EAAD,CACE5D,GAAI,CACFuD,EAAG,EACHuH,OAAQ,SAACrL,GAAD,0BAA+BA,EAAMyB,QAAQ0U,KAAK,OAC1D7K,aAAc,EACd1F,OAAQ,QALZ,SAOE,eAACP,EAAA,EAAD,CAAOW,WAAW,SAAS2E,UAAU,SAArC,UACE,cAAC,GAAD,CACE+E,MAAQ6E,EAAa,EAAO,IAC5BtT,MAAO+U,EACPvW,MAAK,UAAK8U,EAAL,QAEP,cAAC3S,EAAA,EAAD,CAAY6B,QAAQ,QAApB,SAA6BxB,YCyCxBmU,GA/FA,WACb,IAAQzR,EAAOF,IAAPE,GACR,EAA0B8E,mBAAuB,CAC/C+K,WAAYA,GACTnT,KAAI,SAAC4U,GAAD,OAASA,EAAIvO,QACjBmN,QACC,SAACwB,EAAKC,GAAN,mBAAC,eACID,GADL,mBAEGC,GAAM,MAET,CAAEC,KAAK,IAEXC,cAAe,QAVjB,oBAAOC,EAAP,KAAcC,EAAd,KAkDMC,EAAmB,SAAClX,GACxBiX,GAAS,SAACE,GAER,IAAMC,EAAUC,OAAOC,KAAKH,EAAUpC,YAAYK,QAChD,SAACwB,EAAKC,GAAN,mBAAC,eACID,GADL,mBAEGC,EAAM7W,IAAU6W,IAAQM,EAAUpC,WAAW8B,OAEhD,CAAEC,KAAK,IAMT,OAHAM,EAAQN,KAAOO,OAAOC,KAAKH,EAAUpC,YAAYwC,MAC/C,SAACV,GAAD,OAASO,EAAQP,MAEZ,2BACFM,GACA,CAAEpC,WAAYqC,EAASL,cAAeK,EAAQN,IAAM,MAAQ9W,QAKrE,OACE,eAAC,GAAD,CAAqBwC,MAAM,SAA3B,UACE,cAACL,EAAA,EAAD,CAAYX,MAAM,gBAAgBwC,QAAQ,QAAQkH,UAAU,SAA5D,sIAIA,cAACtF,EAAA,EAAD,CACE2H,UAAU,MACVjH,eAAe,SACfxF,GAAI,CACF0W,SAAU,QAJd,SArCKH,OAAOC,KAAKN,EAAMjC,YAAYnT,KAAI,SAACiV,GAAD,OACvC,cAAC,GAAD,CACE7W,MAAO6W,EAEPf,SAAUkB,EAAMD,gBAAkBF,EAClChB,YAAaqB,GAFRL,QA0CP,cAACY,GAAA,EAAD,CAAWC,KAAMxS,EAAK,EAAI,EAA1B,SAxEmB,WAErB,IAAMyS,EAASN,OAAOC,KAAKN,EAAMjC,YAAYK,QAC3C,SAACoB,EAAKK,GAAN,OAAeG,EAAMjC,WAAW8B,GAAOA,EAAML,IAC7C,OAGF,OAAO3B,GACJI,MAAK,SAAC1Q,EAAGqT,GACR,IAAIC,EAAM,EAOV,OANItT,EAAEuQ,WAAa8C,EAAE9C,WAAY+C,GAAO,EAC/BtT,EAAEuQ,WAAa8C,EAAE9C,WAAY+C,EAAM,EACnCtT,EAAEwQ,WAAW,GAAK6C,EAAE7C,WAAW,GAAI8C,GAAO,EAC1CtT,EAAEwQ,WAAW,GAAK6C,EAAE7C,WAAW,IAC/BxQ,EAAE/B,MAAQoV,EAAEpV,MADuBqV,EAAM,EAEzCtT,EAAE/B,MAAQoV,EAAEpV,QAAOqV,GAAO,GAC5BA,KAER5S,QAAO,SAAC+P,GAAD,MAAsB,QAAX2C,GAAoB3C,EAAMD,WAAW0B,SAASkB,MAChE/V,KAAI,SAACoT,GAAD,OACH,cAAC8C,GAAA,EAAD,UACE,cAAC,GAAD,CAAY/C,WAAYA,GAAYsB,KAAMrB,KADxBA,EAAMxS,UAoDEuV,KAC9B,cAAC5V,EAAA,EAAD,CAAYqR,WAAW,QAAQhS,MAAM,gBAAgB0J,UAAU,SAA/D,4CCnFS8M,GArBC,WACd,OACE,mCACE,eAAC,GAAD,CAAqBxV,MAAM,UAA3B,UACE,cAACL,EAAA,EAAD,kXAQA,cAACA,EAAA,EAAD,iICGFkR,GAAsB,CAC1B,CACE7Q,MAAO,UACPyV,QAAS,cAAC,GAAD,KAEX,CACEzV,MAAO,YACPyV,QAAS,cAAC,GAAD,KAEX,CACEzV,MAAO,aACPyV,QAAS,cAAC,GAAD,KAEX,CACEzV,MAAO,SACPyV,QAAS,cAAC,GAAD,KAEX,CACEzV,MAAO,iBACPyV,QAAS,cAACC,GAAD,KAEX,CACE1V,MAAO,aACPyV,QAAS,cAAC,GAAD,MAIPE,GAAmB,WACvB,IAAQjT,EAAOF,IAAPE,GAWR,OACE,cAACU,EAAA,EAAD,CACE2H,UAAU,MACVjH,eAAgBpB,EAAK,cAAW/D,EAChCL,GAAI,CACF0W,SAAU,QAJd,SAMGnE,GAASzR,KAAI,SAAC2R,GAAD,OACZ,cAAC,EAAD,CAEErT,MAAM,EACND,aAAa,EACbgD,aAAa,EACbe,QAAQ,WACRoU,GAAI,EACJ9H,QAAS,YAxBA,SAAC+H,GAChB,IAAIC,EAAaC,YAAW,WAAO,IAAD,EAChC,UAAAC,SACGC,eAAeJ,EAAUK,sBAD5B,SAEIC,eAAe,CAAEC,SAAU,SAAUC,MAAO,UAChDC,aAAaR,KACZ,KAmBKtR,CAASuM,EAAQ/Q,QARrB,SAUG+Q,EAAQ/Q,OATJ+Q,EAAQ/Q,aAyCRuW,GAvBA,SAAC,GAAsB,eACpC,IAAMjP,EAAW,SACjB,OACE,mCACE,cAAC,EAAD,CAAYtH,MAAOsH,EAAUjC,YAAaiC,EAA1C,SACE,cAAC,EAAD,CAAmBrE,OAAQqE,EAAUpE,UAAW,cAAC,GAAD,IAAhD,SACE,cAACE,EAAA,EAAD,CAAOG,QAAS,EAAhB,SACGsN,GAASzR,KAAI,SAAC2R,GAAD,OACZ,cAAC7O,EAAA,EAAD,CAEE0B,QAAQ,OACRzC,GAAI,EACJG,GAAIyP,EAAQ/Q,MAAMkW,cAJpB,SAKGnF,EAAQ0E,SAJJ1E,EAAQ/Q,mBClFdwW,GAJY,SACzBjX,GADyB,OAEtB,cAAC,GAAD,eAAuBA,K,kDCUtBkX,GAAW,SAAC,GAAD,IACfjZ,EADe,EACfA,MACAwJ,EAFe,EAEfA,KACAyG,EAHe,EAGfA,MAHe,IAIfiJ,cAJe,MAIN,SAACjJ,GAAD,OAAWA,GAJL,SAMf,eAACkJ,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWtY,GAAI,CAAEsM,MAAO,OAAxB,SAAkCpN,IAClC,cAACoZ,GAAA,EAAD,CAAWtY,GAAI,CAAEsM,MAAO,OAAxB,SACG5D,EACC,cAAC,EAAD,CAAYzJ,GAAIyJ,EAAMxJ,MAAOkZ,EAAOjJ,IAAUA,IAE9CiJ,EAAOjJ,IAAU,cAACzJ,EAAA,EAAD,CAAkB2E,KAAM,WA4BlCkO,GAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACjB,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACGH,EAAM1X,KAAI,SAAC8X,GAAD,OACT,cAAC,GAAD,CACER,OAAQQ,EAAKR,OAEblZ,MAAO0Z,EAAK1Z,MACZwJ,KAAMkQ,EAAKlQ,KACXyG,MAAOyJ,EAAKzJ,OAHPyJ,EAAK1Z,iBCxBP2Z,GAnBH,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,UACb,EAAsB5P,qBAAtB,oBAAO6P,EAAP,KAAYC,EAAZ,KAeA,OAPAhT,qBAAU,WACR,IAAMiT,EAAQC,aAAY,kBAPf,WACX,IACMC,EAAYL,EAAUM,UAC5BJ,IAASjL,KAAKsL,MAAQF,GAFN,oBAE4BG,QAAQ,KAIpBC,KAAQ,IACxC,OAAO,WACLC,cAAcP,MAEf,IAEI,mCAAGF,K,oBCpBNU,GAAmBC,KAAKC,iBAAiBC,kBAAkBC,SCY3DC,GAA0B,CAC9B,CACE/D,IAAK,MACL7W,MAAO,cACPiQ,MAAO,cAAC,GAAD,CAAK2J,UAAW,IAAI/K,KAAK,0BAElC,CACEgI,IAAK,WACL7W,MAAO,eACPiQ,MAAO,0BAIL4K,GAAsB,CA+B1B,CACE7a,MAAO,kBACP6W,IAAK,YAELqC,OAAQ,SAAC4B,GACP,OAAOA,EAAI5B,cD3DW6B,EC2DQD,ED1DzBE,aACHD,EAAMR,KCyD0B,yBAA2BO,ED3DxC,IAACC,KESbE,GARO,WACpB,OACE,cAAC,GAAD,CAAoBzY,MAAM,sBAA1B,SACE,cAAC,GAAD,CAAY8W,MAAOsB,QCgCVM,GA9BG,WAChB,MAAkClR,mBAAmBmR,IAArD,oBAAON,EAAP,KAAkBO,EAAlB,KAEMC,EAAY7Q,sBAAW,sBAAC,8BAAAjG,EAAA,sEAEVkG,MF+DpB,4DE/D2C,CACvC6Q,MAAO,WAHmB,cAEtBC,EAFsB,gBAKNA,EAAI3Q,OALE,OAKtB4Q,EALsB,OAM5BJ,EACED,GAAYvZ,KAAI,SAAC6Z,GAAD,mBAAC,eACZA,GADW,IAEdxL,MAAOoH,OAAOC,KAAKkE,GAAS/E,SAASgF,EAAM5E,KACvC2E,EAAQC,EAAM5E,KACd4E,EAAMxL,YAXc,2CAc3B,IAMH,OAJAnJ,qBAAU,WACRuU,MACC,CAACA,IAGF,cAAC,GAAD,CAAoB7Y,MAAM,6BAA1B,SACE,cAAC,GAAD,CAAY8W,MAAOuB,OC3BnBxH,GAAwB,CAC5B,cAAC,GAAD,GAAmB,kBACnB,cAAC,GAAD,GAAe,eAwBFqI,GAnBD,SAAC,GAAqB,eAClC,IAAM5R,EAAW,QACjB,OACE,mCACE,cAAC,EAAD,CAAYtH,MAAOsH,EAAUjC,YAAaiC,EAA1C,SACE,cAAC,EAAD,CAAmBrE,OAAQqE,EAA3B,SACE,cAAClE,EAAA,EAAD,CAAOG,QAAS,EAAhB,SACGsN,GAASzR,KAAI,SAAC2R,EAAoBlG,GAArB,OACZ,cAAC3I,EAAA,EAAD,CAAoC0B,QAAQ,OAAOzC,GAAI,EAAvD,SACG4P,GADH,wBAA2BlG,gB,UCQnCsO,GAAY,WAChB,IAAMC,EAAW/U,cACjB,OACE,mCACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD,UACE,cAACgV,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,QAAS,IACTC,WAAW,YAFb,SAKE,eAAC,IAAD,CAAQJ,SAAUA,EAAlB,UACE,cAAC,IAAD,CAAO9O,OAAK,EAACW,KAAK,IAAIrL,UAAWoJ,KACjC,cAAC,IAAD,CAAOiC,KAAK,SAASrL,UAAWqG,IAChC,cAAC,IAAD,CAAOgF,KAAK,UAAUrL,UAAW2W,KACjC,cAAC,IAAD,CAAOtL,KAAK,YAAYrL,UAAWkR,KACnC,cAAC,IAAD,CAAO7F,KAAK,SAASrL,UAAWsZ,KAChC,cAAC,IAAD,CAAOjO,KAAK,WAAWrL,UAAWyH,KAClC,cAAC,IAAD,CAAO4D,KAAK,QAAQrL,UAAW6D,IAC/B,cAAC,IAAD,CAAOwH,KAAK,IAAIrL,UAAWwQ,SAVxBgJ,EAAShV,oBAqCbqV,GAhBH,WACV,OACE,mCACE,cAAC,GAAD,UACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAsBC,aAAW,EAAjC,SACE,cAAC,IAAD,CAAeC,SAhDJ3T,GAgDX,SACE,cAAC,GAAD,eCxDC4T,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB9R,MAAK,YAAkD,IAA/C+R,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHRO,GAAY,kBAChB,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,OAIEC,GAAcxE,SAASC,eAAe,SAE5C,OAAIuE,SAAJ,IAAIA,QAAJ,EAAIA,GAAaC,iBACfC,kBAAQ,cAAC,GAAD,IAAeF,IAEvBG,iBAAO,cAAC,GAAD,IAAeH,IAMxBV,O","file":"static/js/main.dc08decf.chunk.js","sourcesContent":["import {\r\n  Link,\r\n  LinkProps,\r\n  Typography,\r\n  TypographyProps,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport React, { ReactNode, useState } from 'react';\r\n\r\nexport interface IStyledLinkLinkProps extends Omit<LinkProps, 'href'> {\r\n  to: string;\r\n  label: string;\r\n  capitalized?: boolean;\r\n  bold?: boolean;\r\n  bottomBorder?: boolean;\r\n  typographyProps?: Omit<TypographyProps, 'children'>;\r\n  children?: JSX.Element;\r\n}\r\n\r\nconst StyledLink = ({\r\n  to,\r\n  label,\r\n  capitalized,\r\n  bold,\r\n  bottomBorder = true,\r\n  typographyProps,\r\n  children,\r\n  ...rest\r\n}: IStyledLinkLinkProps) => {\r\n  const theme = useTheme();\r\n  const transformedLabel = capitalized ? label?.toUpperCase() : label;\r\n  const {\r\n    style: typographyStyle,\r\n    sx: typographySx,\r\n    ...restOfTypographyProps\r\n  } = {\r\n    ...typographyProps,\r\n  };\r\n  const overriddenStyle: React.CSSProperties = {\r\n    transition: 'color 0.2s ease, border-bottom-color 0.2s ease',\r\n    borderBottom: bottomBorder\r\n      ? 'dotted 1px rgba(160, 160, 160, 0.65)'\r\n      : undefined,\r\n    fontWeight: bold ? 'bold' : undefined,\r\n    cursor: 'pointer',\r\n  };\r\n  return (\r\n    <Link\r\n      {...rest}\r\n      href={to}\r\n      style={{\r\n        color: 'inherit',\r\n        textDecoration: 'none',\r\n      }}>\r\n      {children &&\r\n        React.Children.map(children, (child) =>\r\n          React.cloneElement(child, {\r\n            style: {\r\n              ...child.props.style,\r\n              ...overriddenStyle,\r\n              '&:hover': {\r\n                color: theme.palette.primary.main,\r\n              },\r\n            },\r\n          }),\r\n        )}\r\n      {!children && (\r\n        <Typography\r\n          {...restOfTypographyProps}\r\n          style={{\r\n            ...typographyStyle,\r\n            ...overriddenStyle,\r\n          }}\r\n          sx={{\r\n            ...typographySx,\r\n            '&:hover': {\r\n              color: theme.palette.primary.main,\r\n            },\r\n          }}\r\n          component=\"span\">\r\n          {transformedLabel}\r\n        </Typography>\r\n      )}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default StyledLink;\r\n","import React, { useState } from 'react';\r\nimport { Typography, TypographyProps, useTheme } from '@material-ui/core';\r\n\r\nimport { SxProps } from '@material-ui/system';\r\n\r\nconst LETTER_SPACING = '0.25em';\r\n\r\ntype FontVariant = 'normal' | 'title' | 'titleLight' | 'subtitle';\r\n\r\nconst fontVariantStyles: Record<FontVariant, SxProps> = {\r\n  normal: {},\r\n  title: {\r\n    fontWeight: 900,\r\n    fontSize: '1.5em',\r\n    fontFamily: '\"Raleway\", Helvetica, sans-serif',\r\n    letterSpacing: LETTER_SPACING,\r\n  },\r\n  titleLight: {\r\n    fontWeight: 800,\r\n    fontSize: '0.8em',\r\n    fontFamily: '\"Raleway\", Helvetica, sans-serif',\r\n    letterSpacing: LETTER_SPACING,\r\n  },\r\n  subtitle: {\r\n    fontWeight: 400,\r\n    fontSize: '0.7em',\r\n    fontFamily: '\"Raleway\", Helvetica, sans-serif',\r\n    letterSpacing: LETTER_SPACING,\r\n  },\r\n};\r\n\r\nexport interface IStyledTypographyProps extends TypographyProps {\r\n  bold?: boolean;\r\n  capitalized?: boolean;\r\n  spaced?: boolean;\r\n  fontVariant?: FontVariant;\r\n  hoverEffect?: boolean;\r\n}\r\n\r\nconst StyledTypography = ({\r\n  bold = false,\r\n  capitalized = false,\r\n  spaced = false,\r\n  fontVariant = 'normal',\r\n  hoverEffect = false,\r\n  children,\r\n  style: styleProps,\r\n  sx: sxProps,\r\n  ...rest\r\n}: IStyledTypographyProps & TypographyProps) => {\r\n  const theme = useTheme();\r\n  const fontVariantStyle = fontVariantStyles[fontVariant];\r\n  const overriddenStyle: React.CSSProperties = {\r\n    transition: hoverEffect\r\n      ? 'color 0.2s ease, border-bottom-color 0.2s ease'\r\n      : undefined,\r\n    cursor: hoverEffect ? 'pointer' : undefined,\r\n    fontWeight: bold ? 'bold' : undefined,\r\n    letterSpacing: spaced ? LETTER_SPACING : undefined,\r\n  };\r\n  const capitalizedChildren =\r\n    capitalized && typeof children === 'string'\r\n      ? children?.toString()?.toUpperCase()\r\n      : children;\r\n  return (\r\n    <Typography\r\n      {...rest}\r\n      sx={{\r\n        ...sxProps,\r\n        ...fontVariantStyle,\r\n        '&:hover': {\r\n          color: hoverEffect ? theme.palette.primary.main : undefined,\r\n        },\r\n      }}\r\n      style={{ ...styleProps, ...overriddenStyle }}>\r\n      {capitalizedChildren}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default StyledTypography;\r\n","import { Box, LinkProps, Typography } from '@material-ui/core';\r\n\r\nimport React from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx';\r\nimport StyledLink from './StyledLink';\r\nimport StyledTypography from './StyledTypography';\r\n\r\nfunction MarkdownListContainer(props: any) {\r\n  return <Box component=\"ul\" sx={{ marginBottom: 4 }} {...props} />;\r\n}\r\n\r\nfunction MarkdownListItem(props: any) {\r\n  return (\r\n    <Box component=\"li\" sx={{ mt: 1 }}>\r\n      <Typography variant=\"body1\" {...props}></Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction MarkdownLink(props: LinkProps) {\r\n  return (\r\n    <StyledLink\r\n      to={props.href ?? '/'}\r\n      label={props.title ?? React.Children.toArray(props.children)?.join(', ')}\r\n      target=\"_blank\"\r\n    />\r\n  );\r\n}\r\n\r\nfunction h1Styled(props: any) {\r\n  return (\r\n    <>\r\n      <StyledTypography\r\n        key={props.id}\r\n        fontVariant=\"titleLight\"\r\n        bold={true}\r\n        capitalized={true}\r\n        gutterBottom={true}\r\n        sx={{\r\n          pb: 2,\r\n        }}>\r\n        {React.Children.toArray(props.children)?.join(', ')}\r\n      </StyledTypography>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction h2Styled(props: any) {\r\n  return <Typography variant=\"h2\">{props.children}</Typography>;\r\n}\r\n\r\nfunction h3Styled(props: any) {\r\n  return <Typography variant=\"h3\">{props.children}</Typography>;\r\n}\r\n\r\nfunction h4Styled(props: any) {\r\n  return <Typography variant=\"h4\">{props.children}</Typography>;\r\n}\r\n\r\nfunction h5Styled(props: any) {\r\n  return <Typography variant=\"h5\">{props.children}</Typography>;\r\n}\r\n\r\nfunction h6Styled(props: any) {\r\n  return <Typography variant=\"h6\">{props.children}</Typography>;\r\n}\r\n\r\nfunction pStyled(props: any) {\r\n  return (\r\n    <Typography\r\n      paragraph={true}\r\n      gutterBottom={true}\r\n      sx={{\r\n        pb: 2,\r\n      }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst options = {\r\n  overrides: {\r\n    h1: {\r\n      component: h1Styled,\r\n    },\r\n    h2: {\r\n      component: h2Styled,\r\n    },\r\n    h3: {\r\n      component: h3Styled,\r\n    },\r\n    h4: {\r\n      component: h4Styled,\r\n    },\r\n    h5: {\r\n      component: h5Styled,\r\n    },\r\n    h6: {\r\n      component: h6Styled,\r\n    },\r\n    p: {\r\n      component: pStyled,\r\n    },\r\n    a: { component: MarkdownLink },\r\n    ul: { component: MarkdownListContainer },\r\n    li: {\r\n      component: MarkdownListItem,\r\n    },\r\n  },\r\n};\r\n\r\nexport default function Markdown(props: any) {\r\n  return <ReactMarkdown options={options} {...props} />;\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nimport GA4React from 'ga-4-react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst { NODE_ENV, REACT_APP_GA_TRACKING_ID } = process.env;\r\n\r\nlet ga4react: GA4React;\r\nif (NODE_ENV === 'production' && REACT_APP_GA_TRACKING_ID) {\r\n  ga4react = new GA4React(REACT_APP_GA_TRACKING_ID);\r\n}\r\n\r\nconst Analytics = () => {\r\n  const { pathname } = useLocation();\r\n  useEffect(() => {\r\n    if (ga4react) {\r\n      (async (scopedPath) => {\r\n        const isGaInitialized = GA4React.isInitialized();\r\n        if (!isGaInitialized) {\r\n          await ga4react.initialize();\r\n        }\r\n        ga4react.pageview(scopedPath);\r\n      })(pathname);\r\n    }\r\n  }, [pathname]);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default Analytics;\r\n","import { useMediaQuery, useTheme } from \"@material-ui/core\";\r\n\r\nconst useBreakpoints = (filter: 'up' | 'down' | 'only' = 'down') => {\r\n    const theme = useTheme();\r\n    const sm = useMediaQuery(theme.breakpoints[filter]('sm'));\r\n    const md = useMediaQuery(theme.breakpoints[filter]('md'));\r\n    const lg = useMediaQuery(theme.breakpoints[filter]('lg'));\r\n    const scaleFactor = sm ? 3 : md ? 2 : 1;\r\n    return {\r\n        sm: sm,\r\n        md: md,\r\n        lg: lg,\r\n        scaleFactor: scaleFactor,\r\n    };\r\n};\r\n\r\nexport default useBreakpoints;\r\n","import {\r\n  Box,\r\n  CircularProgress,\r\n  Divider,\r\n  Paper,\r\n  Skeleton,\r\n  Stack,\r\n  Theme,\r\n} from '@material-ui/core';\r\nimport React, { ReactNode } from 'react';\r\n\r\nimport StyledTypography from '../components/StyledTypography';\r\nimport useBreakpoints from '../hooks/useBreakpoints';\r\n\r\ninterface IPageProps {\r\n  header: ReactNode;\r\n  subHeader?: ReactNode;\r\n  children: ReactNode;\r\n}\r\n\r\nconst PageContentLayout = ({ header, subHeader, children }: IPageProps) => {\r\n  const { scaleFactor } = useBreakpoints();\r\n  return (\r\n    <>\r\n      <Paper variant=\"outlined\">\r\n        <Stack\r\n          sx={{ px: 6 / scaleFactor, py: 6 / scaleFactor }}\r\n          spacing={2 / scaleFactor}>\r\n          {typeof header === 'string' && (\r\n            <StyledTypography\r\n              fontVariant=\"title\"\r\n              aria-label=\"title\"\r\n              capitalized={true}\r\n              hoverEffect={true}>\r\n              {header}\r\n            </StyledTypography>\r\n          )}\r\n\r\n          {typeof header !== 'string' && <>{header}</>}\r\n          {subHeader && typeof subHeader === 'string' && (\r\n            <StyledTypography\r\n              fontVariant=\"subtitle\"\r\n              variant=\"overline\"\r\n              aria-label=\"subtitle\"\r\n              capitalized={true}>\r\n              {subHeader}\r\n            </StyledTypography>\r\n          )}\r\n\r\n          {subHeader && typeof subHeader !== 'string' && <>{subHeader}</>}\r\n        </Stack>\r\n        <Divider />\r\n        <Box sx={{ p: 6 / scaleFactor }}>{children}</Box>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PageContentLayout;\r\n\r\nconst PageContentLayoutPlaceholder = () => {\r\n  const { sm } = useBreakpoints();\r\n  return (\r\n    <>\r\n      <PageContentLayout\r\n        header={\r\n          <>\r\n            <Skeleton height={36} />\r\n          </>\r\n        }\r\n        subHeader={\r\n          <>\r\n            <Skeleton height={30} />\r\n          </>\r\n        }>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          height={sm ? '71vh' : '55vh'}>\r\n          <CircularProgress\r\n            sx={{\r\n              color: (theme: Theme) => theme.palette.text.disabled,\r\n            }}\r\n          />\r\n        </Box>\r\n      </PageContentLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { PageContentLayoutPlaceholder };\r\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n// See https://reacttraining.com/react-router/web/guides/scroll-restoration/scroll-to-top\r\nconst ScrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","interface IPersonalInfo {\r\n    firstName: string;\r\n    lastName: string;\r\n    fullName: string;\r\n    email: string;\r\n    siteUrl: string;\r\n    githubUrl: string;\r\n    facebookUrl: string;\r\n    instagramUrl: string;\r\n    linkedInUrl: string;\r\n    twitterUrl: string;\r\n}\r\n\r\nconst personalInfo: IPersonalInfo = {\r\n    firstName: 'Nilesh',\r\n    lastName: 'Moradiya',\r\n    fullName: 'Nilesh Moradiya',\r\n    email: 'nileshmoradiya_coder@outlook.com',\r\n    siteUrl: 'nileshmoradiya.com',\r\n    githubUrl: 'https://github.com/nileshmoradiya',\r\n    facebookUrl: 'https://www.facebook.com/NnileshH',\r\n    instagramUrl: 'https://www.instagram.com/nilesh_moradiya',\r\n    linkedInUrl: 'https://www.linkedin.com/in/nilesh-moradiya',\r\n    twitterUrl: 'https://twitter.com/Nilesh_Moradiya'\r\n}\r\n\r\nexport default personalInfo;","import React, { ReactNode } from 'react';\r\n\r\nimport { Helmet } from 'react-helmet-async';\r\nimport ScrollToTop from '../components/Template/ScrollToTop';\r\nimport personalInfo from '../data/personalInfo';\r\n\r\ninterface IPageProps {\r\n  title: string;\r\n  description: string;\r\n  enableTitleTemplate?: boolean;\r\n  children: ReactNode;\r\n}\r\n\r\nconst PageLayout = ({\r\n  title,\r\n  description,\r\n  enableTitleTemplate = true,\r\n  children,\r\n}: IPageProps) => (\r\n  <>\r\n    <ScrollToTop />\r\n    <Helmet\r\n      titleTemplate={\r\n        enableTitleTemplate ? `%s | ${personalInfo.fullName}` : title\r\n      }\r\n      defer={false}>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </>\r\n);\r\n\r\nexport default PageLayout;\r\n","import Markdown from '../components/Markdown';\r\nimport PageContentLayout from '../layout/PageContentLayout';\r\nimport PageLayout from '../layout/PageLayout';\r\nimport React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport raw from 'raw.macro';\r\n\r\n// uses babel to load contents of file\r\nconst markdown = raw('../data/about.md');\r\n\r\nconst count = markdown\r\n  .split(/\\s+/)\r\n  .map((s) => s.replace(/\\W/g, ''))\r\n  .filter((s) => s.length).length;\r\n\r\ninterface IAboutProps {}\r\n\r\nconst About = ({}: IAboutProps) => {\r\n  return (\r\n    <>\r\n      <PageLayout title=\"About\" description=\"About\">\r\n        <PageContentLayout\r\n          header=\"About\"\r\n          subHeader={`(in about ${count} words)`}>\r\n          <Markdown>{markdown}</Markdown>\r\n          <Typography color=\"text.disabled\" variant=\"body2\">\r\n            And more...\r\n          </Typography>\r\n        </PageContentLayout>\r\n      </PageLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { IconButton, IconButtonProps, styled } from '@material-ui/core';\r\n\r\nimport React from 'react';\r\n\r\nconst StyledIconButton = styled(IconButton)<IconButtonProps>(({ theme }) => {\r\n  return {\r\n    '&:hover': {\r\n      color: theme.palette.primary.main,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  };\r\n});\r\n\r\nexport default StyledIconButton;\r\n","import EmailRoundedIcon from '@material-ui/icons/EmailRounded';\r\nimport FacebookRoundedIcon from '@material-ui/icons/FacebookRounded';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport React from 'react';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport personalInfo from './personalInfo';\r\n\r\ninterface IContact {\r\n  link: string;\r\n  label: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nconst contacts: IContact[] = [\r\n  {\r\n    link: personalInfo.linkedInUrl,\r\n    label: 'LinkedIn',\r\n    icon: <LinkedInIcon />,\r\n  },\r\n  {\r\n    link: personalInfo.githubUrl,\r\n    label: 'Github',\r\n    icon: <GitHubIcon />,\r\n  },\r\n  {\r\n    link: personalInfo.twitterUrl,\r\n    label: 'Twitter',\r\n    icon: <TwitterIcon />,\r\n  },\r\n\r\n  {\r\n    link: personalInfo.instagramUrl,\r\n    label: 'Instagram',\r\n    icon: <InstagramIcon />,\r\n  },\r\n  {\r\n    link: personalInfo.facebookUrl,\r\n    label: 'Facebook',\r\n    icon: <FacebookRoundedIcon />,\r\n  },\r\n  {\r\n    link: `mailto:${personalInfo.email}`,\r\n    label: 'Email',\r\n    icon: <EmailRoundedIcon />,\r\n  },\r\n];\r\n\r\nexport default contacts;\r\n","import { IconButton, Link, Theme } from '@material-ui/core';\r\nimport React, { ReactNode, useState } from 'react';\r\n\r\nimport StyledIconButton from '../StyledIconButton';\r\nimport contacts from '../../data/contact';\r\n\r\nconst ContactIcon = ({ children }: { children: ReactNode }) => {\r\n  return (\r\n    <>\r\n      <StyledIconButton>{children}</StyledIconButton>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ContactIcons = () => {\r\n  return (\r\n    <>\r\n      {contacts.map((contact) => (\r\n        <Link key={contact.label} href={contact.link} target=\"_blank\">\r\n          <ContactIcon>{contact.icon}</ContactIcon>\r\n        </Link>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactIcons;\r\n","import ContactIcons from '../components/Contact/ContactIcons';\r\nimport PageContentLayout from '../layout/PageContentLayout';\r\nimport PageLayout from '../layout/PageLayout';\r\nimport React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\ninterface IContactProps {}\r\n\r\nconst Contact = ({}: IContactProps) => {\r\n  const pageName = 'Contact';\r\n  return (\r\n    <>\r\n      <PageLayout title={pageName} description={pageName}>\r\n        <PageContentLayout\r\n          header={pageName}\r\n          subHeader=\"Places where you can reach out to me\">\r\n          <ContactIcons />\r\n        </PageContentLayout>\r\n      </PageLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import { CircularProgress, Paper, Theme, Typography } from '@material-ui/core';\r\nimport React, { ReactNode, useCallback, useEffect } from 'react';\r\n\r\nimport { useState } from 'react';\r\n\r\ninterface IQuote {\r\n  content: string;\r\n  author: string;\r\n}\r\n\r\nexport interface IRandomQuoteProps {}\r\n\r\nconst RandomQuote = ({}: IRandomQuoteProps) => {\r\n  const [quote, setQuote] = useState<IQuote>();\r\n  const [isLoadingQuote, setIsLoadingQuote] = useState<boolean>(true);\r\n  const [hasApiError, setHasApiError] = useState<boolean>(false);\r\n\r\n  const fetchQuote = useCallback(async () => {\r\n    await fetch('https://api.quotable.io/random')\r\n      .then(async (response) => {\r\n        const randomQuote: IQuote = await response.json();\r\n        setQuote({ ...randomQuote });\r\n      })\r\n      .catch(() => {\r\n        setHasApiError(true);\r\n      })\r\n      .finally(() => {\r\n        setIsLoadingQuote(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchQuote();\r\n  }, [fetchQuote]);\r\n\r\n  return hasApiError ? (\r\n    <></>\r\n  ) : (\r\n    <>\r\n      <Paper\r\n        elevation={4}\r\n        sx={{\r\n          p: 4,\r\n          color: (theme: Theme) => theme.palette.text.secondary,\r\n        }}>\r\n        {isLoadingQuote && (\r\n          <Typography textAlign=\"center\">\r\n            <CircularProgress\r\n              size={16}\r\n              sx={{\r\n                color: (theme: Theme) => theme.palette.text.secondary,\r\n              }}\r\n            />\r\n          </Typography>\r\n        )}\r\n        {!isLoadingQuote && quote && (\r\n          <>\r\n            <Typography textAlign=\"center\" variant=\"subtitle1\">\r\n              <i>\r\n                {'❝ '}\r\n                {quote.content}\r\n                {' ❞'}\r\n              </i>\r\n            </Typography>\r\n            <Typography textAlign=\"center\" variant=\"subtitle2\">\r\n              - {quote.author}\r\n            </Typography>\r\n          </>\r\n        )}\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RandomQuote;\r\n","import { NavLink, NavLinkProps } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport { Typography, TypographyProps, useTheme } from '@material-ui/core';\r\n\r\ninterface IStyledLinkLinkProps extends NavLinkProps {\r\n  to: string;\r\n  label: string;\r\n  capitalized?: boolean;\r\n  bold?: boolean;\r\n  bottomBorder?: boolean;\r\n  typographyProps?: Omit<TypographyProps, 'children'>;\r\n  disableActiveStyle?: boolean;\r\n  children?: JSX.Element;\r\n}\r\n\r\nconst StyledNavLink = ({\r\n  to,\r\n  label,\r\n  capitalized,\r\n  bold,\r\n  bottomBorder = true,\r\n  typographyProps,\r\n  children,\r\n  activeStyle,\r\n  disableActiveStyle = false,\r\n  ...rest\r\n}: IStyledLinkLinkProps) => {\r\n  const theme = useTheme();\r\n  // const [isHover, setIsHover] = useState(false);\r\n  const transformedLabel = capitalized\r\n    ? label?.toString()?.toUpperCase()\r\n    : label;\r\n  const {\r\n    style: typographyStyle,\r\n    sx: typographySx,\r\n    ...restOfTypographyProps\r\n  } = {\r\n    ...typographyProps,\r\n  };\r\n  const overriddenStyle: React.CSSProperties = {\r\n    transition: 'color 0.2s ease, border-bottom-color 0.2s ease',\r\n    borderBottom: bottomBorder\r\n      ? 'dotted 1px rgba(160, 160, 160, 0.65)'\r\n      : undefined,\r\n    fontWeight: bold ? 'bold' : undefined,\r\n  };\r\n  return (\r\n    <NavLink\r\n      {...rest}\r\n      to={to}\r\n      style={{\r\n        color: 'inherit',\r\n        textDecoration: 'none',\r\n      }}\r\n      activeStyle={\r\n        disableActiveStyle\r\n          ? {}\r\n          : {\r\n              textDecoration: 'underline',\r\n              color: theme.palette.primary.main,\r\n              ...activeStyle,\r\n            }\r\n      }>\r\n      {children &&\r\n        React.Children.map(children, (child) =>\r\n          React.cloneElement(child, {\r\n            style: {\r\n              ...child.props.style,\r\n              '&:hover': {\r\n                color: theme.palette.primary.main,\r\n              },\r\n            },\r\n          }),\r\n        )}\r\n      {!children && (\r\n        <Typography\r\n          {...restOfTypographyProps}\r\n          component=\"span\"\r\n          style={{\r\n            ...typographyStyle,\r\n            ...overriddenStyle,\r\n          }}\r\n          sx={{\r\n            ...typographySx,\r\n            '&:hover': {\r\n              color: theme.palette.primary.main,\r\n            },\r\n          }}>\r\n          {transformedLabel}\r\n        </Typography>\r\n      )}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default StyledNavLink;\r\n","import PageContentLayout from '../layout/PageContentLayout';\r\nimport PageLayout from '../layout/PageLayout';\r\nimport RandomQuote from '../components/RandomQuote';\r\nimport React from 'react';\r\nimport StyledNavLink from '../components/StyledNavLink';\r\nimport { Typography } from '@material-ui/core';\r\nimport personalInfo from '../data/personalInfo';\r\n\r\ninterface IHomeProps {}\r\n\r\nconst Home = ({}: IHomeProps) => {\r\n  return (\r\n    <>\r\n      <PageLayout\r\n        title={personalInfo.fullName}\r\n        enableTitleTemplate={false}\r\n        description=\"A BEAUTIFUL, RESPONSIVE, STATICALLY-GENERATED, REACT APPLICATION WRITTEN WITH MODERN JAVASCRIPT and HOSTED OVER THE GITHUB PAGES\">\r\n        <PageContentLayout\r\n          header=\"About this site\"\r\n          subHeader=\"A BEAUTIFUL, RESPONSIVE, STATICALLY-GENERATED, REACT APPLICATION WRITTEN WITH MODERN JAVASCRIPT and HOSTED OVER THE GITHUB PAGES\">\r\n          <Typography variant=\"body1\" paragraph>\r\n            Welcome to my website!\r\n          </Typography>\r\n          <Typography variant=\"body1\" paragraph>\r\n            Thanks for visiting! 🙏 Explore this site to read more{' '}\r\n            <StyledNavLink to=\"/about\" label=\"about by background\" />,{' '}\r\n            <StyledNavLink to=\"/resume\" label=\"what I have to offer 🧾\" />,{' '}\r\n            <StyledNavLink to=\"/projects\" label=\"work I've done 👷‍♂️\" />, view{' '}\r\n            <StyledNavLink to=\"/stats\" label=\"site statistics 🧮\" />, or If you\r\n            have questions, would like to discuss an opportunity to work\r\n            together or just catch-up over coffee,{' '}\r\n            <StyledNavLink\r\n              to=\"/contact\"\r\n              label=\"feel free to get in touch with me ✍\"\r\n            />\r\n            .\r\n          </Typography>\r\n          <RandomQuote />\r\n        </PageContentLayout>\r\n      </PageLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Button, ButtonProps, styled } from '@material-ui/core';\r\n\r\nimport React from 'react';\r\n\r\nconst StyledButton = styled(Button)<ButtonProps>(({ theme }) => {\r\n  return {\r\n    padding: `${theme.spacing(2)} ${theme.spacing(2)}`,\r\n    border: '1px solid',\r\n    borderRadius: 0,\r\n    color: theme.palette.text.primary,\r\n    backgroundColor: 'transparent',\r\n    borderColor: theme.palette.action.focus,\r\n    '&:hover': {\r\n      color: theme.palette.primary.main,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  };\r\n});\r\n\r\nexport default StyledButton;\r\n","export interface IJob {\r\n    company: string;\r\n    position: string;\r\n    link: string;\r\n    dateRange: string;\r\n    abstract?: string;\r\n    points: string[];\r\n    current?: boolean;\r\n}\r\n\r\nconst jobs: IJob[] = [\r\n    {\r\n        company: 'IMRIEL',\r\n        position: 'Technical Architect | Software Engineer | DevOps Engineer',\r\n        link: 'https://imriel.com',\r\n        dateRange: 'March 2015 - Present',\r\n        abstract: 'Architect & Develop applications for CBRE and C&W.',\r\n        points: [\r\n            'Transform monolithic apps to/with micro/mini service/serverless architectures.',\r\n            'Data Modelling, Architecting, developing end to end enterprise-grade apps with cloud and serverless technologies.',\r\n            'Lead teams, manage internal repositories, Peer-reviewing, managing legacy apps, maintain clean coding standards.',\r\n            'Leading, Mentoring, and assisting with teams as well as Peer-reviewing code for other team members to ensure the highest possible code quality and clean coding standards in software products.',\r\n            'Advising on innovative software development practices and providing technical assistance in dealing with client matters.',\r\n            'Researching and evaluating new development tools and software products to increase programming capabilities.',\r\n            'Scalable Integration projects between various CMS like MSD and Salesforce, Yardi using Serverless technology for C&W the real-estate giant.',\r\n            'Developed a virtual carper visualizer using ML/AI and Image Processing(https://loom-trial.myshopify.com/pages/visualizer).',\r\n            'Designing Database Model and Application Solution to manage a repository of financial real-estate transactions in APAC, EMEA and America regions for in-depth trend analysis.',\r\n            'Design end to end automation with CI/CD and DevOps processes using the latest tools and developing VNext build & release tasks.',\r\n            'Assisting in designing, developing, analyzing, testing, debugging, and executing modern Web Applications.',\r\n            'Determining user requirements, including project budgets and timelines as well as providing consultative services to clients and project team members on technical issues.',\r\n            'Preparing accurate reports to document design flaws and bugs as well as modifying existing software or system to correct errors and improve performance.',\r\n            'Developed custom importing tool libraries.',\r\n            'Convert monolithic applications to micro/mini services.',\r\n        ],\r\n        current: true,\r\n    },\r\n    {\r\n        company: 'TechGrains',\r\n        position: 'Sr. Software Engineer',\r\n        link: 'https://www.techgrains.com/',\r\n        dateRange: 'September 2013 – October 2015',\r\n        abstract: 'Develop and Support applications for hospitality industry.',\r\n        points: [\r\n            'Developed a POS System for Da-Pizza Planet chain with various hardware integration.',\r\n            'Developed Web APIs for internal product GoSurvey(http://gosurvey.in) and ShareExpense(http://shareexpense.in/) mobile apps for iOS, Android and Web clients.',\r\n            'Written, tested, and debugged Web API, Web applications and desktop applications.',\r\n            'Handled front-end and back-end aspect of Web applications.',\r\n            'Coordinated with clients for complex software installations and issue.',\r\n            'Perform code review, improve coding standards and ensuring software quality.',\r\n        ],\r\n    },\r\n    {\r\n        company: 'Promact',\r\n        position: 'Jr. Software Engineer',\r\n        link: 'https://promactinfo.com',\r\n        dateRange: 'July 2012 – August 2013',\r\n        abstract: 'Develop and Support applications for portfolio of applications.',\r\n        points: [\r\n            'Developed Web applications using MVC and Web API.',\r\n            'Developed test plans, identified issues, and modified programs.',\r\n            'Researched, analyzed and modified existing systems.',\r\n            'Supported back-office desktop applications for www.viagogo.com.',\r\n            'Enhanced and deployed reporting tool based on Google Analytics.',\r\n            'Debugging and fixing issues in existing applications.',\r\n        ],\r\n    },\r\n];\r\n\r\nexport default jobs;\r\n","import { Avatar, Divider, Stack, Typography } from '@material-ui/core';\r\nimport React, { Fragment } from 'react';\r\nimport StyledLink, { IStyledLinkLinkProps } from '../StyledLink';\r\n\r\nimport ContactIcons from '../Contact/ContactIcons';\r\nimport StyledButton from '../StyledButton';\r\nimport StyledNavLink from '../StyledNavLink';\r\nimport StyledTypography from '../StyledTypography';\r\nimport jobs from '../../data/resume/job';\r\nimport personalInfo from '../../data/personalInfo';\r\nimport useBreakpoints from '../../hooks/useBreakpoints';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nconst { PUBLIC_URL } = process.env; // set automatically from package.json:homepage\r\nconst { firstName, fullName, email, siteUrl } = personalInfo;\r\nconst currentEmployer = jobs.find((job) => job.current) || jobs[0];\r\nconst previousEmployers = jobs.filter(\r\n  (job) => job.company != currentEmployer.company,\r\n);\r\n\r\nconst ExternalLink = (props: IStyledLinkLinkProps) => {\r\n  return (\r\n    <StyledLink\r\n      {...props}\r\n      target=\"_blank\"\r\n      typographyProps={{\r\n        variant: 'subtitle2',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst MoreLink = ({ to, label }: { to: string; label: string }) => {\r\n  return (\r\n    <>\r\n      <StyledNavLink exact to={to} label=\"Learn More\">\r\n        <StyledButton variant=\"text\">\r\n          <StyledTypography\r\n            fontVariant=\"titleLight\"\r\n            capitalized={true}\r\n            bold={true}>\r\n            {label}\r\n          </StyledTypography>\r\n        </StyledButton>\r\n      </StyledNavLink>\r\n    </>\r\n  );\r\n};\r\n\r\nconst InfoBar = () => {\r\n  const resumePageRoute = useRouteMatch(`/resume`);\r\n  const { scaleFactor } = useBreakpoints();\r\n  const { md } = useBreakpoints();\r\n\r\n  return (\r\n    <>\r\n      <Stack spacing={6 / scaleFactor}>\r\n        <Stack spacing={3 / scaleFactor} alignItems={md ? 'center' : undefined}>\r\n          <Avatar\r\n            src={`${PUBLIC_URL}/images/me.jpg`}\r\n            sx={{\r\n              width: 160,\r\n              height: 160,\r\n            }}>\r\n            N M\r\n          </Avatar>\r\n          <StyledTypography fontVariant=\"title\" capitalized={true}>\r\n            {fullName}\r\n          </StyledTypography>\r\n          <StyledLink\r\n            to={`mailto:${email}`}\r\n            bold={true}\r\n            capitalized={true}\r\n            label={`${email} 📧`}\r\n            typographyProps={{\r\n              variant: 'overline',\r\n              color: 'text.disabled',\r\n              letterSpacing: '0.15em',\r\n            }}\r\n          />\r\n        </Stack>\r\n        <Divider />\r\n        <Stack spacing={3 / scaleFactor}>\r\n          <StyledTypography\r\n            variant=\"button\"\r\n            fontVariant=\"titleLight\"\r\n            bold={true}\r\n            capitalized={true}>\r\n            About\r\n          </StyledTypography>\r\n          <Typography variant=\"subtitle2\" paragraph>\r\n            Hi👋, I&apos;m {firstName}. I like building things. I am a{' '}\r\n            <ExternalLink\r\n              to=\"https://svitvasad.ac.in/\"\r\n              label=\"SVIT, Vasad - GTU\"\r\n            />{' '}\r\n            graduate, and currently working as a {currentEmployer.position} at{' '}\r\n            <ExternalLink\r\n              to={currentEmployer.link}\r\n              label={currentEmployer.company}\r\n            />\r\n            . Before {currentEmployer.company} I was at{' '}\r\n            {previousEmployers.map((job, index) => (\r\n              <Fragment key={job.company}>\r\n                <ExternalLink to={job.link} label={job.company} />{' '}\r\n                {index < previousEmployers.length - 1 && 'and '}\r\n              </Fragment>\r\n            ))}\r\n            .\r\n          </Typography>\r\n          <MoreLink\r\n            to={resumePageRoute?.isExact ? '/about' : '/resume'}\r\n            label={resumePageRoute?.isExact ? 'About me' : 'Learn More'}\r\n          />\r\n        </Stack>\r\n        <Divider />\r\n        <Stack direction=\"row\">\r\n          <ContactIcons />\r\n        </Stack>\r\n        <Typography\r\n          display=\"inline\"\r\n          variant=\"overline\"\r\n          sx={{\r\n            color: 'text.disabled',\r\n          }}>\r\n          &copy; {fullName}{' '}\r\n          <StyledNavLink\r\n            to=\"/\"\r\n            label={siteUrl}\r\n            typographyProps={{\r\n              variant: 'overline',\r\n            }}\r\n            disableActiveStyle={true}\r\n          />\r\n          .\r\n        </Typography>\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InfoBar;\r\n","import personalInfo from \"./personalInfo\";\r\n\r\nconst routes = [\r\n    {\r\n        index: true,\r\n        label: personalInfo.fullName,\r\n        path: '/',\r\n    },\r\n    {\r\n        label: 'About',\r\n        path: '/about',\r\n    },\r\n    {\r\n        label: 'Resume',\r\n        path: '/resume',\r\n    },\r\n    {\r\n        label: 'Projects',\r\n        path: '/projects',\r\n    },\r\n    {\r\n        label: 'Stats',\r\n        path: '/stats',\r\n    },\r\n    {\r\n        label: 'Contact',\r\n        path: '/contact',\r\n    },\r\n];\r\n\r\nexport default routes;\r\n","import { ThemeOptions } from \"@material-ui/core\";\r\n\r\nconst lightTheme: ThemeOptions = {\r\n  palette: {\r\n    primary: {\r\n      main: '#2e59ba'\r\n    },\r\n    background: {\r\n      default: '#f5f5f5',\r\n    },\r\n    mode: 'light'\r\n  },\r\n  components: {\r\n    MuiCssBaseline: {\r\n      styleOverrides: `\r\n          /* Make scroll overlay*/\r\n        body {\r\n              overflow-y:overlay;\r\n          }\r\n        /* Ref: https://www.w3schools.com/howto/howto_css_custom_scrollbar.asp*/\r\n        /* Scrollbar width */\r\n        ::-webkit-scrollbar {\r\n          width: 8px;\r\n          height:8px;\r\n        }\r\n        /* Scrollbar Track */\r\n        ::-webkit-scrollbar-track {\r\n          background: #e0e0e0;\r\n          border-radius: 4px;\r\n        }\r\n        /* Scrollbar Handle */\r\n        ::-webkit-scrollbar-thumb {\r\n          background: #bdbdbd;\r\n          border-radius: 4px;\r\n        }\r\n        /* Scrollbar Handle on hover */\r\n        ::-webkit-scrollbar-thumb:hover {\r\n          background: #9e9e9e;\r\n          border-radius: 4px;\r\n        }\r\n        `,\r\n    },\r\n    MuiAppBar: {\r\n      styleOverrides: {\r\n        root: {\r\n          backgroundColor: '#FFFFFF',\r\n          color: '#212121'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst darkTheme: ThemeOptions = {\r\n\r\n  palette: {\r\n    primary: {\r\n      main: '#2e7d32'\r\n    },\r\n    background: {\r\n      default: '#090C10',\r\n      paper: '#0D1117'\r\n    },\r\n    mode: 'dark'\r\n  },\r\n  components: {\r\n    MuiCssBaseline: {\r\n      styleOverrides: `\r\n          /* Make scroll overlay*/\r\n        body {\r\n              overflow-y:overlay;\r\n          }\r\n        /* Ref: https://www.w3schools.com/howto/howto_css_custom_scrollbar.asp*/\r\n        /* Scrollbar width */\r\n        ::-webkit-scrollbar {\r\n          width: 8px;\r\n          height:8px;\r\n        }\r\n        /* Scrollbar Track */\r\n        ::-webkit-scrollbar-track {\r\n          background: #2B2B2B;\r\n          border-radius: 4px;\r\n        }\r\n        /* Scrollbar Handle */\r\n        ::-webkit-scrollbar-thumb {\r\n          background: #626262;\r\n          border-radius: 4px;\r\n        }\r\n        /* Scrollbar Handle on hover */\r\n        ::-webkit-scrollbar-thumb:hover {\r\n          background: #959595;\r\n          border-radius: 4px;\r\n        }\r\n        `,\r\n    },\r\n    MuiAppBar: {\r\n      styleOverrides: {\r\n        root: {\r\n          backgroundColor: '#0D1117',\r\n          color: '#FFFFFF'\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default lightTheme;\r\nexport { darkTheme, lightTheme };\r\n","import { PaletteMode, useMediaQuery } from '@material-ui/core';\r\nimport React, { ReactNode } from 'react';\r\nimport {\r\n  Theme,\r\n  ThemeOptions,\r\n  ThemeProvider,\r\n  createTheme,\r\n} from '@material-ui/core/styles';\r\nimport { createContext, useContext, useEffect, useState } from 'react';\r\nimport { darkTheme, lightTheme } from '../data/theme';\r\n\r\nimport cookie from 'js-cookie';\r\n\r\nconst themes: { light: ThemeOptions; dark: ThemeOptions } = {\r\n  light: lightTheme,\r\n  dark: darkTheme,\r\n};\r\n\r\nconst COOKIES_THEME_MODE = 'v1-theme-mode';\r\n\r\nconst getDefaultMode = (): PaletteMode => {\r\n  const presetCookiesThemeMode = cookie.get(COOKIES_THEME_MODE);\r\n\r\n  if (presetCookiesThemeMode) {\r\n    return presetCookiesThemeMode === 'dark' ? 'dark' : 'light';\r\n  }\r\n  const hours = new Date().getHours();\r\n\r\n  return hours >= 19 || hours <= 7 ? 'dark' : 'light';\r\n};\r\n\r\nconst getTheme = (mode: PaletteMode): Theme => {\r\n  return createTheme(themes[mode]);\r\n};\r\n\r\ninterface IAppThemeContext {\r\n  theme: Theme;\r\n  toggleMode: () => void;\r\n}\r\n\r\nconst defaultContext = {\r\n  theme: getTheme(getDefaultMode()),\r\n  toggleMode: () => {},\r\n};\r\n\r\nexport const AppThemeContext = createContext<IAppThemeContext>(defaultContext);\r\nAppThemeContext.displayName = 'AppThemeContext';\r\n\r\nexport const useAppTheme = () => {\r\n  return useContext(AppThemeContext);\r\n};\r\n\r\nfunction provideAppTheme(): IAppThemeContext {\r\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n  const [mode, setMode] = useState<PaletteMode>(getDefaultMode());\r\n  const [theme, setTheme] = useState<Theme>(getTheme(mode));\r\n\r\n  const toggleMode = () => {\r\n    setMode((previousMode) => {\r\n      const newMode = previousMode === 'dark' ? 'light' : 'dark';\r\n      cookie.set(COOKIES_THEME_MODE, newMode, {\r\n        expires: 7,\r\n      });\r\n      return newMode;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTheme(getTheme(mode));\r\n  }, [mode]);\r\n\r\n  useEffect(() => {\r\n    if (prefersDarkMode && !cookie.get(COOKIES_THEME_MODE)) {\r\n      setMode('dark');\r\n    }\r\n  }, [prefersDarkMode]);\r\n  return { theme: theme, toggleMode: toggleMode };\r\n}\r\n\r\ninterface IProvideAppThemeProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst ProvideAppTheme = ({ children }: IProvideAppThemeProps) => {\r\n  const themeContext = provideAppTheme();\r\n  return (\r\n    <AppThemeContext.Provider value={themeContext}>\r\n      <ThemeProvider theme={themeContext.theme}>{children}</ThemeProvider>\r\n    </AppThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ProvideAppTheme;\r\n","import {\r\n  AppBar,\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Stack,\r\n  Theme,\r\n  Toolbar,\r\n} from '@material-ui/core';\r\nimport React, { Fragment } from 'react';\r\n\r\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\r\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\r\nimport StyledIconButton from '../StyledIconButton';\r\nimport StyledNavLink from '../StyledNavLink';\r\nimport StyledTypography from '../StyledTypography';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport personalInfo from '../../data/personalInfo';\r\nimport routes from '../../data/routes';\r\nimport { useAppTheme } from '../../context/AppThemeContext';\r\nimport useBreakpoints from '../../hooks/useBreakpoints';\r\n\r\nconst { PUBLIC_URL } = process.env;\r\nconst indexLinks = routes.filter((link) => link.index);\r\nconst nonIndexLinks = routes.filter((link) => !link.index);\r\n\r\nconst ThemeToggler = ({ onClick }: { onClick?: () => void }) => {\r\n  const { theme, toggleMode } = useAppTheme();\r\n  const onToggleClick = async () => {\r\n    toggleMode();\r\n    if (onClick) {\r\n      onClick();\r\n    }\r\n  };\r\n  return (\r\n    <StyledIconButton onClick={onToggleClick}>\r\n      {theme.palette.mode === 'dark' && <WbSunnyIcon />}\r\n      {theme.palette.mode === 'light' && <NightsStayIcon />}\r\n    </StyledIconButton>\r\n  );\r\n};\r\n\r\nconst DesktopNavigation = () => {\r\n  return (\r\n    <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n      {indexLinks.map((indexLink) => (\r\n        <StyledNavLink\r\n          key={indexLink.label}\r\n          to={indexLink.path}\r\n          label={indexLink.label}\r\n          disableActiveStyle={true}>\r\n          <StyledTypography\r\n            variant=\"button\"\r\n            display=\"inline\"\r\n            bold={true}\r\n            capitalized={true}\r\n            spaced={true}\r\n            hoverEffect={true}>\r\n            {indexLink.label}\r\n          </StyledTypography>\r\n        </StyledNavLink>\r\n      ))}\r\n      {nonIndexLinks.map((nonIndexLink) => (\r\n        <Fragment key={nonIndexLink.label}>\r\n          <Divider orientation=\"vertical\" />\r\n          <StyledNavLink\r\n            exact\r\n            to={nonIndexLink.path}\r\n            label={nonIndexLink.label}>\r\n            <StyledTypography\r\n              variant=\"overline\"\r\n              display=\"inline\"\r\n              capitalized={true}\r\n              spaced={true}\r\n              hoverEffect={true}>\r\n              {nonIndexLink.label}\r\n            </StyledTypography>\r\n          </StyledNavLink>\r\n        </Fragment>\r\n      ))}\r\n      <ThemeToggler />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst MobileMenu = () => {\r\n  const [anchorElement, setAnchorElement] = React.useState<null | HTMLElement>(\r\n    null,\r\n  );\r\n  const isMenuOpen = Boolean(anchorElement);\r\n\r\n  const openMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorElement(event.currentTarget);\r\n  };\r\n\r\n  const onNavigationClick = () => {\r\n    setAnchorElement(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick={openMenuClick}>\r\n        <MenuRoundedIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorElement}\r\n        open={isMenuOpen}\r\n        onClose={onNavigationClick}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'basic-button',\r\n        }}>\r\n        {indexLinks.map((indexLink) => (\r\n          <StyledNavLink\r\n            exact\r\n            to={indexLink.path}\r\n            label={indexLink.label}\r\n            disableActiveStyle={true}\r\n            key={indexLink.label}>\r\n            <MenuItem onClick={onNavigationClick}>\r\n              <StyledTypography\r\n                variant=\"button\"\r\n                display=\"inline\"\r\n                bold={true}\r\n                capitalized={true}\r\n                spaced={true}\r\n                hoverEffect={true}>\r\n                {indexLink.label}\r\n              </StyledTypography>\r\n            </MenuItem>\r\n          </StyledNavLink>\r\n        ))}\r\n        <Divider orientation=\"horizontal\" variant=\"middle\" />\r\n        {nonIndexLinks.map((nonIndexLink) => (\r\n          <StyledNavLink\r\n            exact\r\n            to={nonIndexLink.path}\r\n            label={nonIndexLink.label}\r\n            key={nonIndexLink.label}>\r\n            <MenuItem onClick={onNavigationClick}>\r\n              <StyledTypography\r\n                variant=\"overline\"\r\n                display=\"inline\"\r\n                capitalized={true}\r\n                spaced={true}\r\n                hoverEffect={true}>\r\n                {nonIndexLink.label}\r\n              </StyledTypography>\r\n            </MenuItem>\r\n          </StyledNavLink>\r\n        ))}\r\n        <Divider orientation=\"horizontal\" variant=\"middle\" />\r\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\r\n          <ThemeToggler onClick={onNavigationClick} />\r\n        </Box>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nconst MobileNavigation = () => {\r\n  return (\r\n    <>\r\n      <StyledTypography\r\n        variant=\"button\"\r\n        bold={true}\r\n        capitalized={true}\r\n        spaced={true}\r\n        hoverEffect={true}\r\n        sx={{ flexGrow: 1 }}>\r\n        {personalInfo.fullName}\r\n      </StyledTypography>\r\n      <Box flexDirection=\"row-reverse\" sx={{ py: 1 }}>\r\n        <Avatar\r\n          src={`${PUBLIC_URL}/images/me.jpg`}\r\n          sx={{\r\n            width: 50,\r\n            height: 50,\r\n          }}>\r\n          N M\r\n        </Avatar>\r\n      </Box>\r\n      <MobileMenu />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Navigation = () => {\r\n  const { md: mdUp = true } = useBreakpoints('up');\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"sticky\"\r\n        variant=\"outlined\"\r\n        elevation={0}\r\n        sx={{\r\n          alignItems: mdUp ? 'center' : undefined,\r\n          // backgroundColor: (theme: Theme) => theme.palette.background.paper,\r\n          // color: (theme: Theme) => theme.palette.text.primary,\r\n          // borderBottom: (theme: Theme) =>\r\n          //   `1px solid ${theme.palette.grey[800]}`,\r\n        }}>\r\n        <Toolbar variant=\"dense\">\r\n          {!mdUp && <MobileNavigation />}\r\n          {mdUp && <DesktopNavigation />}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { Box, Container, Divider, Grid, Hidden } from '@material-ui/core';\r\nimport React, { ReactNode } from 'react';\r\n\r\nimport InfoBar from '../components/Template/InfoBar';\r\nimport Navigation from '../components/Template/Navigation';\r\nimport Sticky from 'react-stickynode';\r\nimport useBreakpoints from '../hooks/useBreakpoints';\r\n\r\ninterface IMainProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst Main = ({ children }: IMainProps) => {\r\n  const { scaleFactor } = useBreakpoints();\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <Box\r\n        sx={{\r\n          my: 6 / scaleFactor,\r\n        }}>\r\n        <Container>\r\n          <Grid container spacing={2}>\r\n            <Hidden mdDown>\r\n              <Grid item xs={12} md={5} lg={4}>\r\n                <Sticky top={98}>\r\n                  <InfoBar />\r\n                </Sticky>\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid item xs={12} md={7} lg={8}>\r\n              {children}\r\n            </Grid>\r\n            <Hidden mdUp>\r\n              <Grid item xs={12} md={5} lg={4}>\r\n                <Divider\r\n                  sx={{\r\n                    mb: 2,\r\n                  }}\r\n                />\r\n                <InfoBar />\r\n              </Grid>\r\n            </Hidden>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import PageContentLayout from '../layout/PageContentLayout';\r\nimport PageLayout from '../layout/PageLayout';\r\nimport React from 'react';\r\n\r\ninterface INotFoundProps {}\r\n\r\nconst NotFound = ({}: INotFoundProps) => {\r\n  const pageName = 'Not found';\r\n  return (\r\n    <>\r\n      <PageLayout title={pageName} description={pageName}>\r\n        <PageContentLayout header={'404'} subHeader={pageName}>\r\n          You seems to be landed on the Mars 😀\r\n        </PageContentLayout>\r\n      </PageLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","export interface IProject {\n  title: string;\n  description: string;\n  grade?: 'Enterprise' | 'Other',\n  technologies: string[]\n}\n\nconst projects: IProject[] = [\n  {\n    title: 'A4RE',\n    description: 'A networking app for the real-estate agents and a property search portal for the property seeker ranging from housing to industrial.',\n    grade: 'Other',\n    technologies: ['.NET CORE', 'Flutter', 'Azure', 'CosmosDB']\n  },\n  {\n    title: 'GITDB',\n    description: 'A web app for importing and analyzing millions of real-estate transactions from different vendors across the world for high level executives at the CBRE Inc.',\n    grade: 'Enterprise',\n    technologies: ['.NET', '.NET CORE', 'ASP.NET Web API 2.0', 'Angular', 'Azure', 'MS SQL']\n  },\n  {\n    title: 'ERIX',\n    description: \"A web app to monitor and predict future trends of various variables of the real-estate for the CBRE Inc.'s clients. \",\n    grade: 'Enterprise',\n    technologies: ['.NET', 'ASP.NET MVC', 'ASP.NET Web API 2.0', 'Angular', 'Azure', 'MS SQL']\n  },\n  {\n    title: 'CW Integration',\n    description: 'A multi-node integration application to synchronize data across the application topology of various CMS like MSD, SFDC, Yardi etc.',\n    grade: 'Enterprise',\n    technologies: ['.NET CORE', 'Azure']\n  },\n  {\n    title: 'Ticker',\n    description: `A multi-platform app to monitor connected car's driver's driving behaviour for Ticker Limited to provide optimal decision on insurance policy.`,\n    grade: 'Other',\n    technologies: ['Node.js', 'AWS', 'DynamoDB']\n  },\n  {\n    title: 'LOOM',\n    description: `A E-Com app for carpet products with ML integration to visualize carpet's realtime esthetic on targetted place.`,\n    grade: 'Other',\n    technologies: ['.NET CORE', 'Shopify', 'Azure']\n  },\n  {\n    title: 'PLUSX',\n    description: `A real-estate property management portal for the CBRE Inc.'s agents.`,\n    grade: 'Enterprise',\n    technologies: ['.NET', 'ASP.NET Web API 2.0', 'Angular', 'Azure', 'MS SQL']\n  },\n  {\n    title: 'SPINACH POS',\n    description: 'A POS software with h/w integration such as cash drawer for the restaurant outlets.',\n    grade: 'Other',\n    technologies: ['.NET', 'WPF', 'ASP.NET Web API', 'MS SQL']\n  },\n  {\n    title: 'Badge Us',\n    description: 'A mobile app for promoting to achieve more. '\n      + 'Badge Us is connected to your achievements in '\n      + 'academics, sports and social part of your the life.',\n    grade: 'Other',\n    technologies: ['.NET', 'ASP.NET Web API', 'MS SQL', 'iOS']\n  },\n  {\n    title: 'ShareExpense',\n    description: 'An application to manage expenses among the group based participating on the spent.',\n    grade: 'Other',\n    technologies: ['.NET', 'Windows Phone', 'ASP.NET Web API', 'MS SQL']\n  },\n  {\n    title: 'GoByMobile',\n    grade: 'Other',\n    description: 'An multi-platform application for searching and booking for the restaurant tables.',\n    technologies: ['.NET', 'ASP.NET MVC', 'ASP.NET Web API', 'MS SQL']\n  },\n  {\n    title: 'CHITRA',\n    description: 'A web app for managing appointments and tasks allocation of the handicapped children for the caregivers.',\n    grade: 'Other',\n    technologies: ['.NET', 'ASP.NET MVC', 'ASP.NET Web API', 'MS SQL']\n  },\n  {\n    title: 'CrowdFunding',\n    description: 'A web app for raising contributions for the innovative projects and social causes.',\n    grade: 'Other',\n    technologies: ['.NET', 'ASP.NET MVC', 'ASP.NET Web API 2.0', 'MS SQL']\n  },\n  {\n    title: 'MARS',\n    description: 'A back office application for various reportings for the ticket sell business for Viagogo.',\n    grade: 'Other',\n    technologies: ['WinForm', 'WCF', 'MS SQL']\n  },\n\n];\n\nexport default projects;","import { Box, Stack, Typography } from '@material-ui/core';\r\n\r\nimport { IProject } from '../../data/projects';\r\nimport React from 'react';\r\nimport StyledTypography from '../StyledTypography';\r\n\r\nconst Project = ({ title, technologies, description }: IProject) => {\r\n  return (\r\n    <>\r\n      <Stack spacing={1}>\r\n        <StyledTypography fontVariant=\"titleLight\" capitalized={true}>\r\n          {title}\r\n        </StyledTypography>\r\n        <Typography>{description}</Typography>\r\n        <Box display=\"inline\">\r\n          <Typography\r\n            variant=\"body2\"\r\n            display=\"inline\"\r\n            fontWeight=\"bold\"\r\n            color=\"text.disabled\"\r\n            component=\"span\">\r\n            HL Tech Stack:{' '}\r\n          </Typography>\r\n          <Typography variant=\"body2\" display=\"inline\">\r\n            {technologies.join(', ')}\r\n          </Typography>\r\n        </Box>\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React, { ReactNode } from 'react';\r\n\r\nimport { Stack } from '@material-ui/core';\r\nimport StyledTypography from './StyledTypography';\r\n\r\nexport interface IPageSectionLayoutProps {\r\n  id?: string;\r\n  title: ReactNode;\r\n  children: ReactNode;\r\n}\r\n\r\nconst PageSectionLayout = ({\r\n  title,\r\n  children,\r\n  id,\r\n}: IPageSectionLayoutProps) => (\r\n  <>\r\n    <Stack\r\n      spacing={2}\r\n      id={id}\r\n      sx={{\r\n        width: '100%',\r\n      }}>\r\n      {typeof title === 'string' && (\r\n        <StyledTypography\r\n          bold={true}\r\n          capitalized={true}\r\n          gutterBottom={true}\r\n          variant=\"body1\"\r\n          spaced={true}>\r\n          {title}\r\n        </StyledTypography>\r\n      )}\r\n      {typeof title !== 'string' && <>{title}</>}\r\n      {children}\r\n    </Stack>\r\n  </>\r\n);\r\n\r\nexport default PageSectionLayout;\r\n","import PageSectionLayout, {\r\n  IPageSectionLayoutProps,\r\n} from '../PageSectionLayout';\r\n\r\nimport React from 'react';\r\n\r\ninterface IProjectDetailsLayoutProps {}\r\n\r\nconst ProjectDetailsLayout = (\r\n  props: IProjectDetailsLayoutProps & IPageSectionLayoutProps,\r\n) => <PageSectionLayout {...props} />;\r\n\r\nexport default ProjectDetailsLayout;\r\n","import projects, { IProject } from '../../data/projects';\r\n\r\nimport Project from './Project';\r\nimport ProjectDetailsLayout from './ProjectDetailsLayout';\r\nimport React from 'react';\r\n\r\nconst WorkProjects = () => {\r\n  return (\r\n    <ProjectDetailsLayout title={<></>}>\r\n      {projects.map((project: IProject, index: number) => (\r\n        <Project key={`project-${index}`} {...project} />\r\n      ))}\r\n    </ProjectDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default WorkProjects;\r\n","import { Box, Stack, Typography } from '@material-ui/core';\r\nimport React, { ReactNode } from 'react';\r\n\r\nimport PageContentLayout from '../layout/PageContentLayout';\r\nimport PageLayout from '../layout/PageLayout';\r\nimport WorkProjects from '../components/Project/WorkProjects';\r\n\r\nconst sections: ReactNode[] = [<WorkProjects key=\"work-projects\" />];\r\n\r\ninterface IProjectsProps {}\r\n\r\nconst Projects = ({}: IProjectsProps) => {\r\n  const pageName = 'Projects';\r\n  return (\r\n    <>\r\n      <PageLayout title={pageName} description={pageName}>\r\n        <PageContentLayout\r\n          header={pageName}\r\n          subHeader=\"A selection of projects that I'm not too ashamed of\">\r\n          <Stack spacing={2}>\r\n            {sections.map((section: ReactNode, index: number) => (\r\n              <Box key={`projects-section-${index}`} display=\"flex\" pb={2}>\r\n                {section}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n          <Typography typography=\"body2\" color=\"text.disabled\">\r\n            (More projects are being added)\r\n          </Typography>\r\n        </PageContentLayout>\r\n      </PageLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","export interface ICertificate {\r\n    name: string;\r\n    issuer: string;\r\n    issuedOn: string;\r\n    verificationLink?: string;\r\n}\r\n\r\nconst certifications: ICertificate[] = [\r\n    {\r\n        name: 'AZ-204: Azure Developer Associate',\r\n        issuer: 'Microsoft',\r\n        issuedOn: 'Feb 2021',\r\n        verificationLink: 'https://www.youracclaim.com/badges/2d74d3fe-40bc-4062-a463-a06dfac18ff9',\r\n    },\r\n    {\r\n        name: 'Azure Solutions Architect Expert',\r\n        issuer: 'Microsoft',\r\n        issuedOn: 'July 2020',\r\n        verificationLink: 'https://www.youracclaim.com/badges/b3be7518-85cf-4008-bd1d-ab818b9f33ad',\r\n    },\r\n    {\r\n        name: 'AZ-301: Azure Architect Design',\r\n        issuer: 'Microsoft',\r\n        issuedOn: 'July 2020',\r\n        verificationLink: 'https://www.youracclaim.com/badges/6118e86e-0c1f-43e3-a017-34379741dd50',\r\n    },\r\n    {\r\n        name: 'AZ-300: Azure Architect Technologies',\r\n        issuer: 'Microsoft',\r\n        issuedOn: 'July 2020',\r\n        verificationLink: 'https://www.youracclaim.com/badges/181b7c56-c059-4fdd-b000-e7024dcf2f7a',\r\n    },\r\n    {\r\n        name: 'Certified ScrumMaster (CSM)',\r\n        issuer: 'Scrum Alliance',\r\n        issuedOn: 'November 2019'\r\n    },\r\n    {\r\n        name: ' Developing ASP.NET MVC Web Applications',\r\n        issuer: 'Microsoft',\r\n        issuedOn: 'September 2017',\r\n        verificationLink: 'https://www.youracclaim.com/badges/329a885a-1802-45e3-9b6c-970ac616348e',\r\n    },\r\n];\r\n\r\nexport default certifications;\r\n","import { Box, Stack } from '@material-ui/core';\r\n\r\nimport { ICertificate } from '../../../data/resume/certification';\r\nimport React from 'react';\r\nimport StyledLink from '../../StyledLink';\r\nimport StyledTypography from '../../StyledTypography';\r\nimport VerifiedSharpIcon from '@material-ui/icons/VerifiedSharp';\r\n\r\nconst Certificate = ({\r\n  name,\r\n  issuer,\r\n  issuedOn,\r\n  verificationLink,\r\n}: ICertificate) => {\r\n  return (\r\n    <>\r\n      <Box>\r\n        {verificationLink && (\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <StyledTypography fontVariant=\"titleLight\" capitalized={true}>\r\n              {name}\r\n            </StyledTypography>\r\n            <StyledLink to={verificationLink} label={name} target=\"_blank\">\r\n              <VerifiedSharpIcon\r\n                sx={{\r\n                  color: 'green',\r\n                }}\r\n              />\r\n            </StyledLink>\r\n          </Stack>\r\n        )}\r\n        {!verificationLink && (\r\n          <StyledTypography fontVariant=\"titleLight\" capitalized={true}>\r\n            {name}\r\n          </StyledTypography>\r\n        )}\r\n        <StyledTypography\r\n          fontVariant=\"subtitle\"\r\n          variant=\"overline\"\r\n          aria-label=\"subtitle\"\r\n          capitalized={true}>\r\n          {`${issuer} - ${issuedOn}`.toUpperCase()}\r\n        </StyledTypography>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Certificate;\r\n","import PageSectionLayout, {\r\n  IPageSectionLayoutProps,\r\n} from '../PageSectionLayout';\r\n\r\nimport React from 'react';\r\nimport StyledTypography from '../StyledTypography';\r\n\r\ninterface IResumeDetailsLayoutProps {}\r\n\r\nconst ResumeDetailsLayout = ({\r\n  title,\r\n  ...restProps\r\n}: IResumeDetailsLayoutProps & IPageSectionLayoutProps) => {\r\n  return (\r\n    <PageSectionLayout\r\n      title={\r\n        <>\r\n          {typeof title === 'string' && (\r\n            <StyledTypography\r\n              bold={true}\r\n              capitalized={true}\r\n              gutterBottom={true}\r\n              variant=\"body1\"\r\n              textAlign=\"center\"\r\n              spaced={true}>\r\n              {title}\r\n            </StyledTypography>\r\n          )}\r\n          {typeof title !== 'string' && <>{title}</>}\r\n        </>\r\n      }\r\n      {...restProps}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ResumeDetailsLayout;\r\n","import certifications, { ICertificate } from '../../data/resume/certification';\r\n\r\nimport Certificate from './Certifications/Certificate';\r\nimport React from 'react';\r\nimport ResumeDetailsLayout from './ResumeDetailsLayout';\r\n\r\nconst Experience = () => {\r\n  return (\r\n    <ResumeDetailsLayout title=\"Certifications\">\r\n      {certifications.map((certificate: ICertificate) => (\r\n        <Certificate key={certificate.name} {...certificate} />\r\n      ))}\r\n    </ResumeDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n","export interface IDegree {\r\n    school: string;\r\n    degree: string;\r\n    link: string;\r\n    fromYear: number;\r\n    toYear: number;\r\n}\r\n\r\nconst degrees: IDegree[] = [\r\n    {\r\n        school: 'Sardar Vallabhbhai Patel Institute Of Technology',\r\n        degree: 'Bachelor of Engineer - Information Technology',\r\n        link: 'https://svitvasad.ac.in/',\r\n        fromYear: 2008,\r\n        toYear: 2012,\r\n    },\r\n    {\r\n        school: 'Gujarat Secondary and Higher Secondary Education Board',\r\n        degree: 'Science',\r\n        link: 'http://www.gsebeservice.com/',\r\n        fromYear: 2006,\r\n        toYear: 2008,\r\n    },\r\n];\r\n\r\nexport default degrees;\r\n","import { Box, Typography } from '@material-ui/core';\r\n\r\nimport { IDegree } from '../../../data/resume/degree';\r\nimport React from 'react';\r\nimport StyledLink from '../../StyledLink';\r\nimport StyledTypography from '../../StyledTypography';\r\n\r\nconst Degree = ({ degree, school, link, toYear }: IDegree) => {\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Typography gutterBottom={false}>{degree}</Typography>\r\n        <Box style={{ display: 'inline' }}>\r\n          <StyledLink to={link} label={school} target=\"_blank\">\r\n            <StyledTypography\r\n              fontVariant=\"subtitle\"\r\n              variant=\"overline\"\r\n              aria-label=\"subtitle\"\r\n              capitalized={true}\r\n              hoverEffect={true}>\r\n              {school}\r\n            </StyledTypography>\r\n          </StyledLink>\r\n          <StyledTypography\r\n            fontVariant=\"subtitle\"\r\n            variant=\"overline\"\r\n            aria-label=\"subtitle\"\r\n            capitalized={true}>\r\n            , {toYear}\r\n          </StyledTypography>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Degree;\r\n","import degrees, { IDegree } from '../../data/resume/degree';\r\n\r\nimport Degree from './Education/Degree';\r\nimport React from 'react';\r\nimport ResumeDetailsLayout from './ResumeDetailsLayout';\r\n\r\nconst Education = () => {\r\n  return (\r\n    <ResumeDetailsLayout title=\"Education\">\r\n      {degrees.map((degree: IDegree) => (\r\n        <Degree key={degree.degree} {...degree} />\r\n      ))}\r\n    </ResumeDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default Education;\r\n","import { Box, Link, Typography } from '@material-ui/core';\r\n\r\nimport { IDegree } from '../../../data/resume/degree';\r\nimport { IJob } from '../../../data/resume/job';\r\nimport React from 'react';\r\nimport StyledLink from '../../StyledLink';\r\nimport StyledTypography from '../../StyledTypography';\r\n\r\nconst Job = ({ company, position, link, dateRange, points }: IJob) => {\r\n  return (\r\n    <>\r\n      <Box>\r\n        <StyledLink\r\n          to={link}\r\n          label={company}\r\n          target=\"_blank\"\r\n          bottomBorder={false}>\r\n          <StyledTypography fontVariant=\"titleLight\" capitalized={true}>\r\n            {`${company} - ${position}`.toUpperCase()}\r\n          </StyledTypography>\r\n        </StyledLink>\r\n        <StyledTypography\r\n          fontVariant=\"subtitle\"\r\n          variant=\"overline\"\r\n          aria-label=\"subtitle\"\r\n          capitalized={true}>\r\n          {dateRange}\r\n        </StyledTypography>\r\n        <ul\r\n          style={{\r\n            paddingInlineStart: 16,\r\n          }}>\r\n          {points.map((point, index) => (\r\n            <li key={`${company}-point-${index}`}>\r\n              <Typography>{point}</Typography>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Job;\r\n","import jobs, { IJob } from '../../data/resume/job';\r\n\r\nimport Job from './Experience/Job';\r\nimport React from 'react';\r\nimport ResumeDetailsLayout from './ResumeDetailsLayout';\r\n\r\nconst Experience = () => {\r\n  return (\r\n    <ResumeDetailsLayout title=\"Experience\">\r\n      {jobs.map((job: IJob, index: number) => (\r\n        <Job key={`${job.company}${index}`} {...job} />\r\n      ))}\r\n    </ResumeDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n","import React from 'react';\r\nimport ResumeDetailsLayout from './ResumeDetailsLayout';\r\nimport StyledNavLink from '../StyledNavLink';\r\nimport StyledTypography from '../StyledTypography';\r\n\r\nconst References = () => {\r\n  return (\r\n    <ResumeDetailsLayout\r\n      title={\r\n        <StyledNavLink to=\"/contact\" label=\"Available upon request.\">\r\n          <StyledTypography\r\n            bold={true}\r\n            capitalized={true}\r\n            variant=\"body1\"\r\n            textAlign=\"center\"\r\n            spaced={true}\r\n            hoverEffect={true}>\r\n            References available upon request\r\n          </StyledTypography>\r\n        </StyledNavLink>\r\n      }>\r\n      <></>\r\n    </ResumeDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default References;\r\n","export interface ISkill {\r\n    title: string;\r\n    competency: number;\r\n    categories: string[]\r\n}\r\n\r\nexport interface ICategory {\r\n    name: string;\r\n    color: string;\r\n}\r\n\r\nconst skills: ISkill[] = [\r\n    {\r\n        title: '.NET Framework',\r\n        competency: 4,\r\n        categories: ['Web Development', 'Framework', 'C#'],\r\n    },\r\n    {\r\n        title: '.NET Core',\r\n        competency: 3,\r\n        categories: ['Web Development', 'Framework', 'C#'],\r\n    },\r\n    {\r\n        title: 'C#',\r\n        competency: 4,\r\n        categories: ['Web Development', 'Languages', 'C#', 'Scripting'],\r\n    },\r\n    {\r\n        title: 'SQL',\r\n        competency: 3,\r\n        categories: ['Database', 'Languages', 'Scripting'],\r\n    },\r\n    {\r\n        title: 'MS SQL',\r\n        competency: 3,\r\n        categories: ['Database'],\r\n    },\r\n    {\r\n        title: 'CosmosDB',\r\n        competency: 4,\r\n        categories: ['Database'],\r\n    },\r\n    {\r\n        title: 'DynamoDB',\r\n        competency: 2,\r\n        categories: ['Database'],\r\n    },\r\n    {\r\n        title: 'Javascript',\r\n        competency: 4,\r\n        categories: ['Web Development', 'Languages', 'Javascript', 'Scripting'],\r\n    },\r\n    {\r\n        title: 'Node.js',\r\n        competency: 2,\r\n        categories: ['Web Development', 'Languages', 'Javascript'],\r\n    },\r\n    {\r\n        title: 'Jquery',\r\n        competency: 4,\r\n        categories: ['Web Development', 'Javascript'],\r\n    },\r\n    {\r\n        title: 'Knockout.js',\r\n        competency: 4,\r\n        categories: ['Web Development', 'Javascript'],\r\n    },\r\n    {\r\n        title: 'Angular',\r\n        competency: 4,\r\n        categories: ['Web Development', 'Javascript', 'Framework'],\r\n    },\r\n    {\r\n        title: 'React',\r\n        competency: 3,\r\n        categories: ['Web Development', 'Javascript'],\r\n    },\r\n    {\r\n        title: 'Typescript',\r\n        competency: 3,\r\n        categories: ['Web Development', 'Languages', 'Javascript'],\r\n    },\r\n    {\r\n        title: 'Azure',\r\n        competency: 4,\r\n        categories: ['Cloud'],\r\n    },\r\n    {\r\n        title: 'AWS',\r\n        competency: 2,\r\n        categories: ['Cloud'],\r\n    },\r\n    {\r\n        title: 'ADO',\r\n        competency: 4,\r\n        categories: ['Tools', 'SCM'],\r\n    },\r\n    {\r\n        title: 'TFS',\r\n        competency: 4,\r\n        categories: ['Tools', 'SCM'],\r\n    },\r\n    {\r\n        title: 'Github',\r\n        competency: 3,\r\n        categories: ['Tools', 'SCM'],\r\n    },\r\n    {\r\n        title: 'Bitbucket',\r\n        competency: 2,\r\n        categories: ['Tools', 'SCM'],\r\n    },\r\n    {\r\n        title: 'Terraform',\r\n        competency: 3,\r\n        categories: ['IaC'],\r\n    },\r\n    {\r\n        title: 'Serverless',\r\n        competency: 3,\r\n        categories: ['IaC'],\r\n    },\r\n    {\r\n        title: 'AWS CDK',\r\n        competency: 2,\r\n        categories: ['IaC'],\r\n    },\r\n    {\r\n        title: 'Pulumi',\r\n        competency: 2,\r\n        categories: ['IaC'],\r\n    },\r\n    {\r\n        title: 'Azure Functions',\r\n        competency: 4,\r\n        categories: ['Serverless'],\r\n    },\r\n    {\r\n        title: 'AWS Lambda',\r\n        competency: 3,\r\n        categories: ['Serverless'],\r\n    },\r\n    {\r\n        title: 'Logic App',\r\n        competency: 3,\r\n        categories: ['Serverless'],\r\n    },\r\n    {\r\n        title: 'ASP.NET MVC + CORE',\r\n        competency: 4,\r\n        categories: ['Web Development', 'C#', 'Framework'],\r\n    },\r\n    {\r\n        title: 'ASP.NET MVC Web API + CORE',\r\n        competency: 4,\r\n        categories: ['Web Development', 'C#', 'Framework'],\r\n    },\r\n    {\r\n        title: 'Shopify - Liquid',\r\n        competency: 3,\r\n        categories: ['Web Development', 'Framework'],\r\n    },\r\n].map((skill) => ({ ...skill, categories: skill.categories.sort() }));\r\n\r\n// this is a list of colors that I like. The length should be == to the\r\n// number of categories. Re-arrange this list until you find a pattern you like.\r\nconst colors = [\r\n    '#6968b3',\r\n    '#37b1f5',\r\n    '#40494e',\r\n    '#515dd4',\r\n    '#e47272',\r\n    '#cc7b94',\r\n    '#3896e2',\r\n    '#c3423f',\r\n    '#d75858',\r\n    '#747fff',\r\n    '#64cb7b',\r\n];\r\n\r\nconst categories: ICategory[] = [\r\n    ...new Set(skills.reduce<string[]>((acc, { categories }) => acc.concat(categories), [])),\r\n]\r\n    .sort()\r\n    .map((category) => ({\r\n        name: category,\r\n        color: colors[Math.floor(Math.random() * colors.length)],\r\n    }));\r\n\r\nexport { categories, skills };","import { Box, Button, ButtonProps, Theme, styled } from '@material-ui/core';\r\nimport { ICategory, ISkill } from '../../../data/resume/skills';\r\n\r\nimport React from 'react';\r\nimport StyledButton from '../../StyledButton';\r\nimport StyledTypography from '../../StyledTypography';\r\nimport useBreakpoints from '../../../hooks/useBreakpoints';\r\n\r\nconst StyledButtonX = styled(StyledButton)<ButtonProps>(({ theme }) => {\r\n  return {\r\n    padding: `${theme.spacing(1)} ${theme.spacing(1)}`,\r\n    borderColor: 'transparent',\r\n  };\r\n});\r\n\r\ninterface ICategoryButtonProps {\r\n  label: string;\r\n  handleClick: (label: string) => void;\r\n  isActive: boolean;\r\n}\r\n\r\nconst Category = ({ label, handleClick, isActive }: ICategoryButtonProps) => {\r\n  const { sm } = useBreakpoints();\r\n  const onClick = () => {\r\n    handleClick(label);\r\n  };\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          m: sm ? 0 : 1 / 2,\r\n        }}>\r\n        <StyledButtonX\r\n          onClick={onClick}\r\n          sx={{\r\n            ...(isActive\r\n              ? {\r\n                  color: (theme: Theme) => theme.palette.primary.main,\r\n                  borderColor: (theme: Theme) => theme.palette.primary.main,\r\n                }\r\n              : {}),\r\n          }}>\r\n          <StyledTypography\r\n            fontVariant=\"titleLight\"\r\n            capitalized={true}\r\n            bold={true}>\r\n            {label}\r\n          </StyledTypography>\r\n        </StyledButtonX>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import {\r\n  Box,\r\n  CircularProgress,\r\n  Stack,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { ICategory, ISkill } from '../../../data/resume/skills';\r\n\r\nimport React from 'react';\r\n\r\nconst CompetencyIndicator = ({\r\n  value,\r\n  color,\r\n  label,\r\n}: {\r\n  value: number;\r\n  color: string;\r\n  label: string;\r\n}) => {\r\n  return (\r\n    <Box sx={{ position: 'relative' }}>\r\n      <CircularProgress\r\n        value={value}\r\n        variant=\"determinate\"\r\n        sx={{\r\n          color: color,\r\n        }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          top: 0,\r\n          left: 0,\r\n          bottom: 0,\r\n          right: 0,\r\n          position: 'absolute',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}>\r\n        <Typography variant=\"caption\" component=\"div\" color=\"text.secondary\">\r\n          {label || value}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\ninterface ISkillBadgeProps {\r\n  data: ISkill;\r\n  categories: ICategory[];\r\n}\r\n\r\nconst SkillBadge = ({ data, categories }: ISkillBadgeProps) => {\r\n  const { categories: skillCategories, competency, title } = data;\r\n  const skillColor = categories\r\n    .filter((cat) => skillCategories.includes(cat.name))\r\n    .map((cat) => cat.color)[0];\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          p: 1,\r\n          border: (theme: Theme) => `1px solid ${theme.palette.grey[300]}`,\r\n          borderRadius: 3,\r\n          height: '100%',\r\n        }}>\r\n        <Stack alignItems=\"center\" textAlign=\"center\">\r\n          <CompetencyIndicator\r\n            value={(competency / 5.0) * 100.0}\r\n            color={skillColor}\r\n            label={`${competency}/5`}\r\n          />\r\n          <Typography variant=\"body2\">{title}</Typography>\r\n        </Stack>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SkillBadge;\r\n","import { ImageList, ImageListItem, Stack, Typography } from '@material-ui/core';\r\nimport { categories, skills } from '../../data/resume/skills';\r\n\r\nimport Category from './Skills/Category';\r\nimport React from 'react';\r\nimport ResumeDetailsLayout from './ResumeDetailsLayout';\r\nimport SkillBadge from './Skills/SkillBadge';\r\nimport useBreakpoints from '../../hooks/useBreakpoints';\r\nimport { useState } from 'react';\r\n\r\ninterface ICategories {\r\n  All: boolean;\r\n  [key: string]: boolean;\r\n}\r\n\r\ninterface ISkillsState {\r\n  categories: ICategories;\r\n  selectedSkill: string;\r\n}\r\n\r\nconst Skills = () => {\r\n  const { sm } = useBreakpoints();\r\n  const [state, setState] = useState<ISkillsState>({\r\n    categories: categories\r\n      .map((cat) => cat.name)\r\n      .reduce<ICategories>(\r\n        (obj, key) => ({\r\n          ...obj,\r\n          [key]: false,\r\n        }),\r\n        { All: true },\r\n      ),\r\n    selectedSkill: 'All',\r\n  });\r\n\r\n  const getSkillBadges = () => {\r\n    // search for true active categories\r\n    const actCat = Object.keys(state.categories).reduce(\r\n      (cat, key) => (state.categories[key] ? key : cat),\r\n      'All',\r\n    );\r\n\r\n    return skills\r\n      .sort((a, b) => {\r\n        let ret = 0;\r\n        if (a.competency > b.competency) ret = -1;\r\n        else if (a.competency < b.competency) ret = 1;\r\n        else if (a.categories[0] > b.categories[0]) ret = -1;\r\n        else if (a.categories[0] < b.categories[0]) ret = 1;\r\n        else if (a.title > b.title) ret = 1;\r\n        else if (a.title < b.title) ret = -1;\r\n        return ret;\r\n      })\r\n      .filter((skill) => actCat === 'All' || skill.categories.includes(actCat))\r\n      .map((skill) => (\r\n        <ImageListItem key={skill.title}>\r\n          <SkillBadge categories={categories} data={skill} />\r\n        </ImageListItem>\r\n      ));\r\n  };\r\n\r\n  const getCategories = () => {\r\n    return Object.keys(state.categories).map((key) => (\r\n      <Category\r\n        label={key}\r\n        key={key}\r\n        isActive={state.selectedSkill === key}\r\n        handleClick={handleChildClick}\r\n      />\r\n    ));\r\n  };\r\n\r\n  const handleChildClick = (label: string) => {\r\n    setState((prevState: ISkillsState) => {\r\n      // Toggle button that was clicked. Turn all other buttons off.\r\n      const buttons = Object.keys(prevState.categories).reduce<ICategories>(\r\n        (obj, key) => ({\r\n          ...obj,\r\n          [key]: label === key && !prevState.categories[key],\r\n        }),\r\n        { All: false },\r\n      );\r\n      // Turn on 'All' button if other buttons are off\r\n      buttons.All = !Object.keys(prevState.categories).some(\r\n        (key) => buttons[key],\r\n      );\r\n      return {\r\n        ...prevState,\r\n        ...{ categories: buttons, selectedSkill: buttons.All ? 'All' : label },\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ResumeDetailsLayout title=\"Skills\">\r\n      <Typography color=\"text.disabled\" variant=\"body2\" textAlign=\"center\">\r\n        Note: I think these sections are silly, but everyone seems to have one.\r\n        Here is a *mostly* honest overview of my skills.\r\n      </Typography>\r\n      <Stack\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        sx={{\r\n          flexWrap: 'wrap',\r\n        }}>\r\n        {getCategories()}\r\n      </Stack>\r\n      <ImageList cols={sm ? 2 : 3}>{getSkillBadges()}</ImageList>\r\n      <Typography typography=\"body2\" color=\"text.disabled\" textAlign=\"center\">\r\n        (Skills are being refined)\r\n      </Typography>\r\n    </ResumeDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React from 'react';\r\nimport ResumeDetailsLayout from './ResumeDetailsLayout';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst Summary = () => {\r\n  return (\r\n    <>\r\n      <ResumeDetailsLayout title=\"Summary\">\r\n        <Typography>\r\n          Self-directed, insight-oriented, Technical Architect/Software Engineer\r\n          and CSM with an excellent experience of 9+ years in e2e authoring\r\n          solutions and leading teams towards complex and dynamic applications\r\n          including early discovery, designing, developing, analyzing, and\r\n          implementing in cloud technologies like Azure with modern stacks and\r\n          best practices.\r\n        </Typography>\r\n        <Typography>\r\n          Demonstrating strong critical thinking, decision making, problem\r\n          solving, time management and multi-tasking.\r\n        </Typography>\r\n      </ResumeDetailsLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n","import { Box, Stack } from '@material-ui/core';\r\n\r\nimport Certifications from '../components/Resume/Certifications';\r\nimport Education from '../components/Resume/Education';\r\nimport Experience from '../components/Resume/Experience';\r\nimport PageContentLayout from '../layout/PageContentLayout';\r\nimport PageLayout from '../layout/PageLayout';\r\nimport React from 'react';\r\nimport { ReactNode } from 'react';\r\nimport References from '../components/Resume/References';\r\nimport Skills from '../components/Resume/Skills';\r\nimport StyledTypography from '../components/StyledTypography';\r\nimport Summary from '../components/Resume/Summary';\r\nimport useBreakpoints from '../hooks/useBreakpoints';\r\n\r\ninterface Section {\r\n  title: string;\r\n  details: ReactNode;\r\n}\r\nconst sections: Section[] = [\r\n  {\r\n    title: 'Summary',\r\n    details: <Summary />,\r\n  },\r\n  {\r\n    title: 'Education',\r\n    details: <Education />,\r\n  },\r\n  {\r\n    title: 'Experience',\r\n    details: <Experience />,\r\n  },\r\n  {\r\n    title: 'Skills',\r\n    details: <Skills />,\r\n  },\r\n  {\r\n    title: 'Certifications',\r\n    details: <Certifications />,\r\n  },\r\n  {\r\n    title: 'References',\r\n    details: <References />,\r\n  },\r\n];\r\n\r\nconst ResumeNavigation = () => {\r\n  const { sm } = useBreakpoints();\r\n\r\n  const scrollTo = (elementId: string) => {\r\n    var timeoutRef = setTimeout(() => {\r\n      document\r\n        .getElementById(elementId.toLowerCase())\r\n        ?.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n      clearTimeout(timeoutRef);\r\n    }, 100);\r\n  };\r\n\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      justifyContent={sm ? 'center' : undefined}\r\n      sx={{\r\n        flexWrap: 'wrap',\r\n      }}>\r\n      {sections.map((section: Section) => (\r\n        <StyledTypography\r\n          key={section.title}\r\n          bold={true}\r\n          capitalized={true}\r\n          hoverEffect={true}\r\n          variant=\"overline\"\r\n          mr={2}\r\n          onClick={() => {\r\n            scrollTo(section.title);\r\n          }}>\r\n          {section.title}\r\n        </StyledTypography>\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\ninterface IResumeProps {}\r\n\r\nconst Resume = ({}: IResumeProps) => {\r\n  const pageName = 'Resume';\r\n  return (\r\n    <>\r\n      <PageLayout title={pageName} description={pageName}>\r\n        <PageContentLayout header={pageName} subHeader={<ResumeNavigation />}>\r\n          <Stack spacing={2}>\r\n            {sections.map((section: Section) => (\r\n              <Box\r\n                key={section.title}\r\n                display=\"flex\"\r\n                pb={2}\r\n                id={section.title.toLowerCase()}>\r\n                {section.details}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        </PageContentLayout>\r\n      </PageLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Resume;\r\n","import PageSectionLayout, {\r\n  IPageSectionLayoutProps,\r\n} from '../PageSectionLayout';\r\n\r\nimport React from 'react';\r\n\r\ninterface IStatsDetailsLayoutProps {}\r\n\r\nconst StatsDetailsLayout = (\r\n  props: IStatsDetailsLayoutProps & IPageSectionLayoutProps,\r\n) => <PageSectionLayout {...props} />;\r\n\r\nexport default StatsDetailsLayout;\r\n","import {\n  CircularProgress,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from '@material-ui/core';\nimport React, { ReactNode } from 'react';\n\nimport { IStats } from '../../data/stats/stats';\nimport StyledLink from '../StyledLink';\n\ninterface IStatsRowProps {\n  label: string;\n  value?: any;\n  link?: string;\n  format?: (value: any) => ReactNode;\n}\n\nconst StatsRow = ({\n  label,\n  link,\n  value,\n  format = (value) => value,\n}: IStatsRowProps) => (\n  <TableRow>\n    <TableCell sx={{ width: '50%' }}>{label}</TableCell>\n    <TableCell sx={{ width: '50%' }}>\n      {link ? (\n        <StyledLink to={link} label={format(value) || value}></StyledLink>\n      ) : (\n        format(value) || <CircularProgress size={16} />\n      )}\n    </TableCell>\n  </TableRow>\n);\n\ninterface IStatsTableProps {\n  stats: IStats[];\n}\n\nconst StatsTable = ({ stats }: IStatsTableProps) => (\n  <TableContainer>\n    <Table>\n      <TableBody>\n        {stats.map((stat: IStats) => (\n          <StatsRow\n            format={stat.format}\n            key={stat.label}\n            label={stat.label}\n            link={stat.link}\n            value={stat.value}\n          />\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>\n);\n\nexport default StatsTable;\n","import React, { useEffect, useState } from 'react';\r\n\r\ninterface IAgeProps {\r\n  birthDate: Date;\r\n}\r\n\r\nconst Age = ({ birthDate }: IAgeProps) => {\r\n  const [age, setAge] = useState<string>();\r\n\r\n  const tick = () => {\r\n    const divisor = 1000 * 60 * 60 * 24 * 365.2421897;\r\n    const birthTime = birthDate.getTime();\r\n    setAge(((Date.now() - birthTime) / divisor).toFixed(11));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => tick(), 25);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return <>{age}</>;\r\n};\r\n\r\nexport default Age;\r\n","import { utcToZonedTime } from 'date-fns-tz';\r\n\r\nconst BROWSER_TIMEZONE = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n\r\nexport const toLocalDate = (date: Date | string | number): Date => {\r\n    return utcToZonedTime(\r\n        date, BROWSER_TIMEZONE,\r\n    )\r\n}","import React, { ReactNode } from 'react';\r\n\r\nimport Age from '../../components/Stats/Age';\r\nimport { format } from 'date-fns';\r\nimport { toLocalDate } from '../../utils/dateTimeUtil';\r\n\r\nexport interface IStats {\r\n  key: string;\r\n  label: string;\r\n  value?: ReactNode;\r\n  link?: string;\r\n  format?: (value: any) => ReactNode;\r\n}\r\n\r\nconst personalStats: IStats[] = [\r\n  {\r\n    key: 'age',\r\n    label: 'Current age',\r\n    value: <Age birthDate={new Date('1990-10-21T12:05:00')} />,\r\n  },\r\n  {\r\n    key: 'location',\r\n    label: 'Current city',\r\n    value: 'Surat, Gujarat, India',\r\n  },\r\n];\r\n\r\nconst siteStats: IStats[] = [\r\n  // {\r\n  //   label: 'Stars this repository has on github',\r\n  //   key: 'stargazers_count',\r\n  //   link: 'https://github.com/NileshMoradiya/personal-site-private/stargazers',\r\n  // },\r\n  // {\r\n  //   label: 'Number of people watching this repository',\r\n  //   key: 'subscribers_count',\r\n  //   link: 'https://github.com/NileshMoradiya/personal-site-private/stargazers',\r\n  // },\r\n  // {\r\n  //   label: 'Number of forks',\r\n  //   key: 'forks',\r\n  //   link: 'https://github.com/NileshMoradiya/personal-site-private/network',\r\n  // },\r\n  // {\r\n  //   key: 'numberOfSpoons',\r\n  //   label: 'Number of spoons',\r\n  //   value: '0',\r\n  // },\r\n  // {\r\n  //   key: 'numberOfLintWarning',\r\n  //   label: 'Number of linter warnings',\r\n  //   value: '0', // enforced via github workflow\r\n  // },\r\n  // {\r\n  //   label: 'Open github issues',\r\n  //   key: 'open_issues_count',\r\n  //   link: 'https://github.com/NileshMoradiya/personal-site-private/issues',\r\n  // },\r\n  {\r\n    label: 'Last updated at',\r\n    key: 'pushed_at',\r\n    // link: 'https://github.com/NileshMoradiya/personal-site-private/commits',\r\n    format: (x: Date) => {\r\n      return x ? format(toLocalDate(x), 'MMM do, yyyy HH:mm:ss') : x;\r\n    },\r\n  },\r\n  //  {\r\n  //    // TODO update this with a pre-commit hook\r\n  /* find . | grep \".js\" | grep -vE \".min.js|node_modules|.git|.json\" |\r\n      xargs -I file cat file | wc -l */\r\n  //    label: 'Lines of Javascript powering this website',\r\n  //    key: 'numberOfLines',\r\n  //    value: '2115',\r\n  //    link: 'https://github.com/NileshMoradiya/personal-site-private/graphs/contributors',\r\n  //  },\r\n];\r\n\r\nconst siteStatsApiUrl =\r\n  'https://api.github.com/repos/NileshMoradiya/personal-site';\r\nexport { personalStats, siteStats, siteStatsApiUrl };\r\n","import React from 'react';\r\nimport StatsDetailsLayout from './StatsDetailsLayout';\r\nimport StatsTable from './StatsTable';\r\nimport { personalStats } from '../../data/stats/stats';\r\n\r\nconst PersonalStats = () => {\r\n  return (\r\n    <StatsDetailsLayout title=\"Some stats about me\">\r\n      <StatsTable stats={personalStats} />\r\n    </StatsDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default PersonalStats;\r\n","import {\r\n  IStats,\r\n  siteStats as initialData,\r\n  siteStatsApiUrl,\r\n} from '../../data/stats/stats';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\n\r\nimport StatsDetailsLayout from './StatsDetailsLayout';\r\nimport StatsTable from './StatsTable';\r\n\r\nconst SiteStats = () => {\r\n  const [siteStats, setSiteStats] = useState<IStats[]>(initialData);\r\n  // TODO think about persisting this somewhere\r\n  const fetchData = useCallback(async () => {\r\n    // request must be authenticated if private\r\n    const res = await fetch(siteStatsApiUrl, {\r\n      cache: 'reload',\r\n    });\r\n    const resData = await res.json();\r\n    setSiteStats(\r\n      initialData.map((field) => ({\r\n        ...field,\r\n        value: Object.keys(resData).includes(field.key)\r\n          ? resData[field.key]\r\n          : field.value,\r\n      })),\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return (\r\n    <StatsDetailsLayout title=\"Some stats about this site\">\r\n      <StatsTable stats={siteStats} />\r\n    </StatsDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default SiteStats;\r\n","import { Box, Stack } from '@material-ui/core';\r\nimport React, { ReactNode } from 'react';\r\n\r\nimport PageContentLayout from '../layout/PageContentLayout';\r\nimport PageLayout from '../layout/PageLayout';\r\nimport PersonalStats from '../components/Stats/PersonalStats';\r\nimport SiteStats from '../components/Stats/SiteStats';\r\n\r\nconst sections: ReactNode[] = [\r\n  <PersonalStats key=\"personal-stats\" />,\r\n  <SiteStats key=\"site-stats\" />,\r\n];\r\n\r\ninterface IStatsProps {}\r\n\r\nconst Stats = ({}: IStatsProps) => {\r\n  const pageName = 'Stats';\r\n  return (\r\n    <>\r\n      <PageLayout title={pageName} description={pageName}>\r\n        <PageContentLayout header={pageName}>\r\n          <Stack spacing={2}>\r\n            {sections.map((section: ReactNode, index: number) => (\r\n              <Box key={`stats-section-${index}`} display=\"flex\" pb={2}>\r\n                {section}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        </PageContentLayout>\r\n      </PageLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import './App.css';\n\nimport { BrowserRouter, Route, Switch, useLocation } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport About from './pages/About';\nimport Analytics from './components/Template/Analytics';\nimport Contact from './pages/Contact';\nimport { CssBaseline } from '@material-ui/core';\nimport { HelmetProvider } from 'react-helmet-async';\nimport Home from './pages/Home';\nimport Main from './layout/Main';\nimport NotFound from './pages/NotFound';\nimport { PageContentLayoutPlaceholder } from './layout/PageContentLayout'; // fallback for lazy pages\nimport Projects from './pages/Projects';\nimport ProvideAppTheme from './context/AppThemeContext';\nimport React from 'react'; // , { Suspense, lazy }\nimport Resume from './pages/Resume';\nimport Stats from './pages/Stats';\nimport { StyledEngineProvider } from '@material-ui/core/styles';\n\nconst { PUBLIC_URL } = process.env;\n\n// const Home from './pages/Home'));\n// const About from './pages/About'));\n// const Resume from './pages/Resume'));\n// const Projects from './pages/Projects'));\n// const Stats from './pages/Stats'));\n// const Contact from './pages/Contact'));\n// const NotFound from './pages/NotFound'));\n\nconst AppModule = () => {\n  const location = useLocation();\n  return (\n    <>\n      <HelmetProvider>\n        <Analytics />\n        <Main>\n          <TransitionGroup>\n            <CSSTransition\n              timeout={300}\n              classNames=\"route-nav\"\n              key={location.pathname}>\n              {/* <Suspense fallback={<PageContentLayoutPlaceholder />}> */}\n              <Switch location={location}>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/resume\" component={Resume} />\n                <Route path=\"/projects\" component={Projects} />\n                <Route path=\"/stats\" component={Stats} />\n                <Route path=\"/contact\" component={Contact} />\n                <Route path=\"/plhl\" component={PageContentLayoutPlaceholder} />\n                <Route path=\"*\" component={NotFound} />\n              </Switch>\n              {/* </Suspense> */}\n            </CSSTransition>\n          </TransitionGroup>\n        </Main>\n      </HelmetProvider>\n    </>\n  );\n};\n\nconst App = () => {\n  return (\n    <>\n      <ProvideAppTheme>\n        <CssBaseline>\n          <StyledEngineProvider injectFirst>\n            <BrowserRouter basename={PUBLIC_URL}>\n              <AppModule />\n            </BrowserRouter>\n          </StyledEngineProvider>\n        </CssBaseline>\n      </ProvideAppTheme>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { hydrate, render } from 'react-dom';\n\nimport App from './App';\nimport React from 'react';\nimport reportWebVitals from './reportWebVitals';\n\nconst StrictApp = () => (\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nconst rootElement = document.getElementById('root');\n\nif (rootElement?.hasChildNodes()) {\n  hydrate(<StrictApp />, rootElement);\n} else {\n  render(<StrictApp />, rootElement);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}