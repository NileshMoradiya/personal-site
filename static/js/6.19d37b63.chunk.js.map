{"version":3,"sources":["components/Template/ScrollToTop.tsx","layout/PageLayout.tsx","components/PageSectionLayout.tsx","data/resume/certification.ts","components/Resume/Certifications/Certificate.tsx","components/Resume/ResumeDetailsLayout.tsx","components/Resume/Certifications.tsx","data/resume/degree.ts","components/Resume/Education/Degree.tsx","components/Resume/Education.tsx","components/Parser/LinkParser.tsx","components/Parser/TextParser.tsx","components/Resume/Experience/Job.tsx","components/Resume/Experience.tsx","components/Resume/References.tsx","data/resume/skills.ts","components/Resume/Skills/Category.tsx","components/Resume/Skills/SkillBadge.tsx","components/Resume/Skills.tsx","components/Resume/Summary.tsx","pages/Resume.tsx"],"names":["ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","PageLayout","title","description","enableTitleTemplate","children","titleTemplate","personalInfo","fullName","defer","name","content","PageSectionLayout","id","spacing","sx","width","bold","capitalized","gutterBottom","variant","spaced","certifications","issuer","issuedOn","verificationLink","Certificate","Box","Stack","direction","alignItems","StyledTypography","fontVariant","StyledLink","to","label","target","color","toUpperCase","ResumeDetailsLayout","restProps","textAlign","Experience","map","certificate","degrees","school","degree","link","fromYear","toYear","Degree","Typography","style","display","hoverEffect","Education","LinkParser","href","useState","setLink","properLink","startsWith","DEFAULT_LINK_PROPS","TextParser","linkProps","previewText","setPreviewText","finalOutput","replace","bindings","components","jsx","renderInWrapper","autoCloseVoidElements","Job","company","position","dateRange","points","bottomBorder","paddingInlineStart","point","index","component","jobs","job","References","StyledNavLink","skills","competency","categories","skill","sort","colors","Set","reduce","acc","concat","category","Math","floor","random","length","StyledButtonX","styled","StyledButton","theme","padding","borderColor","Category","handleClick","isActive","sm","useBreakpoints","m","onClick","palette","primary","main","CompetencyIndicator","value","CircularProgress","top","left","bottom","right","justifyContent","SkillBadge","data","skillCategories","skillColor","filter","cat","includes","p","border","grey","borderRadius","height","Skills","md","lg","cols","obj","key","All","selectedSkill","state","setState","handleChildClick","prevState","buttons","Object","keys","some","flexWrap","ImageList","actCat","a","b","ret","ImageListItem","Zoom","in","getSkillBadges","typography","Summary","sections","details","Certifications","ResumeNavigation","section","mr","elementId","clientTopPosition","document","getElementById","toLowerCase","getBoundingClientRect","behavior","Resume","pageName","PageContentLayout","header","headerProps","subHeader","MotionContainerStack","open","initial","motion","div","variants","getVariant"],"mappings":"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","file":"static/js/6.19d37b63.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n// See https://reacttraining.com/react-router/web/guides/scroll-restoration/scroll-to-top\r\nconst ScrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React, { ReactNode } from 'react';\r\n\r\nimport { Helmet } from 'react-helmet-async';\r\nimport ScrollToTop from '../components/Template/ScrollToTop';\r\nimport personalInfo from '../data/personalInfo';\r\n\r\ninterface IPageProps {\r\n  title: string;\r\n  description: string;\r\n  enableTitleTemplate?: boolean;\r\n  children: ReactNode;\r\n}\r\n\r\nconst PageLayout = ({\r\n  title,\r\n  description,\r\n  enableTitleTemplate = true,\r\n  children,\r\n}: IPageProps) => (\r\n  <>\r\n    <ScrollToTop />\r\n    <Helmet\r\n      titleTemplate={\r\n        enableTitleTemplate ? `%s | ${personalInfo.fullName}` : title\r\n      }\r\n      defer={false}>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </>\r\n);\r\n\r\nexport default PageLayout;\r\n","import React, { ReactNode } from 'react';\r\n\r\nimport { Stack } from '@mui/material';\r\nimport StyledTypography from './StyledTypography';\r\n\r\nexport interface IPageSectionLayoutProps {\r\n  id?: string;\r\n  title: ReactNode;\r\n  children: ReactNode;\r\n}\r\n\r\nconst PageSectionLayout = ({\r\n  title,\r\n  children,\r\n  id,\r\n}: IPageSectionLayoutProps) => (\r\n  <>\r\n    <Stack\r\n      spacing={2}\r\n      id={id}\r\n      sx={{\r\n        width: '100%',\r\n      }}>\r\n      {typeof title === 'string' && (\r\n        <StyledTypography\r\n          bold={true}\r\n          capitalized={true}\r\n          gutterBottom={true}\r\n          variant=\"body1\"\r\n          spaced={true}>\r\n          {title}\r\n        </StyledTypography>\r\n      )}\r\n      {typeof title !== 'string' && <>{title}</>}\r\n      {children}\r\n    </Stack>\r\n  </>\r\n);\r\n\r\nexport default PageSectionLayout;\r\n","export interface ICertificate {\r\n    name: string;\r\n    issuer: string;\r\n    issuedOn: string;\r\n    verificationLink?: string;\r\n}\r\n\r\nconst certifications: ICertificate[] = [\r\n    {\r\n        name: 'AZ-204: Azure Developer Associate',\r\n        issuer: 'Microsoft',\r\n        issuedOn: 'Feb 2021',\r\n        verificationLink: 'https://www.youracclaim.com/badges/2d74d3fe-40bc-4062-a463-a06dfac18ff9',\r\n    },\r\n    {\r\n        name: 'Azure Solutions Architect Expert',\r\n        issuer: 'Microsoft',\r\n        issuedOn: 'July 2020',\r\n        verificationLink: 'https://www.youracclaim.com/badges/b3be7518-85cf-4008-bd1d-ab818b9f33ad',\r\n    },\r\n    {\r\n        name: 'AZ-301: Azure Architect Design',\r\n        issuer: 'Microsoft',\r\n        issuedOn: 'July 2020',\r\n        verificationLink: 'https://www.youracclaim.com/badges/6118e86e-0c1f-43e3-a017-34379741dd50',\r\n    },\r\n    {\r\n        name: 'AZ-300: Azure Architect Technologies',\r\n        issuer: 'Microsoft',\r\n        issuedOn: 'July 2020',\r\n        verificationLink: 'https://www.youracclaim.com/badges/181b7c56-c059-4fdd-b000-e7024dcf2f7a',\r\n    },\r\n    {\r\n        name: 'Certified ScrumMaster (CSM)',\r\n        issuer: 'Scrum Alliance',\r\n        issuedOn: 'November 2019'\r\n    },\r\n    {\r\n        name: ' Developing ASP.NET MVC Web Applications',\r\n        issuer: 'Microsoft',\r\n        issuedOn: 'September 2017',\r\n        verificationLink: 'https://www.youracclaim.com/badges/329a885a-1802-45e3-9b6c-970ac616348e',\r\n    },\r\n];\r\n\r\nexport default certifications;\r\n","import { Box, Stack } from '@mui/material';\r\n\r\nimport { ICertificate } from '../../../data/resume/certification';\r\nimport React from 'react';\r\nimport StyledLink from '../../StyledLink';\r\nimport StyledTypography from '../../StyledTypography';\r\nimport VerifiedSharpIcon from '@mui/icons-material/VerifiedSharp';\r\n\r\nconst Certificate = ({\r\n  name,\r\n  issuer,\r\n  issuedOn,\r\n  verificationLink,\r\n}: ICertificate) => {\r\n  return (\r\n    <>\r\n      <Box>\r\n        {verificationLink && (\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <StyledTypography fontVariant=\"titleLight\" capitalized={true}>\r\n              {name}\r\n            </StyledTypography>\r\n            <StyledLink to={verificationLink} label={name} target=\"_blank\">\r\n              <VerifiedSharpIcon\r\n                sx={{\r\n                  color: 'green',\r\n                }}\r\n              />\r\n            </StyledLink>\r\n          </Stack>\r\n        )}\r\n        {!verificationLink && (\r\n          <StyledTypography fontVariant=\"titleLight\" capitalized={true}>\r\n            {name}\r\n          </StyledTypography>\r\n        )}\r\n        <StyledTypography\r\n          fontVariant=\"subtitle\"\r\n          variant=\"overline\"\r\n          aria-label=\"subtitle\"\r\n          capitalized={true}>\r\n          {`${issuer} - ${issuedOn}`.toUpperCase()}\r\n        </StyledTypography>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Certificate;\r\n","import PageSectionLayout, {\r\n  IPageSectionLayoutProps,\r\n} from '../PageSectionLayout';\r\n\r\nimport React from 'react';\r\nimport StyledTypography from '../StyledTypography';\r\n\r\ninterface IResumeDetailsLayoutProps {}\r\n\r\nconst ResumeDetailsLayout = ({\r\n  title,\r\n  ...restProps\r\n}: IResumeDetailsLayoutProps & IPageSectionLayoutProps) => {\r\n  return (\r\n    <PageSectionLayout\r\n      title={\r\n        <>\r\n          {typeof title === 'string' && (\r\n            <StyledTypography\r\n              bold={true}\r\n              capitalized={true}\r\n              gutterBottom={true}\r\n              variant=\"body1\"\r\n              textAlign=\"center\"\r\n              spaced={true}>\r\n              {title}\r\n            </StyledTypography>\r\n          )}\r\n          {typeof title !== 'string' && <>{title}</>}\r\n        </>\r\n      }\r\n      {...restProps}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ResumeDetailsLayout;\r\n","import certifications, { ICertificate } from '../../data/resume/certification';\r\n\r\nimport Certificate from './Certifications/Certificate';\r\nimport React from 'react';\r\nimport ResumeDetailsLayout from './ResumeDetailsLayout';\r\n\r\nconst Experience = () => {\r\n  return (\r\n    <ResumeDetailsLayout title=\"Certifications\">\r\n      {certifications.map((certificate: ICertificate) => (\r\n        <Certificate key={certificate.name} {...certificate} />\r\n      ))}\r\n    </ResumeDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n","export interface IDegree {\r\n    school: string;\r\n    degree: string;\r\n    link: string;\r\n    fromYear: number;\r\n    toYear: number;\r\n}\r\n\r\nconst degrees: IDegree[] = [\r\n    {\r\n        school: 'Sardar Vallabhbhai Patel Institute Of Technology',\r\n        degree: 'Bachelor of Engineer - Information Technology',\r\n        link: 'https://svitvasad.ac.in/',\r\n        fromYear: 2008,\r\n        toYear: 2012,\r\n    },\r\n    {\r\n        school: 'Gujarat Secondary and Higher Secondary Education Board',\r\n        degree: 'Higher Secondary School - Science',\r\n        link: 'http://www.gsebeservice.com/',\r\n        fromYear: 2006,\r\n        toYear: 2008,\r\n    },\r\n];\r\n\r\nexport default degrees;\r\n","import { Box, Typography } from '@mui/material';\r\n\r\nimport { IDegree } from '../../../data/resume/degree';\r\nimport React from 'react';\r\nimport StyledLink from '../../StyledLink';\r\nimport StyledTypography from '../../StyledTypography';\r\n\r\nconst Degree = ({ degree, school, link, toYear }: IDegree) => {\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Typography gutterBottom={false}>{degree}</Typography>\r\n        <Box style={{ display: 'inline' }}>\r\n          <StyledLink to={link} label={school} target=\"_blank\">\r\n            <StyledTypography\r\n              fontVariant=\"subtitle\"\r\n              variant=\"overline\"\r\n              aria-label=\"subtitle\"\r\n              capitalized={true}\r\n              hoverEffect={true}>\r\n              {school}\r\n            </StyledTypography>\r\n          </StyledLink>\r\n          <StyledTypography\r\n            fontVariant=\"subtitle\"\r\n            variant=\"overline\"\r\n            aria-label=\"subtitle\"\r\n            capitalized={true}>\r\n            , {toYear}\r\n          </StyledTypography>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Degree;\r\n","import degrees, { IDegree } from '../../data/resume/degree';\r\n\r\nimport Degree from './Education/Degree';\r\nimport React from 'react';\r\nimport ResumeDetailsLayout from './ResumeDetailsLayout';\r\n\r\nconst Education = () => {\r\n  return (\r\n    <ResumeDetailsLayout title=\"Education\">\r\n      {degrees.map((degree: IDegree) => (\r\n        <Degree key={degree.degree} {...degree} />\r\n      ))}\r\n    </ResumeDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default Education;\r\n","// import React, { useState } from 'react';\r\n// import StyledLink, { IStyledLinkLinkProps } from '../StyledLink';\r\n\r\n// import { useEffect } from 'react';\r\n\r\n// export interface ILinkParserProps extends Partial<IStyledLinkLinkProps> {}\r\n\r\n// const LinkParser = ({ to, ...rest }: ILinkParserProps) => {\r\n//   const [link, setLink] = useState(to);\r\n\r\n//   useEffect(() => {\r\n//     if (to) {\r\n//       const properLink = to.startsWith('http') ? to : `http://${to}`;\r\n//       setLink(properLink);\r\n//     }\r\n//   }, [to]);\r\n\r\n//   return <StyledLink {...rest} to={link ?? '/'} />;\r\n// };\r\n\r\n// export default LinkParser;\r\n\r\nimport { Link, LinkProps } from '@mui/material';\r\nimport React, { useState } from 'react';\r\n\r\nimport StyledLink from '../StyledLink';\r\nimport { useEffect } from 'react';\r\n\r\nexport interface ILinkParserProps extends LinkProps {}\r\n\r\nconst LinkParser = ({ href, ...rest }: ILinkParserProps) => {\r\n  const [link, setLink] = useState(href ?? '/');\r\n\r\n  useEffect(() => {\r\n    if (href) {\r\n      const properLink = href.startsWith('http') ? href : `http://${href}`;\r\n      setLink(properLink);\r\n    }\r\n  }, [href]);\r\n\r\n  return <StyledLink to={link} label={link} />;\r\n};\r\n\r\nexport default LinkParser;\r\n","import { LinkProps, Theme, alpha } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport JsxParser from 'react-jsx-parser';\r\nimport LinkParser from './LinkParser';\r\n\r\nconst DEFAULT_LINK_PROPS: LinkProps = {\r\n  target: '_blank',\r\n};\r\n\r\nexport interface ITextParserProps {\r\n  children: string;\r\n  linkProps?: LinkProps;\r\n}\r\n\r\nconst TextParser = ({\r\n  children,\r\n  linkProps = DEFAULT_LINK_PROPS,\r\n}: ITextParserProps) => {\r\n  const [previewText, setPreviewText] = useState<string>(children);\r\n\r\n  useEffect(() => {\r\n    if (children) {\r\n      const finalOutput = children.replace(\r\n        /(\\b(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*))/gim,\r\n        '<LinkParser {...linkProps} href=\"$1\">$1</LinkParser>',\r\n      );\r\n      setPreviewText(finalOutput);\r\n    }\r\n  }, [children]);\r\n\r\n  return (\r\n    <>\r\n      <JsxParser\r\n        bindings={{\r\n          linkProps: linkProps,\r\n        }}\r\n        components={{ LinkParser }}\r\n        jsx={previewText}\r\n        renderInWrapper={false}\r\n        autoCloseVoidElements={true}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextParser;\r\n","import { Box, Link, Typography } from '@mui/material';\r\n\r\nimport { IJob } from '../../../data/resume/job';\r\nimport React from 'react';\r\nimport StyledLink from '../../StyledLink';\r\nimport StyledTypography from '../../StyledTypography';\r\nimport TextParser from '../../Parser/TextParser';\r\n\r\nconst Job = ({ company, position, link, dateRange, points }: IJob) => {\r\n  return (\r\n    <>\r\n      <Box>\r\n        <StyledLink\r\n          to={link}\r\n          label={company}\r\n          target=\"_blank\"\r\n          bottomBorder={false}>\r\n          <StyledTypography fontVariant=\"titleLight\" capitalized={true}>\r\n            {`${company} - ${position}`.toUpperCase()}\r\n          </StyledTypography>\r\n        </StyledLink>\r\n        <StyledTypography\r\n          fontVariant=\"subtitle\"\r\n          variant=\"overline\"\r\n          aria-label=\"subtitle\"\r\n          capitalized={true}>\r\n          {dateRange}\r\n        </StyledTypography>\r\n        <ul\r\n          style={{\r\n            paddingInlineStart: 16,\r\n          }}>\r\n          {points.map((point, index) => (\r\n            <li key={`${company}-point-${index}`}>\r\n              <Typography component=\"span\">\r\n                <TextParser>{point}</TextParser>\r\n              </Typography>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Job;\r\n","import jobs, { IJob } from '../../data/resume/job';\r\n\r\nimport Job from './Experience/Job';\r\nimport React from 'react';\r\nimport ResumeDetailsLayout from './ResumeDetailsLayout';\r\n\r\nconst Experience = () => {\r\n  return (\r\n    <ResumeDetailsLayout title=\"Experience\">\r\n      {jobs.map((job: IJob, index: number) => (\r\n        <Job key={`${job.company}${index}`} {...job} />\r\n      ))}\r\n    </ResumeDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n","import React from 'react';\r\nimport ResumeDetailsLayout from './ResumeDetailsLayout';\r\nimport StyledNavLink from '../StyledNavLink';\r\nimport StyledTypography from '../StyledTypography';\r\n\r\nconst References = () => {\r\n  return (\r\n    <ResumeDetailsLayout\r\n      title={\r\n        <StyledNavLink to=\"/contact\" label=\"Available upon request.\">\r\n          <StyledTypography\r\n            bold={true}\r\n            capitalized={true}\r\n            variant=\"body1\"\r\n            textAlign=\"center\"\r\n            spaced={true}\r\n            hoverEffect={true}>\r\n            References available upon request\r\n          </StyledTypography>\r\n        </StyledNavLink>\r\n      }>\r\n      <></>\r\n    </ResumeDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default References;\r\n","export interface ISkill {\r\n    title: string;\r\n    competency: number;\r\n    categories: string[]\r\n}\r\n\r\nexport interface ICategory {\r\n    name: string;\r\n    color: string;\r\n}\r\n\r\nconst skills: ISkill[] = [\r\n    {\r\n        title: '.NET Framework',\r\n        competency: 4,\r\n        categories: ['Web Development', 'Framework', 'C#'],\r\n    },\r\n    {\r\n        title: '.NET Core',\r\n        competency: 3,\r\n        categories: ['Web Development', 'Framework', 'C#'],\r\n    },\r\n    {\r\n        title: 'C#',\r\n        competency: 4,\r\n        categories: ['Web Development', 'Languages', 'C#', 'Scripting'],\r\n    },\r\n    {\r\n        title: 'SQL',\r\n        competency: 3,\r\n        categories: ['Database', 'Languages', 'Scripting'],\r\n    },\r\n    {\r\n        title: 'MS SQL',\r\n        competency: 3,\r\n        categories: ['Database'],\r\n    },\r\n    {\r\n        title: 'CosmosDB',\r\n        competency: 4,\r\n        categories: ['Database'],\r\n    },\r\n    {\r\n        title: 'DynamoDB',\r\n        competency: 2,\r\n        categories: ['Database'],\r\n    },\r\n    {\r\n        title: 'Javascript',\r\n        competency: 4,\r\n        categories: ['Web Development', 'Languages', 'Javascript', 'Scripting'],\r\n    },\r\n    {\r\n        title: 'Node.js',\r\n        competency: 2,\r\n        categories: ['Web Development', 'Languages', 'Javascript'],\r\n    },\r\n    {\r\n        title: 'Jquery',\r\n        competency: 4,\r\n        categories: ['Web Development', 'Javascript'],\r\n    },\r\n    {\r\n        title: 'Knockout.js',\r\n        competency: 4,\r\n        categories: ['Web Development', 'Javascript'],\r\n    },\r\n    {\r\n        title: 'Angular',\r\n        competency: 4,\r\n        categories: ['Web Development', 'Javascript', 'Framework'],\r\n    },\r\n    {\r\n        title: 'React',\r\n        competency: 3,\r\n        categories: ['Web Development', 'Javascript'],\r\n    },\r\n    {\r\n        title: 'Typescript',\r\n        competency: 3,\r\n        categories: ['Web Development', 'Languages', 'Javascript'],\r\n    },\r\n    {\r\n        title: 'Azure',\r\n        competency: 4,\r\n        categories: ['Cloud'],\r\n    },\r\n    {\r\n        title: 'AWS',\r\n        competency: 2,\r\n        categories: ['Cloud'],\r\n    },\r\n    {\r\n        title: 'ADO',\r\n        competency: 4,\r\n        categories: ['SCM'],\r\n    },\r\n    {\r\n        title: 'TFS',\r\n        competency: 4,\r\n        categories: ['SCM'],\r\n    },\r\n    {\r\n        title: 'VSTS',\r\n        competency: 4,\r\n        categories: ['SCM'],\r\n    },\r\n    {\r\n        title: 'Github',\r\n        competency: 3,\r\n        categories: ['SCM'],\r\n    },\r\n    {\r\n        title: 'Bitbucket',\r\n        competency: 2,\r\n        categories: ['SCM'],\r\n    },\r\n    {\r\n        title: 'Terraform',\r\n        competency: 3,\r\n        categories: ['IaC'],\r\n    },\r\n    {\r\n        title: 'Serverless',\r\n        competency: 3,\r\n        categories: ['IaC'],\r\n    },\r\n    {\r\n        title: 'AWS CDK',\r\n        competency: 2,\r\n        categories: ['IaC'],\r\n    },\r\n    {\r\n        title: 'Pulumi',\r\n        competency: 2,\r\n        categories: ['IaC'],\r\n    },\r\n    {\r\n        title: 'Azure Functions',\r\n        competency: 4,\r\n        categories: ['Serverless'],\r\n    },\r\n    {\r\n        title: 'AWS Lambda',\r\n        competency: 3,\r\n        categories: ['Serverless'],\r\n    },\r\n    {\r\n        title: 'Logic App',\r\n        competency: 3,\r\n        categories: ['Serverless'],\r\n    },\r\n    {\r\n        title: 'ASP.NET MVC',\r\n        competency: 4,\r\n        categories: ['Web Development', 'C#', 'Framework'],\r\n    },\r\n    {\r\n        title: 'ASP.NET Web API',\r\n        competency: 4,\r\n        categories: ['Web Development', 'C#', 'Framework'],\r\n    },\r\n    {\r\n        title: 'API Gateway',\r\n        competency: 4,\r\n        categories: ['Web Development'],\r\n    },\r\n    {\r\n        title: 'Shopify - Liquid',\r\n        competency: 3,\r\n        categories: ['Web Development', 'Framework'],\r\n    },\r\n].map((skill) => ({ ...skill, categories: skill.categories.sort() }));\r\n\r\n// this is a list of colors that I like. The length should be == to the\r\n// number of categories. Re-arrange this list until you find a pattern you like.\r\nconst colors = [\r\n    '#6968b3',\r\n    '#37b1f5',\r\n    '#40494e',\r\n    '#515dd4',\r\n    '#e47272',\r\n    '#cc7b94',\r\n    '#3896e2',\r\n    '#c3423f',\r\n    '#d75858',\r\n    '#747fff',\r\n    '#64cb7b',\r\n];\r\n\r\nconst categories: ICategory[] = [\r\n    ...new Set(skills.reduce<string[]>((acc, { categories }) => acc.concat(categories), [])),\r\n]\r\n    .sort()\r\n    .map((category) => ({\r\n        name: category,\r\n        color: colors[Math.floor(Math.random() * colors.length)],\r\n    }));\r\n\r\nexport { categories, skills };","import { Box, Button, ButtonProps, Theme, styled } from '@mui/material';\r\nimport { ICategory, ISkill } from '../../../data/resume/skills';\r\n\r\nimport React from 'react';\r\nimport StyledButton from '../../StyledButton';\r\nimport StyledTypography from '../../StyledTypography';\r\nimport useBreakpoints from '../../../hooks/useBreakpoints';\r\n\r\nconst StyledButtonX = styled(StyledButton)<ButtonProps>(({ theme }) => {\r\n  return {\r\n    padding: `${theme.spacing(1)} ${theme.spacing(1)}`,\r\n    borderColor: 'transparent',\r\n  };\r\n});\r\n\r\ninterface ICategoryButtonProps {\r\n  label: string;\r\n  handleClick: (label: string) => void;\r\n  isActive: boolean;\r\n}\r\n\r\nconst Category = ({ label, handleClick, isActive }: ICategoryButtonProps) => {\r\n  const { sm } = useBreakpoints();\r\n  const onClick = () => {\r\n    handleClick(label);\r\n  };\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          m: sm ? 0 : 1 / 2,\r\n        }}>\r\n        <StyledButtonX\r\n          onClick={onClick}\r\n          sx={{\r\n            ...(isActive\r\n              ? {\r\n                  color: (theme: Theme) => theme.palette.primary.main,\r\n                  borderColor: (theme: Theme) => theme.palette.primary.main,\r\n                }\r\n              : {}),\r\n          }}>\r\n          <StyledTypography\r\n            fontVariant=\"titleLight\"\r\n            capitalized={true}\r\n            bold={true}>\r\n            {label}\r\n          </StyledTypography>\r\n        </StyledButtonX>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import { Box, CircularProgress, Stack, Theme, Typography } from '@mui/material';\r\nimport { ICategory, ISkill } from '../../../data/resume/skills';\r\n\r\nimport React from 'react';\r\n\r\nconst CompetencyIndicator = ({\r\n  value,\r\n  color,\r\n  label,\r\n}: {\r\n  value: number;\r\n  color: string;\r\n  label: string;\r\n}) => {\r\n  return (\r\n    <Box sx={{ position: 'relative' }}>\r\n      <CircularProgress\r\n        value={value}\r\n        variant=\"determinate\"\r\n        sx={{\r\n          color: color,\r\n        }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          top: 0,\r\n          left: 0,\r\n          bottom: 0,\r\n          right: 0,\r\n          position: 'absolute',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}>\r\n        <Typography variant=\"caption\" component=\"div\" color=\"text.secondary\">\r\n          {label || value}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\ninterface ISkillBadgeProps {\r\n  data: ISkill;\r\n  categories: ICategory[];\r\n}\r\n\r\nconst SkillBadge = ({ data, categories }: ISkillBadgeProps) => {\r\n  const { categories: skillCategories, competency, title } = data;\r\n  const skillColor = categories\r\n    .filter((cat) => skillCategories.includes(cat.name))\r\n    .map((cat) => cat.color)[0];\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          p: 1,\r\n          border: (theme: Theme) => `1px solid ${theme.palette.grey[300]}`,\r\n          borderRadius: 3,\r\n          height: '100%',\r\n        }}>\r\n        <Stack alignItems=\"center\" textAlign=\"center\">\r\n          <CompetencyIndicator\r\n            value={(competency / 5.0) * 100.0}\r\n            color={skillColor}\r\n            label={`${competency}/5`}\r\n          />\r\n          <Typography variant=\"body2\">{title}</Typography>\r\n        </Stack>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SkillBadge;\r\n","import {\r\n  Box,\r\n  ImageList,\r\n  ImageListItem,\r\n  Stack,\r\n  Typography,\r\n  Zoom,\r\n} from '@mui/material';\r\nimport { categories, skills } from '../../data/resume/skills';\r\n\r\nimport Category from './Skills/Category';\r\nimport React from 'react';\r\nimport ResumeDetailsLayout from './ResumeDetailsLayout';\r\nimport SkillBadge from './Skills/SkillBadge';\r\nimport useBreakpoints from '../../hooks/useBreakpoints';\r\nimport { useState } from 'react';\r\n\r\ninterface ICategories {\r\n  All: boolean;\r\n  [key: string]: boolean;\r\n}\r\n\r\ninterface ISkillsState {\r\n  categories: ICategories;\r\n  selectedSkill: string;\r\n}\r\n\r\nconst Skills = () => {\r\n  const { sm, md, lg } = useBreakpoints();\r\n  const cols = sm ? 2 : md || lg ? 3 : 5;\r\n  const [state, setState] = useState<ISkillsState>({\r\n    categories: categories\r\n      .map((cat) => cat.name)\r\n      .reduce<ICategories>(\r\n        (obj, key) => ({\r\n          ...obj,\r\n          [key]: false,\r\n        }),\r\n        { All: true },\r\n      ),\r\n    selectedSkill: 'All',\r\n  });\r\n\r\n  const getSkillBadges = () => {\r\n    // search for true active categories\r\n    const actCat = Object.keys(state.categories).reduce(\r\n      (cat, key) => (state.categories[key] ? key : cat),\r\n      'All',\r\n    );\r\n\r\n    return skills\r\n      .sort((a, b) => {\r\n        let ret = 0;\r\n        if (a.competency > b.competency) ret = -1;\r\n        else if (a.competency < b.competency) ret = 1;\r\n        else if (a.categories[0] > b.categories[0]) ret = -1;\r\n        else if (a.categories[0] < b.categories[0]) ret = 1;\r\n        else if (a.title > b.title) ret = 1;\r\n        else if (a.title < b.title) ret = -1;\r\n        return ret;\r\n      })\r\n      .filter((skill) => actCat === 'All' || skill.categories.includes(actCat))\r\n      .map((skill, index) => (\r\n        <ImageListItem key={`${skill.title}${index}`}>\r\n          <Zoom in={true}>\r\n            <Box>\r\n              <SkillBadge categories={categories} data={skill} />\r\n            </Box>\r\n          </Zoom>\r\n        </ImageListItem>\r\n      ));\r\n  };\r\n\r\n  const getCategories = () => {\r\n    return Object.keys(state.categories).map((key) => (\r\n      <Category\r\n        label={key}\r\n        key={key}\r\n        isActive={state.selectedSkill === key}\r\n        handleClick={handleChildClick}\r\n      />\r\n    ));\r\n  };\r\n\r\n  const handleChildClick = (label: string) => {\r\n    setState((prevState: ISkillsState) => {\r\n      // Toggle button that was clicked. Turn all other buttons off.\r\n      const buttons = Object.keys(prevState.categories).reduce<ICategories>(\r\n        (obj, key) => ({\r\n          ...obj,\r\n          [key]: label === key && !prevState.categories[key],\r\n        }),\r\n        { All: false },\r\n      );\r\n      // Turn on 'All' button if other buttons are off\r\n      buttons.All = !Object.keys(prevState.categories).some(\r\n        (key) => buttons[key],\r\n      );\r\n      return {\r\n        ...prevState,\r\n        ...{ categories: buttons, selectedSkill: buttons.All ? 'All' : label },\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ResumeDetailsLayout title=\"Skills\">\r\n      <Typography color=\"text.disabled\" variant=\"body2\" textAlign=\"center\">\r\n        Note: I think these sections are silly, but everyone seems to have one.\r\n        Here is a *mostly* honest overview of my skills.\r\n      </Typography>\r\n      <Stack\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        sx={{\r\n          flexWrap: 'wrap',\r\n        }}>\r\n        {getCategories()}\r\n      </Stack>\r\n      <ImageList cols={cols}>{getSkillBadges()}</ImageList>\r\n      <Typography typography=\"body2\" color=\"text.disabled\" textAlign=\"center\">\r\n        (Skills are being refined)\r\n      </Typography>\r\n    </ResumeDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React from 'react';\r\nimport ResumeDetailsLayout from './ResumeDetailsLayout';\r\nimport { Typography } from '@mui/material';\r\n\r\nconst Summary = () => {\r\n  return (\r\n    <>\r\n      <ResumeDetailsLayout title=\"Summary\">\r\n        <Typography>\r\n          Self-directed, insight-oriented, Technical Architect/Software Engineer\r\n          and CSM with an excellent experience of 9+ years in e2e authoring\r\n          solutions and leading teams towards complex and dynamic applications\r\n          including early discovery, designing, developing, analyzing, and\r\n          implementing in cloud technologies like Azure with modern stacks and\r\n          best practices.\r\n        </Typography>\r\n        <Typography>\r\n          Demonstrating strong critical thinking, decision making, problem\r\n          solving, time management and multi-tasking.\r\n        </Typography>\r\n      </ResumeDetailsLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n","import { Box, Stack } from '@mui/material';\r\n\r\nimport Certifications from '../components/Resume/Certifications';\r\nimport Education from '../components/Resume/Education';\r\nimport Experience from '../components/Resume/Experience';\r\nimport { MotionContainerStack } from '../components/Animation/MotionContainerStack';\r\nimport PageContentLayout from '../layout/PageContentLayout';\r\nimport PageLayout from '../layout/PageLayout';\r\nimport React from 'react';\r\nimport { ReactNode } from 'react';\r\nimport References from '../components/Resume/References';\r\nimport Skills from '../components/Resume/Skills';\r\nimport StyledTypography from '../components/StyledTypography';\r\nimport Summary from '../components/Resume/Summary';\r\nimport getVariant from '../components/Animation/getVariant';\r\nimport { motion } from 'framer-motion';\r\n\r\ninterface Section {\r\n  title: string;\r\n  details: ReactNode;\r\n}\r\nconst sections: Section[] = [\r\n  {\r\n    title: 'Summary',\r\n    details: <Summary />,\r\n  },\r\n  {\r\n    title: 'Skills',\r\n    details: <Skills />,\r\n  },\r\n  {\r\n    title: 'Experience',\r\n    details: <Experience />,\r\n  },\r\n  {\r\n    title: 'Certifications',\r\n    details: <Certifications />,\r\n  },\r\n  {\r\n    title: 'Education',\r\n    details: <Education />,\r\n  },\r\n  {\r\n    title: 'References',\r\n    details: <References />,\r\n  },\r\n];\r\n\r\nconst scrollTo = (elementId: string) => {\r\n  const clientTopPosition = document\r\n    ?.getElementById(elementId.toLowerCase())\r\n    ?.getBoundingClientRect()?.top;\r\n  if (clientTopPosition) {\r\n    window.scrollTo({\r\n      top: clientTopPosition - 86,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n};\r\n\r\nconst ResumeNavigation = () => {\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      justifyContent=\"center\"\r\n      sx={{\r\n        flexWrap: 'wrap',\r\n      }}>\r\n      {sections.map((section: Section) => (\r\n        <StyledTypography\r\n          key={section.title}\r\n          bold={true}\r\n          capitalized={true}\r\n          hoverEffect={true}\r\n          variant=\"overline\"\r\n          mr={2}\r\n          onClick={() => {\r\n            scrollTo(section.title);\r\n          }}>\r\n          {section.title}\r\n        </StyledTypography>\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\ninterface IResumeProps { }\r\n\r\nconst Resume = ({ }: IResumeProps) => {\r\n  const pageName = 'Resume';\r\n  return (\r\n    <>\r\n      <PageLayout title={pageName} description={pageName}>\r\n        <PageContentLayout\r\n          header={pageName}\r\n          headerProps={{ textAlign: 'center' }}\r\n          subHeader={<ResumeNavigation />}>\r\n          <MotionContainerStack open initial=\"initial\" spacing={2}>\r\n            {sections.map((section: Section) => (\r\n              <Box\r\n                key={section.title}\r\n                component={motion.div}\r\n                display=\"flex\"\r\n                id={section.title.toLowerCase()}\r\n                variants={getVariant('fadeInRight')}\r\n              >\r\n                {section.details}\r\n              </Box>\r\n            ))}\r\n            {/* </Stack> */}\r\n          </MotionContainerStack>\r\n        </PageContentLayout>\r\n      </PageLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Resume;\r\n"],"sourceRoot":""}