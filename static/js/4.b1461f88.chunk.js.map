{"version":3,"sources":["components/Template/Analytics.tsx","components/Template/ScrollToTop.tsx","layout/PageLayout.tsx","../node_modules/@material-ui/icons/VerifiedSharp.js","data/resume/certification.ts","components/Resume/Certifications/Certificate.tsx","components/Resume/ResumeDetailsLayout.tsx","components/Resume/Certifications.tsx","data/resume/degree.ts","components/Resume/Education/Degree.tsx","components/Resume/Education.tsx","data/resume/job.ts","components/Resume/Experience/Job.tsx","components/Resume/Experience.tsx","components/Resume/References.tsx","data/resume/skills.ts","../node_modules/@material-ui/core/ImageList/ImageListContext.js","../node_modules/@material-ui/core/ImageListItem/imageListItemClasses.js","../node_modules/@material-ui/core/ImageListItem/ImageListItem.js","../node_modules/@material-ui/core/ImageList/imageListClasses.js","../node_modules/@material-ui/core/ImageList/ImageList.js","components/Resume/Skills/CategoryButton.tsx","components/Resume/Skills/SkillBadge.tsx","components/Resume/Skills.tsx","components/Resume/Summary.tsx","pages/Resume.tsx"],"names":["process","NODE_ENV","REACT_APP_GA_TRACKING_ID","ReactGA","initialize","Analytics","pathname","useLocation","useEffect","set","page","pageview","ScrollToTop","window","scrollTo","PageLayout","title","description","children","titleTemplate","defer","name","content","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","certifications","issuer","issuedOn","verificationLink","Certificate","Box","Stack","direction","alignItems","spacing","StyledTypography","fontVariant","capitalized","StyledLink","to","label","target","sx","color","variant","toUpperCase","ResumeDetailsLayout","id","bold","gutterBottom","spaced","Experience","map","certificate","degrees","school","degree","link","fromYear","toYear","Degree","Typography","style","display","Education","job","company","position","dateRange","abstract","points","Job","bottomBorder","paddingInlineStart","point","index","References","StyledNavLink","skills","competency","categories","skill","sort","colors","Set","reduce","acc","concat","category","ImageListContext","React","getImageListItemUtilityClass","slot","generateUtilityClass","imageListItemClasses","generateUtilityClasses","_excluded","ImageListItemRoot","styled","overridesResolver","props","styles","styleProps","img","root","_extends","lineHeight","flexDirection","height","alignSelf","objectFit","width","flexGrow","ImageListItem","inProps","ref","useThemeProps","className","cols","component","rows","other","_objectWithoutPropertiesLoose","rowHeight","gap","undefined","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","gridColumnEnd","gridRowEnd","marginBottom","child","type","isMuiElement","getImageListUtilityClass","ImageListRoot","overflowY","listStyle","padding","WebkitOverflowScrolling","ImageList","styleProp","contextValue","columnCount","columnGap","gridTemplateColumns","Provider","StyledButtonX","StyledButton","theme","borderColor","CategoryButton","handleClick","isActive","active","sm","useBreakpoints","m","onClick","palette","primary","main","CompetencyIndicator","CircularProgress","top","left","bottom","right","justifyContent","SkillBadge","data","skillCategories","skillColor","filter","cat","includes","textAlign","Skills","md","lg","useState","buttons","obj","key","All","selectedSkill","state","setState","handleChildClick","prevState","keys","some","flexWrap","actCat","a","b","ret","getSkillBadges","Summary","sections","details","Certifications","ResumeNavigation","section","toLowerCase","typographyProps","mr","Resume","pageName","PageContentLayout","header","subHeader","pb"],"mappings":"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","file":"static/js/4.b1461f88.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\r\nimport { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst { NODE_ENV, REACT_APP_GA_TRACKING_ID } = process.env;\r\n\r\nif (NODE_ENV === 'production' && REACT_APP_GA_TRACKING_ID) {\r\n  ReactGA.initialize(REACT_APP_GA_TRACKING_ID);\r\n}\r\n\r\nconst Analytics = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (NODE_ENV === 'production') {\r\n      ReactGA.set({\r\n        page: pathname,\r\n      });\r\n      ReactGA.pageview(pathname);\r\n    }\r\n  }, [pathname]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default Analytics;\r\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n// See https://reacttraining.com/react-router/web/guides/scroll-restoration/scroll-to-top\r\nconst ScrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React, { ReactNode } from 'react';\r\n\r\nimport Analytics from '../components/Template/Analytics';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport ScrollToTop from '../components/Template/ScrollToTop';\r\n\r\ninterface IPageProps {\r\n  title: string;\r\n  description: string;\r\n  children: ReactNode;\r\n}\r\n\r\nconst PageLayout = ({ title, description, children }: IPageProps) => (\r\n  <>\r\n    <Analytics />\r\n    <ScrollToTop />\r\n    <Helmet titleTemplate=\"%s | Nilesh Moradiya\" defer={false}>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </>\r\n);\r\n\r\nexport default PageLayout;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m23 12-2.44-2.79.34-3.69-3.61-.82-1.89-3.2L12 2.96 8.6 1.5 6.71 4.69 3.1 5.5l.34 3.7L1 12l2.44 2.79-.34 3.7 3.61.82L8.6 22.5l3.4-1.47 3.4 1.46 1.89-3.19 3.61-.82-.34-3.69L23 12zm-12.91 4.72-3.8-3.81 1.48-1.48 2.32 2.33 5.85-5.87 1.48 1.48-7.33 7.35z\"\n}), 'VerifiedSharp');\n\nexports.default = _default;","export interface ICertificate {\r\n    name: string;\r\n    issuer: string;\r\n    issuedOn: string;\r\n    verificationLink?: string;\r\n}\r\n\r\nconst certifications: ICertificate[] = [\r\n    {\r\n        name: 'AZ-204: Azure Developer Associate',\r\n        issuer: 'Microsoft',\r\n        issuedOn: 'Feb 2021',\r\n        verificationLink: 'https://www.youracclaim.com/badges/2d74d3fe-40bc-4062-a463-a06dfac18ff9',\r\n    },\r\n    {\r\n        name: 'Azure Solutions Architect Expert',\r\n        issuer: 'Microsoft',\r\n        issuedOn: 'July 2020',\r\n        verificationLink: 'https://www.youracclaim.com/badges/b3be7518-85cf-4008-bd1d-ab818b9f33ad',\r\n    },\r\n    {\r\n        name: 'AZ-301: Azure Architect Design',\r\n        issuer: 'Microsoft',\r\n        issuedOn: 'July 2020',\r\n        verificationLink: 'https://www.youracclaim.com/badges/6118e86e-0c1f-43e3-a017-34379741dd50',\r\n    },\r\n    {\r\n        name: 'AZ-300: Azure Architect Technologies',\r\n        issuer: 'Microsoft',\r\n        issuedOn: 'July 2020',\r\n        verificationLink: 'https://www.youracclaim.com/badges/181b7c56-c059-4fdd-b000-e7024dcf2f7a',\r\n    },\r\n    {\r\n        name: 'Certified ScrumMaster (CSM)',\r\n        issuer: 'Scrum Alliance',\r\n        issuedOn: 'November 2029'\r\n    },\r\n    {\r\n        name: ' Developing ASP.NET MVC Web Applications',\r\n        issuer: 'Microsoft',\r\n        issuedOn: 'September 2017',\r\n        verificationLink: 'https://www.youracclaim.com/badges/329a885a-1802-45e3-9b6c-970ac616348e',\r\n    },\r\n];\r\n\r\nexport default certifications;\r\n","import { Box, Stack } from '@material-ui/core';\r\n\r\nimport { ICertificate } from '../../../data/resume/certification';\r\nimport React from 'react';\r\nimport StyledLink from '../../StyledLink';\r\nimport StyledTypography from '../../StyledTypography';\r\nimport VerifiedSharpIcon from '@material-ui/icons/VerifiedSharp';\r\n\r\nconst Certificate = ({\r\n  name,\r\n  issuer,\r\n  issuedOn,\r\n  verificationLink,\r\n}: ICertificate) => {\r\n  return (\r\n    <>\r\n      <Box>\r\n        {verificationLink && (\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <StyledTypography fontVariant=\"titleLight\" capitalized={true}>\r\n              {name}\r\n            </StyledTypography>\r\n            <StyledLink to={verificationLink} label={name} target=\"_blank\">\r\n              <VerifiedSharpIcon\r\n                sx={{\r\n                  color: 'green',\r\n                }}\r\n              />\r\n            </StyledLink>\r\n          </Stack>\r\n        )}\r\n        {!verificationLink && (\r\n          <StyledTypography fontVariant=\"titleLight\" capitalized={true}>\r\n            {name}\r\n          </StyledTypography>\r\n        )}\r\n        <StyledTypography\r\n          fontVariant=\"subtitle\"\r\n          variant=\"overline\"\r\n          aria-label=\"subtitle\"\r\n          capitalized={true}>\r\n          {`${issuer} - ${issuedOn}`.toUpperCase()}\r\n        </StyledTypography>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Certificate;\r\n","import {\r\n  Box,\r\n  CircularProgress,\r\n  Divider,\r\n  Paper,\r\n  Skeleton,\r\n  Stack,\r\n  Theme,\r\n} from '@material-ui/core';\r\nimport React, { ReactNode } from 'react';\r\n\r\nimport { StatSyncFn } from 'fs';\r\nimport StyledTypography from '../StyledTypography';\r\n\r\ninterface IResumeDetailsLayoutProps {\r\n  id?: string;\r\n  title: ReactNode;\r\n  children: ReactNode;\r\n}\r\n\r\nconst ResumeDetailsLayout = ({\r\n  id,\r\n  title,\r\n  children,\r\n}: IResumeDetailsLayoutProps) => (\r\n  <>\r\n    <Stack spacing={2} id={id}>\r\n      {typeof title === 'string' && (\r\n        <StyledTypography\r\n          bold={true}\r\n          capitalized={true}\r\n          gutterBottom={true}\r\n          variant=\"body1\"\r\n          spaced={true}>\r\n          {title}\r\n        </StyledTypography>\r\n      )}\r\n      {typeof title !== 'string' && <>{title}</>}\r\n      {children}\r\n    </Stack>\r\n  </>\r\n);\r\n\r\nexport default ResumeDetailsLayout;\r\n","import certifications, { ICertificate } from '../../data/resume/certification';\r\n\r\nimport Certificate from './Certifications/Certificate';\r\nimport Degree from './Education/Degree';\r\nimport React from 'react';\r\nimport ResumeDetailsLayout from './ResumeDetailsLayout';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst Experience = () => {\r\n  return (\r\n    <ResumeDetailsLayout title=\"Certifications\" id=\"certifications\">\r\n      {certifications.map((certificate: ICertificate) => (\r\n        <Certificate key={certificate.name} {...certificate} />\r\n      ))}\r\n    </ResumeDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n","export interface IDegree {\r\n    school: string;\r\n    degree: string;\r\n    link: string;\r\n    fromYear: number;\r\n    toYear: number;\r\n}\r\n\r\nconst degrees: IDegree[] = [\r\n    {\r\n        school: 'Sardar Vallabhbhai Patel Institute Of Technology',\r\n        degree: 'Bachelor of Engineer - Information Technology',\r\n        link: 'https://svitvasad.ac.in/',\r\n        fromYear: 2008,\r\n        toYear: 2012,\r\n    },\r\n];\r\n\r\nexport default degrees;\r\n","import { Box, Typography } from '@material-ui/core';\r\n\r\nimport { IDegree } from '../../../data/resume/degree';\r\nimport React from 'react';\r\nimport StyledLink from '../../StyledLink';\r\nimport StyledTypography from '../../StyledTypography';\r\n\r\nconst Degree = ({ degree, school, link, toYear }: IDegree) => {\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Typography gutterBottom={false}>{degree}</Typography>\r\n        <Box style={{ display: 'inline' }}>\r\n          <StyledLink to={link} label={school} target=\"_blank\">\r\n            <StyledTypography\r\n              fontVariant=\"subtitle\"\r\n              variant=\"overline\"\r\n              aria-label=\"subtitle\"\r\n              capitalized={true}>\r\n              {school}\r\n            </StyledTypography>\r\n          </StyledLink>\r\n          <StyledTypography\r\n            fontVariant=\"subtitle\"\r\n            variant=\"overline\"\r\n            aria-label=\"subtitle\"\r\n            capitalized={true}>\r\n            , {toYear}\r\n          </StyledTypography>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Degree;\r\n","import degrees, { IDegree } from '../../data/resume/degree';\r\n\r\nimport Degree from './Education/Degree';\r\nimport React from 'react';\r\nimport ResumeDetailsLayout from './ResumeDetailsLayout';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst Education = () => {\r\n  return (\r\n    <ResumeDetailsLayout title=\"Education\" id=\"education\">\r\n      {degrees.map((degree: IDegree) => (\r\n        <Degree key={degree.degree} {...degree} />\r\n      ))}\r\n    </ResumeDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default Education;\r\n","export interface IJob {\r\n    company: string;\r\n    position: string;\r\n    link: string;\r\n    dateRange: string;\r\n    abstract?: string;\r\n    points: string[];\r\n}\r\n\r\nconst job: IJob[] = [\r\n    {\r\n        company: 'IMRIEL',\r\n        position: 'Technical Architect / Software Engineer',\r\n        link: 'https://imriel.com',\r\n        dateRange: 'March 2018 - Present',\r\n        abstract: 'Architect & Develop applications for CBRE and C&W.',\r\n        points: [\r\n            'Transform monolithic apps to/with micro/mini service/serverless architectures.',\r\n            'Data Modelling, Architecting, developing end to end enterprise-grade apps with cloud and serverless technologies.',\r\n            'Lead teams, manage internal repositories, Peer-reviewing, managing legacy apps, maintain clean coding standards.',\r\n            'Leading, Mentoring, and assisting with teams as well as Peer-reviewing code for other team members to ensure the highest possible code quality and clean coding standards in software products.',\r\n            'Advising on innovative software development practices and providing technical assistance in dealing with client matters.',\r\n            'Researching and evaluating new development tools and software products to increase programming capabilities.',\r\n            'Scalable Integration projects between various CMS like MSD and Salesforce, Yardi using Serverless technology for C&W the real-estate giant.',\r\n            'Developed a virtual carper visualizer using ML/AI and Image Processing(https://loom-trial.myshopify.com/pages/visualizer).'\r\n        ],\r\n    },\r\n    {\r\n        company: 'IMRIEL',\r\n        position: 'Sr. Software / DevOps Engineer',\r\n        abstract: 'Develop and migrate applications for CBRE.',\r\n        link: 'https://imriel.com',\r\n        dateRange: 'November 2015 – February 2018',\r\n        points: [\r\n            'Designing Database Model and Application Solution to manage a repository of financial real-estate transactions in APAC, EMEA and America regions for in-depth trend analysis.',\r\n            'Design end to end automation with CI/CD and DevOps processes using the latest tools and developing VNext build & release tasks.',\r\n            'Assisting in designing, developing, analyzing, testing, debugging, and executing modern Web Applications.',\r\n            'Determining user requirements, including project budgets and timelines as well as providing consultative services to clients and project team members on technical issues.',\r\n            'Preparing accurate reports to document design flaws and bugs as well as modifying existing software or system to correct errors and improve performance.',\r\n            'Developed custom importing tool libraries.',\r\n            'Convert monolithic applications to micro/mini services.',\r\n        ],\r\n    },\r\n    {\r\n        company: 'TechGrains',\r\n        position: 'Sr. Software Engineer',\r\n        link: 'https://www.techgrains.com/',\r\n        dateRange: 'September 2013 – October 2015',\r\n        abstract: 'Develop and Support applications for hospitality industry.',\r\n        points: [\r\n            'Developed a POS System for Da-Pizza Planet chain with various hardware integration.',\r\n            'Developed Web APIs for internal product GoSurvey(www.gosurvey.in) and ShareExpense(http://shareexpense.in/) mobile apps for iOS, Android and Web clients.',\r\n            'Written, tested, and debugged Web API, Web applications and desktop applications.',\r\n            'Handled front-end and back-end aspect of Web applications.',\r\n            'Coordinated with clients for complex software installations and issue.',\r\n            'Reviewing code, coding standards, and ensuring software quality.',\r\n        ],\r\n    },\r\n    {\r\n        company: 'Promact',\r\n        position: 'Jr. Software Engineer',\r\n        link: 'https://promactinfo.com',\r\n        dateRange: 'July 2012 – August 2013',\r\n        abstract: 'Develop and Support applications for portfolio of applications.',\r\n        points: [\r\n            'Develop Web applications using MVC and Web API.',\r\n            'Developed test plans, identified issues, and modified programs.',\r\n            'Researched, analyzed and modified existing systems.',\r\n            'Supported back-office desktop applications for www.viagogo.com.',\r\n            'Enhanced and deployed reporting tool based on Google Analytics.',\r\n            'Debugging and fixing issues in existing applications.',\r\n        ],\r\n    },\r\n];\r\n\r\nexport default job;\r\n","import { Box, Link, Typography } from '@material-ui/core';\r\n\r\nimport { IDegree } from '../../../data/resume/degree';\r\nimport { IJob } from '../../../data/resume/job';\r\nimport React from 'react';\r\nimport StyledLink from '../../StyledLink';\r\nimport StyledTypography from '../../StyledTypography';\r\n\r\nconst Job = ({ company, position, link, dateRange, points }: IJob) => {\r\n  return (\r\n    <>\r\n      <Box>\r\n        <StyledLink\r\n          to={link}\r\n          label={company}\r\n          target=\"_blank\"\r\n          bottomBorder={false}>\r\n          <StyledTypography fontVariant=\"titleLight\" capitalized={true}>\r\n            {`${company} - ${position}`.toUpperCase()}\r\n          </StyledTypography>\r\n        </StyledLink>\r\n        <StyledTypography\r\n          fontVariant=\"subtitle\"\r\n          variant=\"overline\"\r\n          aria-label=\"subtitle\"\r\n          capitalized={true}>\r\n          {dateRange}\r\n        </StyledTypography>\r\n        <ul\r\n          style={{\r\n            paddingInlineStart: 16,\r\n          }}>\r\n          {points.map((point, index) => (\r\n            <li key={`${company}-point-${index}`}>\r\n              <Typography>{point}</Typography>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Job;\r\n","import job, { IJob } from '../../data/resume/job';\r\n\r\nimport Job from './Experience/Job';\r\nimport React from 'react';\r\nimport ResumeDetailsLayout from './ResumeDetailsLayout';\r\n\r\nconst Experience = () => {\r\n  return (\r\n    <ResumeDetailsLayout title=\"Experience\" id=\"experience\">\r\n      {job.map((job: IJob, index: number) => (\r\n        <Job key={`${job.company}${index}`} {...job} />\r\n      ))}\r\n    </ResumeDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n","import React from 'react';\r\nimport ResumeDetailsLayout from './ResumeDetailsLayout';\r\nimport StyledNavLink from '../StyledNavLink';\r\n\r\nconst References = () => {\r\n  return (\r\n    <ResumeDetailsLayout title=\"References\" id=\"references\">\r\n      <StyledNavLink\r\n        to=\"/contact\"\r\n        label=\"Available upon request.\"></StyledNavLink>\r\n    </ResumeDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default References;\r\n","export interface ISkill {\r\n    title: string;\r\n    competency: number;\r\n    categories: string[]\r\n}\r\n\r\nexport interface ICategory {\r\n    name: string;\r\n    color: string;\r\n}\r\n\r\nconst skills: ISkill[] = [\r\n    {\r\n        title: 'Javascript',\r\n        competency: 4,\r\n        categories: ['Web Development', 'Languages', 'Javascript'],\r\n    },\r\n    {\r\n        title: 'React',\r\n        competency: 3,\r\n        categories: ['Web Development', 'Javascript'],\r\n    },\r\n    {\r\n        title: 'Typescript',\r\n        competency: 4,\r\n        categories: ['Web Development', 'Languages', 'Javascript'],\r\n    },\r\n    {\r\n        title: 'HTML + SASS / SCSS / CSS',\r\n        competency: 3,\r\n        categories: ['Web Development', 'Languages'],\r\n    }\r\n].map((skill) => ({ ...skill, categories: skill.categories.sort() }));\r\n\r\n// this is a list of colors that I like. The length should be == to the\r\n// number of categories. Re-arrange this list until you find a pattern you like.\r\nconst colors = [\r\n    '#6968b3',\r\n    '#37b1f5',\r\n    '#40494e',\r\n    '#515dd4',\r\n    '#e47272',\r\n    '#cc7b94',\r\n    '#3896e2',\r\n    '#c3423f',\r\n    '#d75858',\r\n    '#747fff',\r\n    '#64cb7b',\r\n];\r\n\r\nconst categories: ICategory[] = [\r\n    ...new Set(skills.reduce<string[]>((acc, { categories }) => acc.concat(categories), [])),\r\n]\r\n    .sort()\r\n    .map((category, index) => ({\r\n        name: category,\r\n        color: colors[index],\r\n    }));\r\n\r\nexport { categories, skills };","import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nconst ImageListContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ImageListContext.displayName = 'ImageListContext';\n}\n\nexport default ImageListContext;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getImageListItemUtilityClass(slot) {\n  return generateUtilityClass('MuiImageListItem', slot);\n}\nconst imageListItemClasses = generateUtilityClasses('MuiImageListItem', ['root', 'img', 'standard', 'woven', 'masonry', 'quilted']);\nexport default imageListItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"cols\", \"component\", \"rows\", \"style\"];\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { integerPropType } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport ImageListContext from '../ImageList/ImageListContext';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport isMuiElement from '../utils/isMuiElement';\nimport imageListItemClasses, { getImageListItemUtilityClass } from './imageListItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    variant\n  } = styleProps;\n  const slots = {\n    root: ['root', variant],\n    img: ['img']\n  };\n  return composeClasses(slots, getImageListItemUtilityClass, classes);\n};\n\nconst ImageListItemRoot = styled('li', {\n  name: 'MuiImageListItem',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return [{\n      [`& .${imageListItemClasses.img}`]: styles.img\n    }, styles.root, styles[styleProps.variant]];\n  }\n})(({\n  styleProps\n}) => _extends({\n  display: 'inline-block',\n  position: 'relative',\n  lineHeight: 0\n}, styleProps.variant === 'standard' && {\n  // For titlebar under list item\n  display: 'flex',\n  flexDirection: 'column'\n}, styleProps.variant === 'woven' && {\n  height: '100%',\n  alignSelf: 'center',\n  '&:nth-of-type(even)': {\n    height: '70%'\n  }\n}, {\n  [`& .${imageListItemClasses.img}`]: _extends({\n    objectFit: 'cover',\n    width: '100%',\n    height: '100%'\n  }, styleProps.variant === 'standard' && {\n    height: 'auto',\n    flexGrow: 1\n  })\n}));\nconst ImageListItem = /*#__PURE__*/React.forwardRef(function ImageListItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiImageListItem'\n  }); // TODO: - Use jsdoc @default?: \"cols rows default values are for docs only\"\n\n  const {\n    children,\n    className,\n    cols = 1,\n    component = 'li',\n    rows = 1,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    rowHeight = 'auto',\n    gap,\n    variant\n  } = React.useContext(ImageListContext);\n  let height = 'auto';\n\n  if (variant === 'woven') {\n    height = undefined;\n  } else if (rowHeight !== 'auto') {\n    height = rowHeight * rows + gap * (rows - 1);\n  }\n\n  const styleProps = _extends({}, props, {\n    cols,\n    component,\n    gap,\n    rowHeight,\n    rows,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(ImageListItemRoot, _extends({\n    as: component,\n    className: clsx(classes.root, classes[variant], className),\n    ref: ref,\n    style: _extends({\n      height,\n      gridColumnEnd: variant !== 'masonry' ? `span ${cols}` : undefined,\n      gridRowEnd: variant !== 'masonry' ? `span ${rows}` : undefined,\n      marginBottom: variant === 'masonry' ? gap : undefined\n    }, style),\n    styleProps: styleProps\n  }, other, {\n    children: React.Children.map(children, child => {\n      if (! /*#__PURE__*/React.isValidElement(child)) {\n        return null;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (isFragment(child)) {\n          console.error([\"Material-UI: The ImageListItem component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n        }\n      }\n\n      if (child.type === 'img' || isMuiElement(child, ['Image'])) {\n        return /*#__PURE__*/React.cloneElement(child, {\n          className: clsx(classes.img, child.props.className)\n        });\n      }\n\n      return child;\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ImageListItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `<img>`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Width of the item in number of grid columns.\n   * @default 1\n   */\n  cols: integerPropType,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Height of the item in number of grid rows.\n   * @default 1\n   */\n  rows: integerPropType,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default ImageListItem;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getImageListUtilityClass(slot) {\n  return generateUtilityClass('MuiImageList', slot);\n}\nconst imageListClasses = generateUtilityClasses('MuiImageList', ['root', 'masonry', 'quilted', 'standard', 'woven']);\nexport default imageListClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"cols\", \"component\", \"rowHeight\", \"gap\", \"style\", \"variant\"];\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { integerPropType } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getImageListUtilityClass } from './imageListClasses';\nimport ImageListContext from './ImageListContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    variant\n  } = styleProps;\n  const slots = {\n    root: ['root', variant]\n  };\n  return composeClasses(slots, getImageListUtilityClass, classes);\n};\n\nconst ImageListRoot = styled('ul', {\n  name: 'MuiImageList',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return [styles.root, styles[styleProps.variant]];\n  }\n})(({\n  styleProps\n}) => {\n  /* Styles applied to the root element. */\n  return _extends({\n    display: 'grid',\n    overflowY: 'auto',\n    listStyle: 'none',\n    padding: 0,\n    // Add iOS momentum scrolling for iOS < 13.0\n    WebkitOverflowScrolling: 'touch'\n  }, styleProps.variant === 'masonry' && {\n    display: 'block'\n  });\n});\nconst ImageList = /*#__PURE__*/React.forwardRef(function ImageList(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiImageList'\n  });\n\n  const {\n    children,\n    className,\n    cols = 2,\n    component = 'ul',\n    rowHeight = 'auto',\n    gap = 4,\n    style: styleProp,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const contextValue = React.useMemo(() => ({\n    rowHeight,\n    gap,\n    variant\n  }), [rowHeight, gap, variant]);\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      // Detect Internet Explorer 8+\n      if (document !== undefined && 'objectFit' in document.documentElement.style === false) {\n        console.error(['Material-UI: ImageList v5+ no longer natively supports Internet Explorer.', 'Use v4 of this component instead, or polyfill CSS object-fit.'].join('\\n'));\n      }\n    }\n  }, []);\n  const style = variant === 'masonry' ? _extends({\n    columnCount: cols,\n    columnGap: gap\n  }, styleProp) : _extends({\n    gridTemplateColumns: `repeat(${cols}, 1fr)`,\n    gap\n  }, styleProp);\n\n  const styleProps = _extends({}, props, {\n    component,\n    gap,\n    rowHeight,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(ImageListRoot, _extends({\n    as: component,\n    className: clsx(classes.root, classes[variant], className),\n    ref: ref,\n    style: style,\n    styleProps: styleProps\n  }, other, {\n    children: /*#__PURE__*/_jsx(ImageListContext.Provider, {\n      value: contextValue,\n      children: children\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ImageList.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `ImageListItem`s.\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Number of columns.\n   * @default 2\n   */\n  cols: integerPropType,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The gap between items in px.\n   * @default 4\n   */\n  gap: PropTypes.number,\n\n  /**\n   * The height of one row in px.\n   * @default 'auto'\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['masonry', 'quilted', 'standard', 'woven']), PropTypes.string])\n} : void 0;\nexport default ImageList;","import { Box, Button, ButtonProps, Theme, styled } from '@material-ui/core';\r\nimport { ICategory, ISkill } from '../../../data/resume/skills';\r\n\r\nimport React from 'react';\r\nimport StyledButton from '../../StyledButton';\r\nimport StyledTypography from '../../StyledTypography';\r\nimport useBreakpoints from '../../../hooks/useBreakpoints';\r\n\r\nconst StyledButtonX = styled(StyledButton)<ButtonProps>(({ theme }) => {\r\n  return {\r\n    padding: `${theme.spacing(1)} ${theme.spacing(1)}`,\r\n    borderColor: 'transparent',\r\n  };\r\n});\r\n\r\ninterface ICategoryButtonProps {\r\n  label: string;\r\n  handleClick: (label: string) => void;\r\n  active: {\r\n    [key: string]: boolean;\r\n  };\r\n  isActive: boolean;\r\n}\r\n\r\nconst CategoryButton = ({\r\n  label,\r\n  handleClick,\r\n  active,\r\n  isActive,\r\n}: ICategoryButtonProps) => {\r\n  const { sm } = useBreakpoints();\r\n  const onClick = () => {\r\n    handleClick(label);\r\n  };\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          m: sm ? 0 : 1 / 2,\r\n        }}>\r\n        <StyledButtonX\r\n          onClick={onClick}\r\n          sx={{\r\n            ...(isActive\r\n              ? {\r\n                  color: (theme: Theme) => theme.palette.primary.main,\r\n                  borderColor: (theme: Theme) => theme.palette.primary.main,\r\n                }\r\n              : {}),\r\n          }}>\r\n          <StyledTypography\r\n            fontVariant=\"titleLight\"\r\n            capitalized={true}\r\n            bold={true}>\r\n            {label}\r\n          </StyledTypography>\r\n        </StyledButtonX>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryButton;\r\n","import {\r\n  Box,\r\n  CircularProgress,\r\n  Stack,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { ICategory, ISkill } from '../../../data/resume/skills';\r\n\r\nimport React from 'react';\r\n\r\nconst CompetencyIndicator = ({\r\n  value,\r\n  color,\r\n  label,\r\n}: {\r\n  value: number;\r\n  color: string;\r\n  label: string;\r\n}) => {\r\n  return (\r\n    <Box sx={{ position: 'relative' }}>\r\n      <CircularProgress\r\n        value={value}\r\n        variant=\"determinate\"\r\n        sx={{\r\n          color: color,\r\n        }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          top: 0,\r\n          left: 0,\r\n          bottom: 0,\r\n          right: 0,\r\n          position: 'absolute',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}>\r\n        <Typography variant=\"caption\" component=\"div\" color=\"text.secondary\">\r\n          {label || value}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\ninterface ISkillBadgeProps {\r\n  data: ISkill;\r\n  categories: ICategory[];\r\n}\r\n\r\nconst SkillBadge = ({ data, categories }: ISkillBadgeProps) => {\r\n  const { categories: skillCategories, competency, title } = data;\r\n  const skillColor = categories\r\n    .filter((cat) => skillCategories.includes(cat.name))\r\n    .map((cat) => cat.color)[0];\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ m: 1 }}>\r\n        <Stack alignItems=\"center\" textAlign=\"center\">\r\n          <CompetencyIndicator\r\n            value={(competency / 5.0) * 100.0}\r\n            color={skillColor}\r\n            label={`${competency}/5`}\r\n          />\r\n          <Typography>{title}</Typography>\r\n        </Stack>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SkillBadge;\r\n","import { ISkill, categories, skills } from '../../data/resume/skills';\r\nimport { ImageList, ImageListItem, Stack, Typography } from '@material-ui/core';\r\n\r\nimport CategoryButton from './Skills/CategoryButton';\r\nimport React from 'react';\r\nimport ResumeDetailsLayout from './ResumeDetailsLayout';\r\nimport SkillBadge from './Skills/SkillBadge';\r\nimport useBreakpoints from '../../hooks/useBreakpoints';\r\nimport { useState } from 'react';\r\n\r\ninterface IButtons {\r\n  All: boolean;\r\n  [key: string]: boolean;\r\n}\r\n\r\ninterface ISkillsState {\r\n  buttons: IButtons;\r\n  selectedSkill: string;\r\n}\r\n\r\nconst Skills = () => {\r\n  const { md, sm, lg } = useBreakpoints();\r\n  const [state, setState] = useState<ISkillsState>({\r\n    buttons: categories\r\n      .map((cat) => cat.name)\r\n      .reduce<IButtons>(\r\n        (obj, key) => ({\r\n          ...obj,\r\n          [key]: false,\r\n        }),\r\n        { All: true },\r\n      ),\r\n    selectedSkill: 'All',\r\n  });\r\n\r\n  const getSkillBadges = () => {\r\n    // search for true active categories\r\n    const actCat = Object.keys(state.buttons).reduce(\r\n      (cat, key) => (state.buttons[key] ? key : cat),\r\n      'All',\r\n    );\r\n\r\n    return skills\r\n      .sort((a, b) => {\r\n        let ret = 0;\r\n        if (a.competency > b.competency) ret = -1;\r\n        else if (a.competency < b.competency) ret = 1;\r\n        else if (a.categories[0] > b.categories[0]) ret = -1;\r\n        else if (a.categories[0] < b.categories[0]) ret = 1;\r\n        else if (a.title > b.title) ret = 1;\r\n        else if (a.title < b.title) ret = -1;\r\n        return ret;\r\n      })\r\n      .filter((skill) => actCat === 'All' || skill.categories.includes(actCat))\r\n      .map((skill) => (\r\n        <ImageListItem key={skill.title}>\r\n          <SkillBadge categories={categories} data={skill} />\r\n        </ImageListItem>\r\n      ));\r\n  };\r\n\r\n  const getButtons = () => {\r\n    return Object.keys(state.buttons).map((key) => (\r\n      <CategoryButton\r\n        label={key}\r\n        key={key}\r\n        active={state.buttons}\r\n        isActive={state.selectedSkill === key}\r\n        handleClick={handleChildClick}\r\n      />\r\n    ));\r\n  };\r\n\r\n  const handleChildClick = (label: string) => {\r\n    setState((prevState: ISkillsState) => {\r\n      // Toggle button that was clicked. Turn all other buttons off.\r\n      const buttons = Object.keys(prevState.buttons).reduce<IButtons>(\r\n        (obj, key) => ({\r\n          ...obj,\r\n          [key]: label === key && !prevState.buttons[key],\r\n        }),\r\n        { All: false },\r\n      );\r\n      // Turn on 'All' button if other buttons are off\r\n      buttons.All = !Object.keys(prevState.buttons).some((key) => buttons[key]);\r\n      return { ...prevState, ...{ buttons, selectedSkill: label } };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ResumeDetailsLayout title=\"Skills\" id=\"skills\">\r\n      <Typography color=\"text.disabled\">\r\n        Note: I think these sections are silly, but everyone seems to have one.\r\n        Here is a *mostly* honest overview of my skills.\r\n      </Typography>\r\n      <Stack\r\n        direction=\"row\"\r\n        sx={{\r\n          flexWrap: 'wrap',\r\n        }}>\r\n        {getButtons()}\r\n      </Stack>\r\n      <ImageList cols={sm ? 1 : md ? 3 : 5}>{getSkillBadges()}</ImageList>\r\n    </ResumeDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import { IconButton, Link, Typography } from '@material-ui/core';\r\n\r\nimport React from 'react';\r\nimport ResumeDetailsLayout from './ResumeDetailsLayout';\r\n\r\nconst Summary = () => {\r\n  return (\r\n    <>\r\n      <ResumeDetailsLayout title=\"Summary\" id=\"summary\">\r\n        <Typography>\r\n          Self-directed, insight-oriented, Technical Architect/Software Engineer\r\n          and CSM with an excellent experience of 9+ years in e2e authoring\r\n          solutions and leading teams towards complex and dynamic applications\r\n          including early discovery, designing, developing, analyzing, and\r\n          implementing in cloud technologies like Azure with modern stacks and\r\n          best practices.\r\n        </Typography>\r\n        <Typography>\r\n          Demonstrating strong critical thinking, decision making, problem\r\n          solving, time management and multi-tasking.\r\n        </Typography>\r\n      </ResumeDetailsLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n","import { Box, Stack } from '@material-ui/core';\r\nimport React, { Fragment } from 'react';\r\n\r\nimport Certifications from '../components/Resume/Certifications';\r\nimport Education from '../components/Resume/Education';\r\nimport Experience from '../components/Resume/Experience';\r\nimport PageContentLayout from '../layout/PageContentLayout';\r\nimport PageLayout from '../layout/PageLayout';\r\nimport { ReactNode } from 'react';\r\nimport References from '../components/Resume/References';\r\nimport Skills from '../components/Resume/Skills';\r\nimport StyledLink from '../components/StyledLink';\r\nimport Summary from '../components/Resume/Summary';\r\n\r\ninterface Section {\r\n  title: string;\r\n  details: ReactNode;\r\n}\r\nconst sections: Section[] = [\r\n  {\r\n    title: 'Summary',\r\n    details: <Summary />,\r\n  },\r\n  {\r\n    title: 'Education',\r\n    details: <Education />,\r\n  },\r\n  {\r\n    title: 'Experience',\r\n    details: <Experience />,\r\n  },\r\n  {\r\n    title: 'Skills',\r\n    details: <Skills />,\r\n  },\r\n  {\r\n    title: 'Certifications',\r\n    details: <Certifications />,\r\n  },\r\n  {\r\n    title: 'References',\r\n    details: <References />,\r\n  },\r\n];\r\n\r\nconst ResumeNavigation = () => {\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      sx={{\r\n        flexWrap: 'wrap',\r\n      }}>\r\n      {sections.map((section: Section) => (\r\n        <StyledLink\r\n          key={section.title}\r\n          to={`#${section.title.toLowerCase()}`}\r\n          label={section.title}\r\n          bold={true}\r\n          capitalized={true}\r\n          typographyProps={{\r\n            variant: 'overline',\r\n            mr: 2,\r\n          }}\r\n        />\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\ninterface IResumeProps {}\r\n\r\nconst Resume = ({}: IResumeProps) => {\r\n  const pageName = 'Resume';\r\n  return (\r\n    <>\r\n      <PageLayout title={pageName} description={pageName}>\r\n        <PageContentLayout header={pageName} subHeader={<ResumeNavigation />}>\r\n          <Stack spacing={2}>\r\n            {sections.map((section: Section) => (\r\n              <Box key={section.title} display=\"flex\" pb={2}>\r\n                {section.details}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        </PageContentLayout>\r\n      </PageLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Resume;\r\n"],"sourceRoot":""}