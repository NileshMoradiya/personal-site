{"version":3,"sources":["components/PageSectionLayout.tsx","components/Stats/StatsDetailsLayout.tsx","components/Stats/StatsTable.tsx","components/Stats/Age.tsx","utils/dateTimeUtil.ts","data/stats/stats.tsx","components/Stats/PersonalStats.tsx","components/Stats/SiteStats.tsx","pages/Stats.tsx"],"names":["PageSectionLayout","title","children","id","spacing","sx","width","bold","capitalized","gutterBottom","variant","spaced","StatsDetailsLayout","props","StatsRow","label","link","value","format","TableRow","TableCell","StyledLink","to","CircularProgress","size","StatsTable","stats","TableContainer","Table","TableBody","map","stat","Age","birthDate","useState","age","setAge","useEffect","timer","setInterval","birthTime","getTime","Date","now","toFixed","tick","clearInterval","BROWSER_TIMEZONE","Intl","DateTimeFormat","resolvedOptions","timeZone","personalStats","key","siteStats","x","date","utcToZonedTime","PersonalStats","SiteStats","initialData","setSiteStats","fetchData","useCallback","a","fetch","cache","res","json","resData","field","Object","keys","includes","sections","Stats","pageName","PageLayout","description","PageContentLayout","header","Stack","section","index","Box","display","pb"],"mappings":"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","file":"static/js/7.7acb33bd.chunk.js","sourcesContent":["import React, { ReactNode } from 'react';\r\n\r\nimport { Stack } from '@mui/material';\r\nimport StyledTypography from './StyledTypography';\r\n\r\nexport interface IPageSectionLayoutProps {\r\n  id?: string;\r\n  title: ReactNode;\r\n  children: ReactNode;\r\n}\r\n\r\nconst PageSectionLayout = ({\r\n  title,\r\n  children,\r\n  id,\r\n}: IPageSectionLayoutProps) => (\r\n  <>\r\n    <Stack\r\n      spacing={2}\r\n      id={id}\r\n      sx={{\r\n        width: '100%',\r\n      }}>\r\n      {typeof title === 'string' && (\r\n        <StyledTypography\r\n          bold={true}\r\n          capitalized={true}\r\n          gutterBottom={true}\r\n          variant=\"body1\"\r\n          spaced={true}>\r\n          {title}\r\n        </StyledTypography>\r\n      )}\r\n      {typeof title !== 'string' && <>{title}</>}\r\n      {children}\r\n    </Stack>\r\n  </>\r\n);\r\n\r\nexport default PageSectionLayout;\r\n","import PageSectionLayout, {\r\n  IPageSectionLayoutProps,\r\n} from '../PageSectionLayout';\r\n\r\nimport React from 'react';\r\n\r\ninterface IStatsDetailsLayoutProps {}\r\n\r\nconst StatsDetailsLayout = (\r\n  props: IStatsDetailsLayoutProps & IPageSectionLayoutProps,\r\n) => <PageSectionLayout {...props} />;\r\n\r\nexport default StatsDetailsLayout;\r\n","import {\n  CircularProgress,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from '@mui/material';\nimport React, { ReactNode } from 'react';\n\nimport { IStats } from '../../data/stats/stats';\nimport StyledLink from '../StyledLink';\n\ninterface IStatsRowProps {\n  label: string;\n  value?: any;\n  link?: string;\n  format?: (value: any) => ReactNode;\n}\n\nconst StatsRow = ({\n  label,\n  link,\n  value,\n  format = (value) => value,\n}: IStatsRowProps) => (\n  <TableRow>\n    <TableCell sx={{ width: '50%' }}>{label}</TableCell>\n    <TableCell sx={{ width: '50%' }}>\n      {link ? (\n        <StyledLink to={link} label={format(value) || value}></StyledLink>\n      ) : (\n        format(value) || <CircularProgress size={16} />\n      )}\n    </TableCell>\n  </TableRow>\n);\n\ninterface IStatsTableProps {\n  stats: IStats[];\n}\n\nconst StatsTable = ({ stats }: IStatsTableProps) => (\n  <TableContainer>\n    <Table>\n      <TableBody>\n        {stats.map((stat: IStats) => (\n          <StatsRow\n            format={stat.format}\n            key={stat.label}\n            label={stat.label}\n            link={stat.link}\n            value={stat.value}\n          />\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>\n);\n\nexport default StatsTable;\n","import React, { useEffect, useState } from 'react';\r\n\r\ninterface IAgeProps {\r\n  birthDate: Date;\r\n}\r\n\r\nconst Age = ({ birthDate }: IAgeProps) => {\r\n  const [age, setAge] = useState<string>();\r\n\r\n  const tick = () => {\r\n    const divisor = 1000 * 60 * 60 * 24 * 365.2421897;\r\n    const birthTime = birthDate.getTime();\r\n    setAge(((Date.now() - birthTime) / divisor).toFixed(11));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => tick(), 25);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return <>{age}</>;\r\n};\r\n\r\nexport default Age;\r\n","import { utcToZonedTime } from 'date-fns-tz';\r\n\r\nconst BROWSER_TIMEZONE = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n\r\nexport const toLocalDate = (date: Date | string | number): Date => {\r\n    return utcToZonedTime(\r\n        date, BROWSER_TIMEZONE,\r\n    )\r\n}","import React, { ReactNode } from 'react';\r\n\r\nimport Age from '../../components/Stats/Age';\r\nimport { format } from 'date-fns';\r\nimport { toLocalDate } from '../../utils/dateTimeUtil';\r\n\r\nexport interface IStats {\r\n  key: string;\r\n  label: string;\r\n  value?: ReactNode;\r\n  link?: string;\r\n  format?: (value: any) => ReactNode;\r\n}\r\n\r\nconst personalStats: IStats[] = [\r\n  {\r\n    key: 'age',\r\n    label: 'Current age',\r\n    value: <Age birthDate={new Date('1990-10-21T12:05:00')} />,\r\n  },\r\n  {\r\n    key: 'location',\r\n    label: 'Current city',\r\n    value: 'Surat, Gujarat, India',\r\n  },\r\n];\r\n\r\nconst siteStats: IStats[] = [\r\n  // {\r\n  //   label: 'Stars this repository has on github',\r\n  //   key: 'stargazers_count',\r\n  //   link: 'https://github.com/NileshMoradiya/personal-site-private/stargazers',\r\n  // },\r\n  // {\r\n  //   label: 'Number of people watching this repository',\r\n  //   key: 'subscribers_count',\r\n  //   link: 'https://github.com/NileshMoradiya/personal-site-private/stargazers',\r\n  // },\r\n  // {\r\n  //   label: 'Number of forks',\r\n  //   key: 'forks',\r\n  //   link: 'https://github.com/NileshMoradiya/personal-site-private/network',\r\n  // },\r\n  // {\r\n  //   key: 'numberOfSpoons',\r\n  //   label: 'Number of spoons',\r\n  //   value: '0',\r\n  // },\r\n  // {\r\n  //   key: 'numberOfLintWarning',\r\n  //   label: 'Number of linter warnings',\r\n  //   value: '0', // enforced via github workflow\r\n  // },\r\n  // {\r\n  //   label: 'Open github issues',\r\n  //   key: 'open_issues_count',\r\n  //   link: 'https://github.com/NileshMoradiya/personal-site-private/issues',\r\n  // },\r\n  {\r\n    label: 'Last updated at',\r\n    key: 'pushed_at',\r\n    // link: 'https://github.com/NileshMoradiya/personal-site-private/commits',\r\n    format: (x: Date) => {\r\n      return x ? format(toLocalDate(x), 'MMM do, yyyy HH:mm:ss') : x;\r\n    },\r\n  },\r\n  //  {\r\n  //    // TODO update this with a pre-commit hook\r\n  /* find . | grep \".js\" | grep -vE \".min.js|node_modules|.git|.json\" |\r\n      xargs -I file cat file | wc -l */\r\n  //    label: 'Lines of Javascript powering this website',\r\n  //    key: 'numberOfLines',\r\n  //    value: '2115',\r\n  //    link: 'https://github.com/NileshMoradiya/personal-site-private/graphs/contributors',\r\n  //  },\r\n];\r\n\r\nconst siteStatsApiUrl =\r\n  'https://api.github.com/repos/NileshMoradiya/personal-site';\r\nexport { personalStats, siteStats, siteStatsApiUrl };\r\n","import React from 'react';\r\nimport StatsDetailsLayout from './StatsDetailsLayout';\r\nimport StatsTable from './StatsTable';\r\nimport { personalStats } from '../../data/stats/stats';\r\n\r\nconst PersonalStats = () => {\r\n  return (\r\n    <StatsDetailsLayout title=\"Some stats about me\">\r\n      <StatsTable stats={personalStats} />\r\n    </StatsDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default PersonalStats;\r\n","import {\r\n  IStats,\r\n  siteStats as initialData,\r\n  siteStatsApiUrl,\r\n} from '../../data/stats/stats';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\n\r\nimport StatsDetailsLayout from './StatsDetailsLayout';\r\nimport StatsTable from './StatsTable';\r\n\r\nconst SiteStats = () => {\r\n  const [siteStats, setSiteStats] = useState<IStats[]>(initialData);\r\n  // TODO think about persisting this somewhere\r\n  const fetchData = useCallback(async () => {\r\n    // request must be authenticated if private\r\n    const res = await fetch(siteStatsApiUrl, {\r\n      cache: 'reload',\r\n    });\r\n    const resData = await res.json();\r\n    setSiteStats(\r\n      initialData.map((field) => ({\r\n        ...field,\r\n        value: Object.keys(resData).includes(field.key)\r\n          ? resData[field.key]\r\n          : field.value,\r\n      })),\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return (\r\n    <StatsDetailsLayout title=\"Some stats about this site\">\r\n      <StatsTable stats={siteStats} />\r\n    </StatsDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default SiteStats;\r\n","import { Box, Stack } from '@mui/material';\r\nimport React, { ReactNode } from 'react';\r\n\r\nimport PageContentLayout from '../layout/PageContentLayout';\r\nimport PageLayout from '../layout/PageLayout';\r\nimport PersonalStats from '../components/Stats/PersonalStats';\r\nimport SiteStats from '../components/Stats/SiteStats';\r\n\r\nconst sections: ReactNode[] = [\r\n  <PersonalStats key=\"personal-stats\" />,\r\n  <SiteStats key=\"site-stats\" />,\r\n];\r\n\r\ninterface IStatsProps {}\r\n\r\nconst Stats = ({}: IStatsProps) => {\r\n  const pageName = 'Stats';\r\n  return (\r\n    <>\r\n      <PageLayout title={pageName} description={pageName}>\r\n        <PageContentLayout header={pageName}>\r\n          <Stack spacing={2}>\r\n            {sections.map((section: ReactNode, index: number) => (\r\n              <Box key={`stats-section-${index}`} display=\"flex\" pb={2}>\r\n                {section}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        </PageContentLayout>\r\n      </PageLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n"],"sourceRoot":""}