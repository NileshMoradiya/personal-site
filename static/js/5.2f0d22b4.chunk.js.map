{"version":3,"sources":["components/PageSectionLayout.tsx","data/projects.ts","components/Project/Project.tsx","components/Project/ProjectDetailsLayout.tsx","components/Project/WorkProjects.tsx","pages/Projects.tsx"],"names":["PageSectionLayout","title","children","id","spacing","sx","width","bold","capitalized","gutterBottom","variant","spaced","projects","description","grade","technologies","Project","Stack","StyledTypography","fontVariant","Typography","Box","display","fontWeight","color","component","join","ProjectDetailsLayout","props","WorkProjects","map","project","index","sections","Projects","pageName","PageLayout","PageContentLayout","header","subHeader","section","pb","typography"],"mappings":"sHAAA,iCAuCeA,IA5BW,SAAC,GAAD,IACxBC,EADwB,EACxBA,MACAC,EAFwB,EAExBA,SACAC,EAHwB,EAGxBA,GAHwB,OAKxB,mCACE,eAAC,IAAD,CACEC,QAAS,EACTD,GAAIA,EACJE,GAAI,CACFC,MAAO,QAJX,UAMoB,kBAAVL,GACN,cAAC,IAAD,CACEM,MAAM,EACNC,aAAa,EACbC,cAAc,EACdC,QAAQ,QACRC,QAAQ,EALV,SAMGV,IAGa,kBAAVA,GAAsB,mCAAGA,IAChCC,S,+GC+DQU,EA1Fc,CAC3B,CACEX,MAAO,OACPY,YAAa,uIACbC,MAAO,QACPC,aAAc,CAAC,YAAa,UAAW,QAAS,aAElD,CACEd,MAAO,QACPY,YAAa,gKACbC,MAAO,aACPC,aAAc,CAAC,OAAQ,YAAa,sBAAuB,UAAW,QAAS,WAEjF,CACEd,MAAO,OACPY,YAAa,uHACbC,MAAO,aACPC,aAAc,CAAC,OAAQ,cAAe,sBAAuB,UAAW,QAAS,WAEnF,CACEd,MAAO,iBACPY,YAAa,qIACbC,MAAO,aACPC,aAAc,CAAC,YAAa,UAE9B,CACEd,MAAO,SACPY,YAAY,iJACZC,MAAO,QACPC,aAAc,CAAC,UAAW,MAAO,aAEnC,CACEd,MAAO,OACPY,YAAY,kHACZC,MAAO,QACPC,aAAc,CAAC,YAAa,UAAW,UAEzC,CACEd,MAAO,QACPY,YAAY,uEACZC,MAAO,aACPC,aAAc,CAAC,OAAQ,sBAAuB,UAAW,QAAS,WAEpE,CACEd,MAAO,cACPY,YAAa,sFACbC,MAAO,QACPC,aAAc,CAAC,OAAQ,MAAO,kBAAmB,WAEnD,CACEd,MAAO,WACPY,YAAa,gJAGbC,MAAO,QACPC,aAAc,CAAC,OAAQ,kBAAmB,SAAU,QAEtD,CACEd,MAAO,eACPY,YAAa,sFACbC,MAAO,QACPC,aAAc,CAAC,OAAQ,gBAAiB,kBAAmB,WAE7D,CACEd,MAAO,aACPa,MAAO,QACPD,YAAa,qFACbE,aAAc,CAAC,OAAQ,cAAe,kBAAmB,WAE3D,CACEd,MAAO,SACPY,YAAa,2GACbC,MAAO,QACPC,aAAc,CAAC,OAAQ,cAAe,kBAAmB,WAE3D,CACEd,MAAO,eACPY,YAAa,qFACbC,MAAO,QACPC,aAAc,CAAC,OAAQ,cAAe,sBAAuB,WAE/D,CACEd,MAAO,OACPY,YAAa,6FACbC,MAAO,QACPC,aAAc,CAAC,UAAW,MAAO,Y,eC5DtBC,EA1BC,SAAC,GAAoD,IAAlDf,EAAiD,EAAjDA,MAAOc,EAA0C,EAA1CA,aAAcF,EAA4B,EAA5BA,YACtC,OACE,mCACE,eAACI,EAAA,EAAD,CAAOb,QAAS,EAAhB,UACE,cAACc,EAAA,EAAD,CAAkBC,YAAY,aAAaX,aAAa,EAAxD,SACGP,IAEH,cAACmB,EAAA,EAAD,UAAaP,IACb,eAACQ,EAAA,EAAD,CAAKC,QAAQ,SAAb,UACE,eAACF,EAAA,EAAD,CACEV,QAAQ,QACRY,QAAQ,SACRC,WAAW,OACXC,MAAM,gBACNC,UAAU,OALZ,2BAMiB,OAEjB,cAACL,EAAA,EAAD,CAAYV,QAAQ,QAAQY,QAAQ,SAApC,SACGP,EAAaW,KAAK,iB,SCZhBC,EAJc,SAC3BC,GAD2B,OAExB,cAAC5B,EAAA,EAAD,eAAuB4B,KCMbC,EAVM,WACnB,OACE,cAAC,EAAD,CAAsB5B,MAAO,6BAA7B,SACGW,EAASkB,KAAI,SAACC,EAAmBC,GAApB,OACZ,cAAC,EAAD,eAAsCD,GAAtC,kBAAyBC,UCH3BC,EAAwB,CAAC,cAAC,EAAD,GAAkB,kBA4BlCC,UAxBE,SAAC,GAAwB,eACxC,IAAMC,EAAW,WACjB,OACE,mCACE,cAACC,EAAA,EAAD,CAAYnC,MAAOkC,EAAUtB,YAAasB,EAA1C,SACE,eAACE,EAAA,EAAD,CACEC,OAAQH,EACRI,UAAU,sDAFZ,UAGE,cAACtB,EAAA,EAAD,CAAOb,QAAS,EAAhB,SACG6B,EAASH,KAAI,SAACU,EAAoBR,GAArB,OACZ,cAACX,EAAA,EAAD,CAAuCC,QAAQ,OAAOmB,GAAI,EAA1D,SACGD,GADH,2BAA8BR,SAKlC,cAACZ,EAAA,EAAD,CAAYsB,WAAW,QAAQlB,MAAM,gBAArC","file":"static/js/5.2f0d22b4.chunk.js","sourcesContent":["import React, { ReactNode } from 'react';\r\n\r\nimport { Stack } from '@material-ui/core';\r\nimport StyledTypography from './StyledTypography';\r\n\r\nexport interface IPageSectionLayoutProps {\r\n  id?: string;\r\n  title: ReactNode;\r\n  children: ReactNode;\r\n}\r\n\r\nconst PageSectionLayout = ({\r\n  title,\r\n  children,\r\n  id,\r\n}: IPageSectionLayoutProps) => (\r\n  <>\r\n    <Stack\r\n      spacing={2}\r\n      id={id}\r\n      sx={{\r\n        width: '100%',\r\n      }}>\r\n      {typeof title === 'string' && (\r\n        <StyledTypography\r\n          bold={true}\r\n          capitalized={true}\r\n          gutterBottom={true}\r\n          variant=\"body1\"\r\n          spaced={true}>\r\n          {title}\r\n        </StyledTypography>\r\n      )}\r\n      {typeof title !== 'string' && <>{title}</>}\r\n      {children}\r\n    </Stack>\r\n  </>\r\n);\r\n\r\nexport default PageSectionLayout;\r\n","export interface IProject {\n  title: string;\n  description: string;\n  grade?: 'Enterprise' | 'Other',\n  technologies: string[]\n}\n\nconst projects: IProject[] = [\n  {\n    title: 'A4RE',\n    description: 'A networking app for the real-estate agents and a property search portal for the property seeker ranging from housing to industrial.',\n    grade: 'Other',\n    technologies: ['.NET CORE', 'Flutter', 'Azure', 'CosmosDB']\n  },\n  {\n    title: 'GITDB',\n    description: 'A web app for importing and analyzing millions of real-estate transactions from different vendors across the world for high level executives at the CBRE Inc.',\n    grade: 'Enterprise',\n    technologies: ['.NET', '.NET CORE', 'ASP.NET Web API 2.0', 'Angular', 'Azure', 'MS SQL']\n  },\n  {\n    title: 'ERIX',\n    description: \"A web app to monitor and predict future trends of various variables of the real-estate for the CBRE Inc.'s clients. \",\n    grade: 'Enterprise',\n    technologies: ['.NET', 'ASP.NET MVC', 'ASP.NET Web API 2.0', 'Angular', 'Azure', 'MS SQL']\n  },\n  {\n    title: 'CW Integration',\n    description: 'A multi-node integration application to synchronize data across the application topology of various CMS like MSD, SFDC, Yardi etc.',\n    grade: 'Enterprise',\n    technologies: ['.NET CORE', 'Azure']\n  },\n  {\n    title: 'Ticker',\n    description: `A multi-platform app to monitor connected car's driver's driving behaviour for Ticker Limited to provide optimal decision on insurance policy.`,\n    grade: 'Other',\n    technologies: ['Node.js', 'AWS', 'DynamoDB']\n  },\n  {\n    title: 'LOOM',\n    description: `A E-Com app for carpet products with ML integration to visualize carpet's realtime esthetic on targetted place.`,\n    grade: 'Other',\n    technologies: ['.NET CORE', 'Shopify', 'Azure']\n  },\n  {\n    title: 'PLUSX',\n    description: `A real-estate property management portal for the CBRE Inc.'s agents.`,\n    grade: 'Enterprise',\n    technologies: ['.NET', 'ASP.NET Web API 2.0', 'Angular', 'Azure', 'MS SQL']\n  },\n  {\n    title: 'SPINACH POS',\n    description: 'A POS software with h/w integration such as cash drawer for the restaurant outlets.',\n    grade: 'Other',\n    technologies: ['.NET', 'WPF', 'ASP.NET Web API', 'MS SQL']\n  },\n  {\n    title: 'Badge Us',\n    description: 'A mobile app for promoting to achieve more. '\n      + 'Badge Us is connected to your achievements in '\n      + 'academics, sports and social part of your the life.',\n    grade: 'Other',\n    technologies: ['.NET', 'ASP.NET Web API', 'MS SQL', 'iOS']\n  },\n  {\n    title: 'ShareExpense',\n    description: 'An application to manage expenses among the group based participating on the spent.',\n    grade: 'Other',\n    technologies: ['.NET', 'Windows Phone', 'ASP.NET Web API', 'MS SQL']\n  },\n  {\n    title: 'GoByMobile',\n    grade: 'Other',\n    description: 'An multi-platform application for searching and booking for the restaurant tables.',\n    technologies: ['.NET', 'ASP.NET MVC', 'ASP.NET Web API', 'MS SQL']\n  },\n  {\n    title: 'CHITRA',\n    description: 'A web app for managing appointments and tasks allocation of the handicapped children for the caregivers.',\n    grade: 'Other',\n    technologies: ['.NET', 'ASP.NET MVC', 'ASP.NET Web API', 'MS SQL']\n  },\n  {\n    title: 'CrowdFunding',\n    description: 'A web app for raising contributions for the innovative projects and social causes.',\n    grade: 'Other',\n    technologies: ['.NET', 'ASP.NET MVC', 'ASP.NET Web API 2.0', 'MS SQL']\n  },\n  {\n    title: 'MARS',\n    description: 'A back office application for various reportings for the ticket sell business for Viagogo.',\n    grade: 'Other',\n    technologies: ['WinForm', 'WCF', 'MS SQL']\n  },\n\n];\n\nexport default projects;","import { Box, Stack, Typography } from '@material-ui/core';\r\n\r\nimport { IProject } from '../../data/projects';\r\nimport React from 'react';\r\nimport StyledTypography from '../StyledTypography';\r\n\r\nconst Project = ({ title, technologies, description }: IProject) => {\r\n  return (\r\n    <>\r\n      <Stack spacing={1}>\r\n        <StyledTypography fontVariant=\"titleLight\" capitalized={true}>\r\n          {title}\r\n        </StyledTypography>\r\n        <Typography>{description}</Typography>\r\n        <Box display=\"inline\">\r\n          <Typography\r\n            variant=\"body2\"\r\n            display=\"inline\"\r\n            fontWeight=\"bold\"\r\n            color=\"text.disabled\"\r\n            component=\"span\">\r\n            HL Tech Stack:{' '}\r\n          </Typography>\r\n          <Typography variant=\"body2\" display=\"inline\">\r\n            {technologies.join(', ')}\r\n          </Typography>\r\n        </Box>\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import PageSectionLayout, {\r\n  IPageSectionLayoutProps,\r\n} from '../PageSectionLayout';\r\n\r\nimport React from 'react';\r\n\r\ninterface IProjectDetailsLayoutProps {}\r\n\r\nconst ProjectDetailsLayout = (\r\n  props: IProjectDetailsLayoutProps & IPageSectionLayoutProps,\r\n) => <PageSectionLayout {...props} />;\r\n\r\nexport default ProjectDetailsLayout;\r\n","import projects, { IProject } from '../../data/projects';\r\n\r\nimport Project from './Project';\r\nimport ProjectDetailsLayout from './ProjectDetailsLayout';\r\nimport React from 'react';\r\n\r\nconst WorkProjects = () => {\r\n  return (\r\n    <ProjectDetailsLayout title={<></>}>\r\n      {projects.map((project: IProject, index: number) => (\r\n        <Project key={`project-${index}`} {...project} />\r\n      ))}\r\n    </ProjectDetailsLayout>\r\n  );\r\n};\r\n\r\nexport default WorkProjects;\r\n","import { Box, Stack, Typography } from '@material-ui/core';\r\nimport React, { ReactNode } from 'react';\r\n\r\nimport PageContentLayout from '../layout/PageContentLayout';\r\nimport PageLayout from '../layout/PageLayout';\r\nimport WorkProjects from '../components/Project/WorkProjects';\r\n\r\nconst sections: ReactNode[] = [<WorkProjects key=\"work-projects\" />];\r\n\r\ninterface IProjectsProps {}\r\n\r\nconst Projects = ({}: IProjectsProps) => {\r\n  const pageName = 'Projects';\r\n  return (\r\n    <>\r\n      <PageLayout title={pageName} description={pageName}>\r\n        <PageContentLayout\r\n          header={pageName}\r\n          subHeader=\"A selection of projects that I'm not too ashamed of\">\r\n          <Stack spacing={2}>\r\n            {sections.map((section: ReactNode, index: number) => (\r\n              <Box key={`projects-section-${index}`} display=\"flex\" pb={2}>\r\n                {section}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n          <Typography typography=\"body2\" color=\"text.disabled\">\r\n            (More projects are being added)\r\n          </Typography>\r\n        </PageContentLayout>\r\n      </PageLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"sourceRoot":""}